{"version":3,"sources":["webpack:///static/js/main.84ba1d98.js","webpack:///webpack/bootstrap d0a75847f0ac33b3997a","webpack:///./~/react-scripts/~/promise/lib/core.js","webpack:///./~/d3-force-gravity/dist/index.js","webpack:///./~/d3/build/d3.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react-scripts/~/asap/browser-raw.js","webpack:///./src/index.js","webpack:///./~/react-scripts/~/promise/lib/es6-extensions.js","webpack:///./~/react-scripts/~/promise/lib/rejection-tracking.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","this","TypeError","_45","_81","_65","_54","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_10","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_97","i","length","done","value","reason","_61","prototype","assertNumber","name","n","ForceGravity","x","arguments","undefined","y","nodes","acceleration","strength","minRadius","distanceTo","x1","y1","x2","y2","Math","sqrt","pow","computeAcceleration","nx","ny","distance","distanceCube","initialize","_","map","node","force","forEach","vx","vy","newAcceleration","_strength","_minRadius","_x","_y","global","factory","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","f","d","descending","number","variance","array","s","j","isNaN","deviation","v","extent","constant","identity","range","start","stop","step","max","ceil","Array","ticks","count","tickStep","floor","step0","abs","step1","log","LN10","error","e10","e5","e2","sturges","values","LN2","histogram","data","xz","domain","x0","tz","threshold","isArray","shift","pop","bin","bins","bisectRight","thresholds","slice","h","freedmanDiaconis","min","sort","scott","mean","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","Map","map$1","object","each","key","set","o","nest","apply","depth","createResult","setResult","keys","rollup","sortValues","keyValue","valuesByKey","result","get","entries","sortKey","sortKeys","k","createObject","setObject","createMap","setMap","order","Set","add","uniform","normal","mu","sigma","r","logNormal","randomNormal","exp","irwinHall","bates","randomIrwinHall","exponential","lambda","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","easeCubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","area","polygon","centroid","cross","lexicographicOrder","computeUpperHullIndexes","points","size","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","point","y0","inside","length$1","xa","ya","xb","yb","perimeter","Path","_x0","_y0","_x1","_y1","path","tree_add","cover","tree","parent","xm","ym","xp","yp","bottom","_root","leaf","next","addAll","yz","Infinity","tree_cover","z","tree_data","visit","tree_extent","Quad","tree_find","radius","q","x3","y3","quads","dx","dy","d2","tree_remove","retainer","previous","removeAll","remove","tree_root","tree_size","tree_visit","callback","child","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","Quadtree","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","e","abort","end","noabort","maybeNotify","queue","concurrency","constant$1","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","arc","buffer","r0","a0","a1","da","context","epsilon$1","tau$2","moveTo","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","p0","p1","pi$2","oc","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","Linear","_context","curveLinear","line","defined0","output","curve","defined","lineStart","lineEnd","x$$","y$$","area$1","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","index","arcs","pa","Radial","_curve","curveRadial","radial","radialLine","l","angle","radialLine$1","curveRadialLinear","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","symbol","type","draw","circle","that","bezierCurveTo","Basis","basis","BasisClosed","basisClosed","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","sign","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","none","series","none$1","stackValue","stack","oz","kz","sz","sij","ki","si","offset","slice$2","expand","silhouette","wiggle","s2","sij0","sij1","s3","sk","skj0","skj1","ascending$1","sums","sum$1","descending$2","reverse","insideOut","top","tops","bottoms","concat","define","extend","definition","Object","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","hasOwnProperty","g","rgbConvert","rgb","opacity","colorRgb","Hsl","hslConvert","colorHsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","rad2deg","colorHcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","cubehelix","basis$1","v0","v1","v2","v3","basis$2","basisClosed$1","constant$2","linear$1","exponential$1","hue","round","gamma","nogamma","rgbSpline","spline","colors","array$1","nb","na","interpolate","date","Date","setTime","interpolateNumber","zero","one","interpolateString","am","bm","bs","bi","reA","lastIndex","reB","join","interpolateRgb","interpolateRound","decompose","scaleX","scaleY","skewX","translateX","translateY","rotate","degrees","atan","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","scale","cosh","sinh","tanh","interpolateZoom","S","ux0","uy0","w0","ux1","uy1","w1","epsilon2","rho","d1","rho4","rho2","coshr0","u","duration","hsl","lab$1","hcl","cubehelix$1","cubehelixGamma","cubehelix$$","quantize","interpolator","samples","dispatch","Dispatch","parseTypenames","typenames","types","indexOf","set$1","noop$1","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","column","dsv","delimiter","text","convert","parseRows","token","I","N","EOF","eol","EOL","charCodeAt","replace","delimiterCode","formatValue","formatRows","formatRow","reFormat","test","RegExp","request","url","respond","status","xhr","hasResponse","response","event","mimeType","responseType","headers","XMLHttpRequest","user","password","timeout","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","has","setRequestHeader","overrideMimeType","fixCallback","on","responseText","defaultMimeType","dsv$1","responseOf","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","tick","newInterval","floori","offseti","field","d0","filter","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","width","substring","formatDefault","toPrecision","out","formatPrefixAuto","exponent","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","comma","precision","formatTypes","identity$3","formatLocale","locale","newFormat","valuePrefix","prefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","group","padding","currency","toString","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","formats","pad","string","pads","charAt","newParse","newDate","parseSpecifier","w","day","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","names","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","timeWeek","timeMonday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcWeek","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","slice$3","band","rescale","range$$","paddingInner","paddingOuter","bandwidth","ordinalRange","rangeRound","pointish","point$4","constant$3","number$1","deinterpolate","deinterpolateClamp","reinterpolateClamp","reinterpolate","bimap","polymap","source","target","clamp","continuous","deinterpolate$$","piecewise","input","interpolate$$","unit","invert","map$2","tickFormat","linearish","nice","linear$2","identity$4","deinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","logs","pows","raise","quantile","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","month","week","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","utcTime","utcMonth","utcHour","utcMinute","rainbow$1","ts","rainbow","ramp","sequential","namespace","namespaces","space","local","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","creator","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","selection_on","customEvent","args","sourceEvent","current","point$5","svg","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","none$2","selector","querySelector","selection_select","select","groups","_groups","subgroups","subnode","subgroup","Selection","_parents","empty","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","matcher$1","sparse","update","selection_enter","_enter","EnterNode","datum","_parent","constant$4","bindIndex","enter","exit","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","selection_data","enterGroup","updateGroup","exitGroup","_exit","selection_exit","selection_merge","selection","groups0","groups1","m0","merges","group0","group1","selection_order","nextSibling","parentNode","insertBefore","selection_sort","compareNode","ascending$2","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","getAttribute","window","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","raise$1","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","constantNull","selection_insert","before","selection_remove","selection_datum","property","dispatchEvent","params","window$$","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","root","selectAll","touch","touches","identifier","schedule","timing","schedules","__transition","emptyOn","tween","emptyTween","ease","state","CREATED","init","set$2","STARTING","get$1","SCHEDULED","STARTED","ENDED","ENDING","interrupt","active","selection_interrupt","tweenRemove","tween0","tween1","splice","tweenFunction","transition_tween","_id","tweenValue","transition","interpolate$1","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","attrFunction$1","value10","attrFunctionNS$1","transition_attr","interpolateTransform$2","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","start$1","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","children","inherit","transition_selection","Selection$1","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","transition_style","interpolateTransform$1","styleTween","transition_styleTween","textConstant$1","textFunction$1","transition_text","transition_transition","id0","id1","newId","defaultTiming","selection_transition","root$1","identity$5","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","spacing","tickSizeInner","tickPadding","range0","range1","position","tickExit","tickEnter","append","attr","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","eachBefore","node_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","hierarchy","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","height","Node$2","shuffle$1","head","tail","enclose","circles","encloseN","encloses","dr","l2","l0","l1","enclose1","enclose2","enclose3","r2","x21","y21","r21","r3","a2","c2","a3","c3","d3","ab","place","db","dc","intersects","distance2","Node$1","packEnclose","sj","aa","ba","ca","oa","pack","siblings","optional","required","constantZero","constant$5","defaultRadius","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","partition","positionNode","defaultId","defaultParentId","parentId","stratify","nodeId","nodeKey","nodeByKey","keyPrefix$1","ambiguous","preroot","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","dice","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","squarify","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","center$1","sx","sy","constant$6","jiggle","x$1","y$1","collide","quad","rj","ri","yi","ri2","iterations","visitAfter","prepare","radii","index$2","link","defaultStrength","distances","strengths","bias","nodeById","initializeStrength","initializeDistance","x$2","y$2","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","fx","velocityDecay","fy","initializeNodes","initialRadius","initialAngle","initializeForce","find","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","theta","x$3","y$3","nopropagation","stopImmediatePropagation","noevent","preventDefault","dragDisable","view","__noselect","MozUserSelect","dragEnable","noclick","constant$7","DragEvent","subject","defaultFilter","button","defaultContainer","defaultSubject","drag","mousedowned","touchstarted","touchmoved","touchended","touchending","gesture","beforestart","container","mousemoved","mouseupped","mousemoving","gestures","sublisteners","listeners","constant$8","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","voronoi","polygons","triangles","constant$9","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","noevent$1","defaultFilter$1","defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","zoom","wheeled","dblclicked","k0","k1","constrain","invertX","invertY","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","moved","shiftKey","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","emit","scaleExtent","translateExtent","constant$10","BrushEvent","nopropagation$2","noevent$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","XY","overlay","cursors","handles","redraw","started","handleSize","emitter","Emitter","point1","shifting","lockX","lockY","moving","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","e0","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","ended","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","selection1","selection0","starting","compareValue","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","max$1","tau$3","di","dj","subindex","sortChords","constant$11","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","ribbon","argv","slice$5","sr","sa0","halfPi$2","sa1","sx0","sy0","tr","ta0","ta1","quadraticCurveTo","adder","Adder","reset","add$1","bv","av","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","streamPolygon","polygonStart","polygonEnd","geoStream","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","area$2","areaSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","equatorial","inflection","phii","delta","lambda2","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","bounds","feature","deltaMax","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","centroid$1","epsilon2$2","constant$12","compose","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","circle$1","ring","clipBuffer","lines","rejoin","clipLine","pointEqual","Intersection","other","entry","clipPolygon","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","clipExtent","visible","from","to","corner","comparePoint","activeStream","polygonInside","winding","bufferStream","clean","cleanInside","clipStream","first","v_","x_","y_","x__","y__","v__","clipMin","clipMax","extent$1","cache","cacheStream","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","length$2","object$1","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","interpolate$2","sy1","kx0","ky0","kx1","ky1","identity$7","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","pointRadius","pointLineStart","pointLine","lineEndPolygon","PathString","pointCircle","circle$2","index$3","contextStream","projectionStream","projection","boundsStream$1","polygonContains","sum$2","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","sink","pointRing","ringSink","ringStart","ringEnd","ringSegments","ringBuffer","polygonStarted","validSegment","rotatedStart","sphere","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipAntimeridianInterpolate","clipCircle","cr","c0","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","c1","n1xn2","uu","polar","meridian","q1","transform$1","transform$2","T","Transform$1","fit","project","fitSize","fitExtent","resample","delta2","resample$1","resampleNone","resampleLineTo","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","preclip","clipAntimeridian","postclip","projectResample","transformRadians","clipAngle","conicProjection","parallels","conicEqualAreaRaw","r0y","conicEqualArea","albers","multiplex","streams","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualArea","azimuthalEqualAreaRaw","azimuthalEquidistant","azimuthalEquidistantRaw","mercatorRaw","log$1","tan","mercator","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","sign$1","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","conicEquidistant","gnomonicRaw","gnomonic","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","version","ascendingBisect","bisectLeft","clear","proto","polyIn","custom","polyOut","polyInOut","PI","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","elasticOut","elasticInOut","pi$1","tau$1","epsilon","tauEpsilon","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","treeProto","slice$1","defer","await","results","awaitAll","_line","_point","cross$1","tan30","tan30_2","diamond","ka","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","_t0","px","py","darker","brighter","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","Kn","rgbGamma","rgbBasis","rgbBasisClosed","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelix$2","interpolateCubehelixLong","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","html","createRange","createContextualFragment","json","xml","responseXML","csv$1","tsv$1","performance","requestAnimationFrame","milliseconds","durationSecond","durationHour","durationDay","seconds","minutes","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","","toFixed","toUpperCase","-","0","isoSpecifier","formatIso","parseIso","array$2","category10","category20b","category20c","category20","cubehelix$3","warm","cool","viridis","magma","inferno","plasma","xlink","xmlns","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","element$1","mouseenter","mouseleave","classed","selection_prototype","descendants","resquarify","_squarify","after","grandpa","uncle","sibling","applyX","applyY","location","rescaleX","rescaleY","xy","nw","ne","se","sw","pi$3","temp","valueOf","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaRing","areaSum$1","cxcy","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateTransformCss","interpolateTransformSvg","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeeks","timeSunday","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeeks","utcSunday","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","defineProperty","enable","rawAsap","task","requestFlush","flushing","flush","currentIndex","capacity","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","intervalHandle","MutationObserver","WebKitMutationObserver","forceG","canvas","getContext","render","clearRect","save","beginPath","fillStyle","strokeStyle","stroke","restore","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","val","remaining","race","disable","enabled","options","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_72","err","errStr","some","cls","ReferenceError","RangeError","normalizeName","String","normalizeValue","iteratorFor","items","iterator","support","iterable","Symbol","Headers","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","ArrayBuffer","rejected","decode","normalizeMethod","upcased","methods","Request","credentials","referrer","form","bytes","decodeURIComponent","getAllResponseHeaders","Response","bodyInit","ok","statusText","fetch","getAll","thisArg","clone","redirectStatuses","redirect","responseURL","getResponseHeader","withCredentials","polyfill"],"mappings":"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","file":"static/js/main.84ba1d98.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/d3-force-gravity__demo/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(4);\n\tmodule.exports = __webpack_require__(6);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(5);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('not a function');\n\t  }\n\t  this._45 = 0;\n\t  this._81 = 0;\n\t  this._65 = null;\n\t  this._54 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._10 = null;\n\tPromise._97 = null;\n\tPromise._61 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t};\n\tfunction handle(self, deferred) {\n\t  while (self._81 === 3) {\n\t    self = self._65;\n\t  }\n\t  if (Promise._10) {\n\t    Promise._10(self);\n\t  }\n\t  if (self._81 === 0) {\n\t    if (self._45 === 0) {\n\t      self._45 = 1;\n\t      self._54 = deferred;\n\t      return;\n\t    }\n\t    if (self._45 === 1) {\n\t      self._45 = 2;\n\t      self._54 = [self._54, deferred];\n\t      return;\n\t    }\n\t    self._54.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._81 === 1) {\n\t        resolve(deferred.promise, self._65);\n\t      } else {\n\t        reject(deferred.promise, self._65);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._65);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._81 = 3;\n\t      self._65 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._81 = 1;\n\t  self._65 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._81 = 2;\n\t  self._65 = newValue;\n\t  if (Promise._97) {\n\t    Promise._97(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._45 === 1) {\n\t    handle(self, self._54);\n\t    self._54 = null;\n\t  }\n\t  if (self._45 === 2) {\n\t    for (var i = 0; i < self._54.length; i++) {\n\t      handle(self, self._54[i]);\n\t    }\n\t    self._54 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  })\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar assertNumber = function assertNumber(name, n) {\n\t\tif (typeof n !== 'number') {\n\t\t\tthrow new TypeError(name + ' has to be a number');\n\t\t}\n\t};\n\t\n\tvar ForceGravity = function ForceGravity() {\n\t\tvar x = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t\tvar y = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t\tvar nodes = void 0,\n\t\t    acceleration = void 0,\n\t\t    strength = 10000,\n\t\t    minRadius = 40;\n\t\n\t\tvar distanceTo = function distanceTo(x1, y1, x2, y2) {\n\t\t\treturn Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\t\t};\n\t\n\t\tvar computeAcceleration = function computeAcceleration(nx, ny, distance) {\n\t\t\tvar distanceCube = Math.pow(distance, 3);\n\t\t\treturn {\n\t\t\t\tx: (x - nx) * strength / distanceCube,\n\t\t\t\ty: (y - ny) * strength / distanceCube\n\t\t\t};\n\t\t};\n\t\tvar initialize = function initialize(_) {\n\t\t\tnodes = _;\n\t\t\tacceleration = nodes.map(function (node) {\n\t\t\t\tvar distance = distanceTo(x, y, node.x, node.y);\n\t\t\t\treturn computeAcceleration(node.x, node.y, distance);\n\t\t\t});\n\t\t};\n\t\n\t\tvar force = function force() {\n\t\t\tnodes.forEach(function (node, i) {\n\t\t\t\tvar distance = distanceTo(x, y, node.x, node.y);\n\t\t\t\tif (distance < minRadius) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tnode.vx += acceleration[i].x;\n\t\t\t\tnode.vy += acceleration[i].y;\n\t\t\t\tnode.x += node.vx;\n\t\t\t\tnode.y += node.vy;\n\t\t\t\tvar newAcceleration = computeAcceleration(node.x, node.y, distance);\n\t\t\t\tacceleration[i].x = newAcceleration.x;\n\t\t\t\tacceleration[i].y = newAcceleration.y;\n\t\t\t});\n\t\t\treturn force;\n\t\t};\n\t\n\t\tforce.strength = function (_strength) {\n\t\t\tif (_strength === undefined) {\n\t\t\t\treturn strength;\n\t\t\t}\n\t\t\tassertNumber('strength', _strength);\n\t\t\tstrength = _strength;\n\t\t\treturn force;\n\t\t};\n\t\n\t\tforce.minRadius = function (_minRadius) {\n\t\t\tif (_minRadius === undefined) {\n\t\t\t\treturn minRadius;\n\t\t\t}\n\t\t\tassertNumber('minRadius', _minRadius);\n\t\t\tminRadius = _minRadius;\n\t\t\treturn force;\n\t\t};\n\t\n\t\tforce.x = function (_x) {\n\t\t\tif (_x === undefined) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\tassertNumber('x', _x);\n\t\t\tx = _x;\n\t\t\treturn force;\n\t\t};\n\t\n\t\tforce.y = function (_y) {\n\t\t\tif (_y === undefined) {\n\t\t\t\treturn y;\n\t\t\t}\n\t\t\tassertNumber('y', _y);\n\t\t\ty = _y;\n\t\t\treturn force;\n\t\t};\n\t\n\t\tforce.initialize = initialize;\n\t\treturn force;\n\t};\n\t\n\tmodule.exports = ForceGravity;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// https://d3js.org Version 4.2.1. Copyright 2016 Mike Bostock.\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3 = global.d3 || {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  var version = \"4.2.1\";\n\t\n\t  function ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t\n\t  function bisector(compare) {\n\t    if (compare.length === 1) compare = ascendingComparator(compare);\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (lo == null) lo = 0;\n\t        if (hi == null) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1;\n\t          else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (lo == null) lo = 0;\n\t        if (hi == null) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid;\n\t          else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t\n\t  function ascendingComparator(f) {\n\t    return function(d, x) {\n\t      return ascending(f(d), x);\n\t    };\n\t  }\n\t\n\t  var ascendingBisect = bisector(ascending);\n\t  var bisectRight = ascendingBisect.right;\n\t  var bisectLeft = ascendingBisect.left;\n\t\n\t  function descending(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  }\n\t\n\t  function number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t\n\t  function variance(array, f) {\n\t    var n = array.length,\n\t        m = 0,\n\t        a,\n\t        d,\n\t        s = 0,\n\t        i = -1,\n\t        j = 0;\n\t\n\t    if (f == null) {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) {\n\t        if (!isNaN(a = number(f(array[i], i, array)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t\n\t    if (j > 1) return s / (j - 1);\n\t  }\n\t\n\t  function deviation(array, f) {\n\t    var v = variance(array, f);\n\t    return v ? Math.sqrt(v) : v;\n\t  }\n\t\n\t  function extent(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b,\n\t        c;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t\n\t    return [a, c];\n\t  }\n\t\n\t  var array = Array.prototype;\n\t\n\t  var slice = array.slice;\n\t  var map = array.map;\n\t\n\t  function constant(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function identity(x) {\n\t    return x;\n\t  }\n\t\n\t  function range(start, stop, step) {\n\t    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\t\n\t    var i = -1,\n\t        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n\t        range = new Array(n);\n\t\n\t    while (++i < n) {\n\t      range[i] = start + i * step;\n\t    }\n\t\n\t    return range;\n\t  }\n\t\n\t  var e10 = Math.sqrt(50);\n\t  var e5 = Math.sqrt(10);\n\t  var e2 = Math.sqrt(2);\n\t  function ticks(start, stop, count) {\n\t    var step = tickStep(start, stop, count);\n\t    return range(\n\t      Math.ceil(start / step) * step,\n\t      Math.floor(stop / step) * step + step / 2, // inclusive\n\t      step\n\t    );\n\t  }\n\t\n\t  function tickStep(start, stop, count) {\n\t    var step0 = Math.abs(stop - start) / Math.max(0, count),\n\t        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n\t        error = step0 / step1;\n\t    if (error >= e10) step1 *= 10;\n\t    else if (error >= e5) step1 *= 5;\n\t    else if (error >= e2) step1 *= 2;\n\t    return stop < start ? -step1 : step1;\n\t  }\n\t\n\t  function sturges(values) {\n\t    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n\t  }\n\t\n\t  function histogram() {\n\t    var value = identity,\n\t        domain = extent,\n\t        threshold = sturges;\n\t\n\t    function histogram(data) {\n\t      var i,\n\t          n = data.length,\n\t          x,\n\t          values = new Array(n);\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        values[i] = value(data[i], i, data);\n\t      }\n\t\n\t      var xz = domain(values),\n\t          x0 = xz[0],\n\t          x1 = xz[1],\n\t          tz = threshold(values, x0, x1);\n\t\n\t      // Convert number of thresholds into uniform thresholds.\n\t      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\t\n\t      // Remove any thresholds outside the domain.\n\t      var m = tz.length;\n\t      while (tz[0] <= x0) tz.shift(), --m;\n\t      while (tz[m - 1] >= x1) tz.pop(), --m;\n\t\n\t      var bins = new Array(m + 1),\n\t          bin;\n\t\n\t      // Initialize bins.\n\t      for (i = 0; i <= m; ++i) {\n\t        bin = bins[i] = [];\n\t        bin.x0 = i > 0 ? tz[i - 1] : x0;\n\t        bin.x1 = i < m ? tz[i] : x1;\n\t      }\n\t\n\t      // Assign data to bins by value, ignoring any outside the domain.\n\t      for (i = 0; i < n; ++i) {\n\t        x = values[i];\n\t        if (x0 <= x && x <= x1) {\n\t          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n\t        }\n\t      }\n\t\n\t      return bins;\n\t    }\n\t\n\t    histogram.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n\t    };\n\t\n\t    histogram.domain = function(_) {\n\t      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n\t    };\n\t\n\t    histogram.thresholds = function(_) {\n\t      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n\t    };\n\t\n\t    return histogram;\n\t  }\n\t\n\t  function threshold(array, p, f) {\n\t    if (f == null) f = number;\n\t    if (!(n = array.length)) return;\n\t    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n\t    if (p >= 1) return +f(array[n - 1], n - 1, array);\n\t    var n,\n\t        h = (n - 1) * p,\n\t        i = Math.floor(h),\n\t        a = +f(array[i], i, array),\n\t        b = +f(array[i + 1], i + 1, array);\n\t    return a + (b - a) * (h - i);\n\t  }\n\t\n\t  function freedmanDiaconis(values, min, max) {\n\t    values = map.call(values, number).sort(ascending);\n\t    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n\t  }\n\t\n\t  function scott(values, min, max) {\n\t    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n\t  }\n\t\n\t  function max(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n\t    }\n\t\n\t    return a;\n\t  }\n\t\n\t  function mean(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1,\n\t        j = n;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n\t    }\n\t\n\t    if (j) return s / j;\n\t  }\n\t\n\t  function median(array, f) {\n\t    var numbers = [],\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n\t    }\n\t\n\t    return threshold(numbers.sort(ascending), 0.5);\n\t  }\n\t\n\t  function merge(arrays) {\n\t    var n = arrays.length,\n\t        m,\n\t        i = -1,\n\t        j = 0,\n\t        merged,\n\t        array;\n\t\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t\n\t    return merged;\n\t  }\n\t\n\t  function min(array, f) {\n\t    var i = -1,\n\t        n = array.length,\n\t        a,\n\t        b;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n\t      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n\t    }\n\t\n\t    return a;\n\t  }\n\t\n\t  function pairs(array) {\n\t    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [p, p = array[++i]];\n\t    return pairs;\n\t  }\n\t\n\t  function permute(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  }\n\t\n\t  function scan(array, compare) {\n\t    if (!(n = array.length)) return;\n\t    var i = 0,\n\t        n,\n\t        j = 0,\n\t        xi,\n\t        xj = array[j];\n\t\n\t    if (!compare) compare = ascending;\n\t\n\t    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\t\n\t    if (compare(xj, xj) === 0) return j;\n\t  }\n\t\n\t  function shuffle(array, i0, i1) {\n\t    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n\t        t,\n\t        i;\n\t\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0];\n\t      array[m + i0] = array[i + i0];\n\t      array[i + i0] = t;\n\t    }\n\t\n\t    return array;\n\t  }\n\t\n\t  function sum(array, f) {\n\t    var s = 0,\n\t        n = array.length,\n\t        a,\n\t        i = -1;\n\t\n\t    if (f == null) {\n\t      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n\t    }\n\t\n\t    else {\n\t      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n\t    }\n\t\n\t    return s;\n\t  }\n\t\n\t  function transpose(matrix) {\n\t    if (!(n = matrix.length)) return [];\n\t    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n\t      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n\t        row[j] = matrix[j][i];\n\t      }\n\t    }\n\t    return transpose;\n\t  }\n\t\n\t  function length(d) {\n\t    return d.length;\n\t  }\n\t\n\t  function zip() {\n\t    return transpose(arguments);\n\t  }\n\t\n\t  var prefix = \"$\";\n\t\n\t  function Map() {}\n\t\n\t  Map.prototype = map$1.prototype = {\n\t    constructor: Map,\n\t    has: function(key) {\n\t      return (prefix + key) in this;\n\t    },\n\t    get: function(key) {\n\t      return this[prefix + key];\n\t    },\n\t    set: function(key, value) {\n\t      this[prefix + key] = value;\n\t      return this;\n\t    },\n\t    remove: function(key) {\n\t      var property = prefix + key;\n\t      return property in this && delete this[property];\n\t    },\n\t    clear: function() {\n\t      for (var property in this) if (property[0] === prefix) delete this[property];\n\t    },\n\t    keys: function() {\n\t      var keys = [];\n\t      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n\t      return keys;\n\t    },\n\t    values: function() {\n\t      var values = [];\n\t      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n\t      return entries;\n\t    },\n\t    size: function() {\n\t      var size = 0;\n\t      for (var property in this) if (property[0] === prefix) ++size;\n\t      return size;\n\t    },\n\t    empty: function() {\n\t      for (var property in this) if (property[0] === prefix) return false;\n\t      return true;\n\t    },\n\t    each: function(f) {\n\t      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n\t    }\n\t  };\n\t\n\t  function map$1(object, f) {\n\t    var map = new Map;\n\t\n\t    // Copy constructor.\n\t    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\t\n\t    // Index array by numeric index or specified key function.\n\t    else if (Array.isArray(object)) {\n\t      var i = -1,\n\t          n = object.length,\n\t          o;\n\t\n\t      if (f == null) while (++i < n) map.set(i, object[i]);\n\t      else while (++i < n) map.set(f(o = object[i], i, object), o);\n\t    }\n\t\n\t    // Convert object to map.\n\t    else if (object) for (var key in object) map.set(key, object[key]);\n\t\n\t    return map;\n\t  }\n\t\n\t  function nest() {\n\t    var keys = [],\n\t        sortKeys = [],\n\t        sortValues,\n\t        rollup,\n\t        nest;\n\t\n\t    function apply(array, depth, createResult, setResult) {\n\t      if (depth >= keys.length) return rollup != null\n\t          ? rollup(array) : (sortValues != null\n\t          ? array.sort(sortValues)\n\t          : array);\n\t\n\t      var i = -1,\n\t          n = array.length,\n\t          key = keys[depth++],\n\t          keyValue,\n\t          value,\n\t          valuesByKey = map$1(),\n\t          values,\n\t          result = createResult();\n\t\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n\t          values.push(value);\n\t        } else {\n\t          valuesByKey.set(keyValue, [value]);\n\t        }\n\t      }\n\t\n\t      valuesByKey.each(function(values, key) {\n\t        setResult(result, key, apply(values, depth, createResult, setResult));\n\t      });\n\t\n\t      return result;\n\t    }\n\t\n\t    function entries(map, depth) {\n\t      if (++depth > keys.length) return map;\n\t      var array, sortKey = sortKeys[depth - 1];\n\t      if (rollup != null && depth >= keys.length) array = map.entries();\n\t      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n\t      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n\t    }\n\t\n\t    return nest = {\n\t      object: function(array) { return apply(array, 0, createObject, setObject); },\n\t      map: function(array) { return apply(array, 0, createMap, setMap); },\n\t      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n\t      key: function(d) { keys.push(d); return nest; },\n\t      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n\t      sortValues: function(order) { sortValues = order; return nest; },\n\t      rollup: function(f) { rollup = f; return nest; }\n\t    };\n\t  }\n\t\n\t  function createObject() {\n\t    return {};\n\t  }\n\t\n\t  function setObject(object, key, value) {\n\t    object[key] = value;\n\t  }\n\t\n\t  function createMap() {\n\t    return map$1();\n\t  }\n\t\n\t  function setMap(map, key, value) {\n\t    map.set(key, value);\n\t  }\n\t\n\t  function Set() {}\n\t\n\t  var proto = map$1.prototype;\n\t\n\t  Set.prototype = set.prototype = {\n\t    constructor: Set,\n\t    has: proto.has,\n\t    add: function(value) {\n\t      value += \"\";\n\t      this[prefix + value] = value;\n\t      return this;\n\t    },\n\t    remove: proto.remove,\n\t    clear: proto.clear,\n\t    values: proto.keys,\n\t    size: proto.size,\n\t    empty: proto.empty,\n\t    each: proto.each\n\t  };\n\t\n\t  function set(object, f) {\n\t    var set = new Set;\n\t\n\t    // Copy constructor.\n\t    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\t\n\t    // Otherwise, assume it’s an array.\n\t    else if (object) {\n\t      var i = -1, n = object.length;\n\t      if (f == null) while (++i < n) set.add(object[i]);\n\t      else while (++i < n) set.add(f(object[i], i, object));\n\t    }\n\t\n\t    return set;\n\t  }\n\t\n\t  function keys(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  }\n\t\n\t  function values(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  }\n\t\n\t  function entries(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({key: key, value: map[key]});\n\t    return entries;\n\t  }\n\t\n\t  function uniform(min, max) {\n\t    min = min == null ? 0 : +min;\n\t    max = max == null ? 1 : +max;\n\t    if (arguments.length === 1) max = min, min = 0;\n\t    else max -= min;\n\t    return function() {\n\t      return Math.random() * max + min;\n\t    };\n\t  }\n\t\n\t  function normal(mu, sigma) {\n\t    var x, r;\n\t    mu = mu == null ? 0 : +mu;\n\t    sigma = sigma == null ? 1 : +sigma;\n\t    return function() {\n\t      var y;\n\t\n\t      // If available, use the second previously-generated uniform random.\n\t      if (x != null) y = x, x = null;\n\t\n\t      // Otherwise, generate a new x and y.\n\t      else do {\n\t        x = Math.random() * 2 - 1;\n\t        y = Math.random() * 2 - 1;\n\t        r = x * x + y * y;\n\t      } while (!r || r > 1);\n\t\n\t      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n\t    };\n\t  }\n\t\n\t  function logNormal() {\n\t    var randomNormal = normal.apply(this, arguments);\n\t    return function() {\n\t      return Math.exp(randomNormal());\n\t    };\n\t  }\n\t\n\t  function irwinHall(n) {\n\t    return function() {\n\t      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n\t      return sum;\n\t    };\n\t  }\n\t\n\t  function bates(n) {\n\t    var randomIrwinHall = irwinHall(n);\n\t    return function() {\n\t      return randomIrwinHall() / n;\n\t    };\n\t  }\n\t\n\t  function exponential(lambda) {\n\t    return function() {\n\t      return -Math.log(1 - Math.random()) / lambda;\n\t    };\n\t  }\n\t\n\t  function linear(t) {\n\t    return +t;\n\t  }\n\t\n\t  function quadIn(t) {\n\t    return t * t;\n\t  }\n\t\n\t  function quadOut(t) {\n\t    return t * (2 - t);\n\t  }\n\t\n\t  function quadInOut(t) {\n\t    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n\t  }\n\t\n\t  function cubicIn(t) {\n\t    return t * t * t;\n\t  }\n\t\n\t  function cubicOut(t) {\n\t    return --t * t * t + 1;\n\t  }\n\t\n\t  function easeCubicInOut(t) {\n\t    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n\t  }\n\t\n\t  var exponent = 3;\n\t\n\t  var polyIn = (function custom(e) {\n\t    e = +e;\n\t\n\t    function polyIn(t) {\n\t      return Math.pow(t, e);\n\t    }\n\t\n\t    polyIn.exponent = custom;\n\t\n\t    return polyIn;\n\t  })(exponent);\n\t\n\t  var polyOut = (function custom(e) {\n\t    e = +e;\n\t\n\t    function polyOut(t) {\n\t      return 1 - Math.pow(1 - t, e);\n\t    }\n\t\n\t    polyOut.exponent = custom;\n\t\n\t    return polyOut;\n\t  })(exponent);\n\t\n\t  var polyInOut = (function custom(e) {\n\t    e = +e;\n\t\n\t    function polyInOut(t) {\n\t      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n\t    }\n\t\n\t    polyInOut.exponent = custom;\n\t\n\t    return polyInOut;\n\t  })(exponent);\n\t\n\t  var pi = Math.PI;\n\t  var halfPi = pi / 2;\n\t  function sinIn(t) {\n\t    return 1 - Math.cos(t * halfPi);\n\t  }\n\t\n\t  function sinOut(t) {\n\t    return Math.sin(t * halfPi);\n\t  }\n\t\n\t  function sinInOut(t) {\n\t    return (1 - Math.cos(pi * t)) / 2;\n\t  }\n\t\n\t  function expIn(t) {\n\t    return Math.pow(2, 10 * t - 10);\n\t  }\n\t\n\t  function expOut(t) {\n\t    return 1 - Math.pow(2, -10 * t);\n\t  }\n\t\n\t  function expInOut(t) {\n\t    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n\t  }\n\t\n\t  function circleIn(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t\n\t  function circleOut(t) {\n\t    return Math.sqrt(1 - --t * t);\n\t  }\n\t\n\t  function circleInOut(t) {\n\t    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n\t  }\n\t\n\t  var b1 = 4 / 11;\n\t  var b2 = 6 / 11;\n\t  var b3 = 8 / 11;\n\t  var b4 = 3 / 4;\n\t  var b5 = 9 / 11;\n\t  var b6 = 10 / 11;\n\t  var b7 = 15 / 16;\n\t  var b8 = 21 / 22;\n\t  var b9 = 63 / 64;\n\t  var b0 = 1 / b1 / b1;\n\t  function bounceIn(t) {\n\t    return 1 - bounceOut(1 - t);\n\t  }\n\t\n\t  function bounceOut(t) {\n\t    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n\t  }\n\t\n\t  function bounceInOut(t) {\n\t    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n\t  }\n\t\n\t  var overshoot = 1.70158;\n\t\n\t  var backIn = (function custom(s) {\n\t    s = +s;\n\t\n\t    function backIn(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    }\n\t\n\t    backIn.overshoot = custom;\n\t\n\t    return backIn;\n\t  })(overshoot);\n\t\n\t  var backOut = (function custom(s) {\n\t    s = +s;\n\t\n\t    function backOut(t) {\n\t      return --t * t * ((s + 1) * t + s) + 1;\n\t    }\n\t\n\t    backOut.overshoot = custom;\n\t\n\t    return backOut;\n\t  })(overshoot);\n\t\n\t  var backInOut = (function custom(s) {\n\t    s = +s;\n\t\n\t    function backInOut(t) {\n\t      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n\t    }\n\t\n\t    backInOut.overshoot = custom;\n\t\n\t    return backInOut;\n\t  })(overshoot);\n\t\n\t  var tau = 2 * Math.PI;\n\t  var amplitude = 1;\n\t  var period = 0.3;\n\t  var elasticIn = (function custom(a, p) {\n\t    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t    function elasticIn(t) {\n\t      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n\t    }\n\t\n\t    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n\t    elasticIn.period = function(p) { return custom(a, p); };\n\t\n\t    return elasticIn;\n\t  })(amplitude, period);\n\t\n\t  var elasticOut = (function custom(a, p) {\n\t    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t    function elasticOut(t) {\n\t      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n\t    }\n\t\n\t    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n\t    elasticOut.period = function(p) { return custom(a, p); };\n\t\n\t    return elasticOut;\n\t  })(amplitude, period);\n\t\n\t  var elasticInOut = (function custom(a, p) {\n\t    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\t\n\t    function elasticInOut(t) {\n\t      return ((t = t * 2 - 1) < 0\n\t          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n\t          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n\t    }\n\t\n\t    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n\t    elasticInOut.period = function(p) { return custom(a, p); };\n\t\n\t    return elasticInOut;\n\t  })(amplitude, period);\n\t\n\t  function area(polygon) {\n\t    var i = -1,\n\t        n = polygon.length,\n\t        a,\n\t        b = polygon[n - 1],\n\t        area = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = polygon[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t\n\t    return area / 2;\n\t  }\n\t\n\t  function centroid(polygon) {\n\t    var i = -1,\n\t        n = polygon.length,\n\t        x = 0,\n\t        y = 0,\n\t        a,\n\t        b = polygon[n - 1],\n\t        c,\n\t        k = 0;\n\t\n\t    while (++i < n) {\n\t      a = b;\n\t      b = polygon[i];\n\t      k += c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t\n\t    return k *= 3, [x / k, y / k];\n\t  }\n\t\n\t  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n\t  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n\t  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n\t  // negative if clockwise, and zero if the points are collinear.\n\t  function cross(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t\n\t  function lexicographicOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t\n\t  // Computes the upper convex hull per the monotone chain algorithm.\n\t  // Assumes points.length >= 3, is sorted by x, unique in y.\n\t  // Returns an array of indices into points in left-to-right order.\n\t  function computeUpperHullIndexes(points) {\n\t    var n = points.length,\n\t        indexes = [0, 1],\n\t        size = 2;\n\t\n\t    for (var i = 2; i < n; ++i) {\n\t      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n\t      indexes[size++] = i;\n\t    }\n\t\n\t    return indexes.slice(0, size); // remove popped points\n\t  }\n\t\n\t  function hull(points) {\n\t    if ((n = points.length) < 3) return null;\n\t\n\t    var i,\n\t        n,\n\t        sortedPoints = new Array(n),\n\t        flippedPoints = new Array(n);\n\t\n\t    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n\t    sortedPoints.sort(lexicographicOrder);\n\t    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\t\n\t    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n\t        lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\t\n\t    // Construct the hull polygon, removing possible duplicate endpoints.\n\t    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n\t        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n\t        hull = [];\n\t\n\t    // Add upper hull in right-to-l order.\n\t    // Then add lower hull in left-to-right order.\n\t    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n\t    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\t\n\t    return hull;\n\t  }\n\t\n\t  function contains(polygon, point) {\n\t    var n = polygon.length,\n\t        p = polygon[n - 1],\n\t        x = point[0], y = point[1],\n\t        x0 = p[0], y0 = p[1],\n\t        x1, y1,\n\t        inside = false;\n\t\n\t    for (var i = 0; i < n; ++i) {\n\t      p = polygon[i], x1 = p[0], y1 = p[1];\n\t      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n\t      x0 = x1, y0 = y1;\n\t    }\n\t\n\t    return inside;\n\t  }\n\t\n\t  function length$1(polygon) {\n\t    var i = -1,\n\t        n = polygon.length,\n\t        b = polygon[n - 1],\n\t        xa,\n\t        ya,\n\t        xb = b[0],\n\t        yb = b[1],\n\t        perimeter = 0;\n\t\n\t    while (++i < n) {\n\t      xa = xb;\n\t      ya = yb;\n\t      b = polygon[i];\n\t      xb = b[0];\n\t      yb = b[1];\n\t      xa -= xb;\n\t      ya -= yb;\n\t      perimeter += Math.sqrt(xa * xa + ya * ya);\n\t    }\n\t\n\t    return perimeter;\n\t  }\n\t\n\tvar   pi$1 = Math.PI;\n\tvar   tau$1 = 2 * pi$1;\n\t  var epsilon = 1e-6;\n\t  var tauEpsilon = tau$1 - epsilon;\n\t  function Path() {\n\t    this._x0 = this._y0 = // start of current subpath\n\t    this._x1 = this._y1 = null; // end of current subpath\n\t    this._ = [];\n\t  }\n\t\n\t  function path() {\n\t    return new Path;\n\t  }\n\t\n\t  Path.prototype = path.prototype = {\n\t    constructor: Path,\n\t    moveTo: function(x, y) {\n\t      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n\t    },\n\t    closePath: function() {\n\t      if (this._x1 !== null) {\n\t        this._x1 = this._x0, this._y1 = this._y0;\n\t        this._.push(\"Z\");\n\t      }\n\t    },\n\t    lineTo: function(x, y) {\n\t      this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n\t    },\n\t    quadraticCurveTo: function(x1, y1, x, y) {\n\t      this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t    },\n\t    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n\t      this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n\t    },\n\t    arcTo: function(x1, y1, x2, y2, r) {\n\t      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\t      var x0 = this._x1,\n\t          y0 = this._y1,\n\t          x21 = x2 - x1,\n\t          y21 = y2 - y1,\n\t          x01 = x0 - x1,\n\t          y01 = y0 - y1,\n\t          l01_2 = x01 * x01 + y01 * y01;\n\t\n\t      // Is the radius negative? Error.\n\t      if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t      // Is this path empty? Move to (x1,y1).\n\t      if (this._x1 === null) {\n\t        this._.push(\n\t          \"M\", this._x1 = x1, \",\", this._y1 = y1\n\t        );\n\t      }\n\t\n\t      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n\t      else if (!(l01_2 > epsilon));\n\t\n\t      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n\t      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n\t      // Or, is the radius zero? Line to (x1,y1).\n\t      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n\t        this._.push(\n\t          \"L\", this._x1 = x1, \",\", this._y1 = y1\n\t        );\n\t      }\n\t\n\t      // Otherwise, draw an arc!\n\t      else {\n\t        var x20 = x2 - x0,\n\t            y20 = y2 - y0,\n\t            l21_2 = x21 * x21 + y21 * y21,\n\t            l20_2 = x20 * x20 + y20 * y20,\n\t            l21 = Math.sqrt(l21_2),\n\t            l01 = Math.sqrt(l01_2),\n\t            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n\t            t01 = l / l01,\n\t            t21 = l / l21;\n\t\n\t        // If the start tangent is not coincident with (x0,y0), line to.\n\t        if (Math.abs(t01 - 1) > epsilon) {\n\t          this._.push(\n\t            \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n\t          );\n\t        }\n\t\n\t        this._.push(\n\t          \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n\t        );\n\t      }\n\t    },\n\t    arc: function(x, y, r, a0, a1, ccw) {\n\t      x = +x, y = +y, r = +r;\n\t      var dx = r * Math.cos(a0),\n\t          dy = r * Math.sin(a0),\n\t          x0 = x + dx,\n\t          y0 = y + dy,\n\t          cw = 1 ^ ccw,\n\t          da = ccw ? a0 - a1 : a1 - a0;\n\t\n\t      // Is the radius negative? Error.\n\t      if (r < 0) throw new Error(\"negative radius: \" + r);\n\t\n\t      // Is this path empty? Move to (x0,y0).\n\t      if (this._x1 === null) {\n\t        this._.push(\n\t          \"M\", x0, \",\", y0\n\t        );\n\t      }\n\t\n\t      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n\t      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n\t        this._.push(\n\t          \"L\", x0, \",\", y0\n\t        );\n\t      }\n\t\n\t      // Is this arc empty? We’re done.\n\t      if (!r) return;\n\t\n\t      // Is this a complete circle? Draw two arcs to complete the circle.\n\t      if (da > tauEpsilon) {\n\t        this._.push(\n\t          \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n\t          \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n\t        );\n\t      }\n\t\n\t      // Otherwise, draw an arc!\n\t      else {\n\t        if (da < 0) da = da % tau$1 + tau$1;\n\t        this._.push(\n\t          \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n\t        );\n\t      }\n\t    },\n\t    rect: function(x, y, w, h) {\n\t      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n\t    },\n\t    toString: function() {\n\t      return this._.join(\"\");\n\t    }\n\t  };\n\t\n\t  function tree_add(d) {\n\t    var x = +this._x.call(null, d),\n\t        y = +this._y.call(null, d);\n\t    return add(this.cover(x, y), x, y, d);\n\t  }\n\t\n\t  function add(tree, x, y, d) {\n\t    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\t\n\t    var parent,\n\t        node = tree._root,\n\t        leaf = {data: d},\n\t        x0 = tree._x0,\n\t        y0 = tree._y0,\n\t        x1 = tree._x1,\n\t        y1 = tree._y1,\n\t        xm,\n\t        ym,\n\t        xp,\n\t        yp,\n\t        right,\n\t        bottom,\n\t        i,\n\t        j;\n\t\n\t    // If the tree is empty, initialize the root as a leaf.\n\t    if (!node) return tree._root = leaf, tree;\n\t\n\t    // Find the existing leaf for the new point, or add it.\n\t    while (node.length) {\n\t      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n\t    }\n\t\n\t    // Is the new point is exactly coincident with the existing point?\n\t    xp = +tree._x.call(null, node.data);\n\t    yp = +tree._y.call(null, node.data);\n\t    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\t\n\t    // Otherwise, split the leaf node until the old and new point are separated.\n\t    do {\n\t      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n\t      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n\t    return parent[j] = node, parent[i] = leaf, tree;\n\t  }\n\t\n\t  function addAll(data) {\n\t    var d, i, n = data.length,\n\t        x,\n\t        y,\n\t        xz = new Array(n),\n\t        yz = new Array(n),\n\t        x0 = Infinity,\n\t        y0 = Infinity,\n\t        x1 = -Infinity,\n\t        y1 = -Infinity;\n\t\n\t    // Compute the points and their extent.\n\t    for (i = 0; i < n; ++i) {\n\t      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n\t      xz[i] = x;\n\t      yz[i] = y;\n\t      if (x < x0) x0 = x;\n\t      if (x > x1) x1 = x;\n\t      if (y < y0) y0 = y;\n\t      if (y > y1) y1 = y;\n\t    }\n\t\n\t    // If there were no (valid) points, inherit the existing extent.\n\t    if (x1 < x0) x0 = this._x0, x1 = this._x1;\n\t    if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\t\n\t    // Expand the tree to cover the new points.\n\t    this.cover(x0, y0).cover(x1, y1);\n\t\n\t    // Add the new points.\n\t    for (i = 0; i < n; ++i) {\n\t      add(this, xz[i], yz[i], data[i]);\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function tree_cover(x, y) {\n\t    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\t\n\t    var x0 = this._x0,\n\t        y0 = this._y0,\n\t        x1 = this._x1,\n\t        y1 = this._y1;\n\t\n\t    // If the quadtree has no extent, initialize them.\n\t    // Integer extent are necessary so that if we later double the extent,\n\t    // the existing quadrant boundaries don’t change due to floating point error!\n\t    if (isNaN(x0)) {\n\t      x1 = (x0 = Math.floor(x)) + 1;\n\t      y1 = (y0 = Math.floor(y)) + 1;\n\t    }\n\t\n\t    // Otherwise, double repeatedly to cover.\n\t    else if (x0 > x || x > x1 || y0 > y || y > y1) {\n\t      var z = x1 - x0,\n\t          node = this._root,\n\t          parent,\n\t          i;\n\t\n\t      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n\t        case 0: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n\t          break;\n\t        }\n\t        case 1: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n\t          break;\n\t        }\n\t        case 2: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n\t          break;\n\t        }\n\t        case 3: {\n\t          do parent = new Array(4), parent[i] = node, node = parent;\n\t          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (this._root && this._root.length) this._root = node;\n\t    }\n\t\n\t    // If the quadtree covers the point already, just return.\n\t    else return this;\n\t\n\t    this._x0 = x0;\n\t    this._y0 = y0;\n\t    this._x1 = x1;\n\t    this._y1 = y1;\n\t    return this;\n\t  }\n\t\n\t  function tree_data() {\n\t    var data = [];\n\t    this.visit(function(node) {\n\t      if (!node.length) do data.push(node.data); while (node = node.next)\n\t    });\n\t    return data;\n\t  }\n\t\n\t  function tree_extent(_) {\n\t    return arguments.length\n\t        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n\t        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n\t  }\n\t\n\t  function Quad(node, x0, y0, x1, y1) {\n\t    this.node = node;\n\t    this.x0 = x0;\n\t    this.y0 = y0;\n\t    this.x1 = x1;\n\t    this.y1 = y1;\n\t  }\n\t\n\t  function tree_find(x, y, radius) {\n\t    var data,\n\t        x0 = this._x0,\n\t        y0 = this._y0,\n\t        x1,\n\t        y1,\n\t        x2,\n\t        y2,\n\t        x3 = this._x1,\n\t        y3 = this._y1,\n\t        quads = [],\n\t        node = this._root,\n\t        q,\n\t        i;\n\t\n\t    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n\t    if (radius == null) radius = Infinity;\n\t    else {\n\t      x0 = x - radius, y0 = y - radius;\n\t      x3 = x + radius, y3 = y + radius;\n\t      radius *= radius;\n\t    }\n\t\n\t    while (q = quads.pop()) {\n\t\n\t      // Stop searching if this quadrant can’t contain a closer node.\n\t      if (!(node = q.node)\n\t          || (x1 = q.x0) > x3\n\t          || (y1 = q.y0) > y3\n\t          || (x2 = q.x1) < x0\n\t          || (y2 = q.y1) < y0) continue;\n\t\n\t      // Bisect the current quadrant.\n\t      if (node.length) {\n\t        var xm = (x1 + x2) / 2,\n\t            ym = (y1 + y2) / 2;\n\t\n\t        quads.push(\n\t          new Quad(node[3], xm, ym, x2, y2),\n\t          new Quad(node[2], x1, ym, xm, y2),\n\t          new Quad(node[1], xm, y1, x2, ym),\n\t          new Quad(node[0], x1, y1, xm, ym)\n\t        );\n\t\n\t        // Visit the closest quadrant first.\n\t        if (i = (y >= ym) << 1 | (x >= xm)) {\n\t          q = quads[quads.length - 1];\n\t          quads[quads.length - 1] = quads[quads.length - 1 - i];\n\t          quads[quads.length - 1 - i] = q;\n\t        }\n\t      }\n\t\n\t      // Visit this point. (Visiting coincident points isn’t necessary!)\n\t      else {\n\t        var dx = x - +this._x.call(null, node.data),\n\t            dy = y - +this._y.call(null, node.data),\n\t            d2 = dx * dx + dy * dy;\n\t        if (d2 < radius) {\n\t          var d = Math.sqrt(radius = d2);\n\t          x0 = x - d, y0 = y - d;\n\t          x3 = x + d, y3 = y + d;\n\t          data = node.data;\n\t        }\n\t      }\n\t    }\n\t\n\t    return data;\n\t  }\n\t\n\t  function tree_remove(d) {\n\t    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\t\n\t    var parent,\n\t        node = this._root,\n\t        retainer,\n\t        previous,\n\t        next,\n\t        x0 = this._x0,\n\t        y0 = this._y0,\n\t        x1 = this._x1,\n\t        y1 = this._y1,\n\t        x,\n\t        y,\n\t        xm,\n\t        ym,\n\t        right,\n\t        bottom,\n\t        i,\n\t        j;\n\t\n\t    // If the tree is empty, initialize the root as a leaf.\n\t    if (!node) return this;\n\t\n\t    // Find the leaf node for the point.\n\t    // While descending, also retain the deepest parent with a non-removed sibling.\n\t    if (node.length) while (true) {\n\t      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n\t      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n\t      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n\t      if (!node.length) break;\n\t      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n\t    }\n\t\n\t    // Find the point to remove.\n\t    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n\t    if (next = node.next) delete node.next;\n\t\n\t    // If there are multiple coincident points, remove just the point.\n\t    if (previous) return (next ? previous.next = next : delete previous.next), this;\n\t\n\t    // If this is the root point, remove it.\n\t    if (!parent) return this._root = next, this;\n\t\n\t    // Remove this leaf.\n\t    next ? parent[i] = next : delete parent[i];\n\t\n\t    // If the parent now contains exactly one leaf, collapse superfluous parents.\n\t    if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n\t        && node === (parent[3] || parent[2] || parent[1] || parent[0])\n\t        && !node.length) {\n\t      if (retainer) retainer[j] = node;\n\t      else this._root = node;\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function removeAll(data) {\n\t    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n\t    return this;\n\t  }\n\t\n\t  function tree_root() {\n\t    return this._root;\n\t  }\n\t\n\t  function tree_size() {\n\t    var size = 0;\n\t    this.visit(function(node) {\n\t      if (!node.length) do ++size; while (node = node.next)\n\t    });\n\t    return size;\n\t  }\n\t\n\t  function tree_visit(callback) {\n\t    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n\t    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\t    while (q = quads.pop()) {\n\t      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n\t        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t      }\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function tree_visitAfter(callback) {\n\t    var quads = [], next = [], q;\n\t    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\t    while (q = quads.pop()) {\n\t      var node = q.node;\n\t      if (node.length) {\n\t        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n\t        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n\t        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n\t        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n\t        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n\t      }\n\t      next.push(q);\n\t    }\n\t    while (q = next.pop()) {\n\t      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function defaultX(d) {\n\t    return d[0];\n\t  }\n\t\n\t  function tree_x(_) {\n\t    return arguments.length ? (this._x = _, this) : this._x;\n\t  }\n\t\n\t  function defaultY(d) {\n\t    return d[1];\n\t  }\n\t\n\t  function tree_y(_) {\n\t    return arguments.length ? (this._y = _, this) : this._y;\n\t  }\n\t\n\t  function quadtree(nodes, x, y) {\n\t    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n\t    return nodes == null ? tree : tree.addAll(nodes);\n\t  }\n\t\n\t  function Quadtree(x, y, x0, y0, x1, y1) {\n\t    this._x = x;\n\t    this._y = y;\n\t    this._x0 = x0;\n\t    this._y0 = y0;\n\t    this._x1 = x1;\n\t    this._y1 = y1;\n\t    this._root = undefined;\n\t  }\n\t\n\t  function leaf_copy(leaf) {\n\t    var copy = {data: leaf.data}, next = copy;\n\t    while (leaf = leaf.next) next = next.next = {data: leaf.data};\n\t    return copy;\n\t  }\n\t\n\t  var treeProto = quadtree.prototype = Quadtree.prototype;\n\t\n\t  treeProto.copy = function() {\n\t    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n\t        node = this._root,\n\t        nodes,\n\t        child;\n\t\n\t    if (!node) return copy;\n\t\n\t    if (!node.length) return copy._root = leaf_copy(node), copy;\n\t\n\t    nodes = [{source: node, target: copy._root = new Array(4)}];\n\t    while (node = nodes.pop()) {\n\t      for (var i = 0; i < 4; ++i) {\n\t        if (child = node.source[i]) {\n\t          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n\t          else node.target[i] = leaf_copy(child);\n\t        }\n\t      }\n\t    }\n\t\n\t    return copy;\n\t  };\n\t\n\t  treeProto.add = tree_add;\n\t  treeProto.addAll = addAll;\n\t  treeProto.cover = tree_cover;\n\t  treeProto.data = tree_data;\n\t  treeProto.extent = tree_extent;\n\t  treeProto.find = tree_find;\n\t  treeProto.remove = tree_remove;\n\t  treeProto.removeAll = removeAll;\n\t  treeProto.root = tree_root;\n\t  treeProto.size = tree_size;\n\t  treeProto.visit = tree_visit;\n\t  treeProto.visitAfter = tree_visitAfter;\n\t  treeProto.x = tree_x;\n\t  treeProto.y = tree_y;\n\t\n\t  var slice$1 = [].slice;\n\t\n\t  var noabort = {};\n\t\n\t  function Queue(size) {\n\t    if (!(size >= 1)) throw new Error;\n\t    this._size = size;\n\t    this._call =\n\t    this._error = null;\n\t    this._tasks = [];\n\t    this._data = [];\n\t    this._waiting =\n\t    this._active =\n\t    this._ended =\n\t    this._start = 0; // inside a synchronous task callback?\n\t  }\n\t\n\t  Queue.prototype = queue.prototype = {\n\t    constructor: Queue,\n\t    defer: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      if (this._error != null) return this;\n\t      var t = slice$1.call(arguments, 1);\n\t      t.push(callback);\n\t      ++this._waiting, this._tasks.push(t);\n\t      poke(this);\n\t      return this;\n\t    },\n\t    abort: function() {\n\t      if (this._error == null) abort(this, new Error(\"abort\"));\n\t      return this;\n\t    },\n\t    await: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t      maybeNotify(this);\n\t      return this;\n\t    },\n\t    awaitAll: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = callback;\n\t      maybeNotify(this);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function poke(q) {\n\t    if (!q._start) try { start(q); } // let the current task complete\n\t    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n\t  }\n\t\n\t  function start(q) {\n\t    while (q._start = q._waiting && q._active < q._size) {\n\t      var i = q._ended + q._active,\n\t          t = q._tasks[i],\n\t          j = t.length - 1,\n\t          c = t[j];\n\t      t[j] = end(q, i);\n\t      --q._waiting, ++q._active;\n\t      t = c.apply(null, t);\n\t      if (!q._tasks[i]) continue; // task finished synchronously\n\t      q._tasks[i] = t || noabort;\n\t    }\n\t  }\n\t\n\t  function end(q, i) {\n\t    return function(e, r) {\n\t      if (!q._tasks[i]) return; // ignore multiple callbacks\n\t      --q._active, ++q._ended;\n\t      q._tasks[i] = null;\n\t      if (q._error != null) return; // ignore secondary errors\n\t      if (e != null) {\n\t        abort(q, e);\n\t      } else {\n\t        q._data[i] = r;\n\t        if (q._waiting) poke(q);\n\t        else maybeNotify(q);\n\t      }\n\t    };\n\t  }\n\t\n\t  function abort(q, e) {\n\t    var i = q._tasks.length, t;\n\t    q._error = e; // ignore active callbacks\n\t    q._data = undefined; // allow gc\n\t    q._waiting = NaN; // prevent starting\n\t\n\t    while (--i >= 0) {\n\t      if (t = q._tasks[i]) {\n\t        q._tasks[i] = null;\n\t        if (t.abort) try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t\n\t    q._active = NaN; // allow notification\n\t    maybeNotify(q);\n\t  }\n\t\n\t  function maybeNotify(q) {\n\t    if (!q._active && q._call) q._call(q._error, q._data);\n\t  }\n\t\n\t  function queue(concurrency) {\n\t    return new Queue(arguments.length ? +concurrency : Infinity);\n\t  }\n\t\n\t  function constant$1(x) {\n\t    return function constant() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  var epsilon$1 = 1e-12;\n\t  var pi$2 = Math.PI;\n\t  var halfPi$1 = pi$2 / 2;\n\t  var tau$2 = 2 * pi$2;\n\t\n\t  function arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t\n\t  function arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t\n\t  function arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t\n\t  function arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t\n\t  function arcPadAngle(d) {\n\t    return d && d.padAngle; // Note: optional!\n\t  }\n\t\n\t  function asin(x) {\n\t    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n\t  }\n\t\n\t  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n\t    var x10 = x1 - x0, y10 = y1 - y0,\n\t        x32 = x3 - x2, y32 = y3 - y2,\n\t        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n\t    return [x0 + t * x10, y0 + t * y10];\n\t  }\n\t\n\t  // Compute perpendicular offset line of length rc.\n\t  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n\t  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n\t    var x01 = x0 - x1,\n\t        y01 = y0 - y1,\n\t        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n\t        ox = lo * y01,\n\t        oy = -lo * x01,\n\t        x11 = x0 + ox,\n\t        y11 = y0 + oy,\n\t        x10 = x1 + ox,\n\t        y10 = y1 + oy,\n\t        x00 = (x11 + x10) / 2,\n\t        y00 = (y11 + y10) / 2,\n\t        dx = x10 - x11,\n\t        dy = y10 - y11,\n\t        d2 = dx * dx + dy * dy,\n\t        r = r1 - rc,\n\t        D = x11 * y10 - x10 * y11,\n\t        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n\t        cx0 = (D * dy - dx * d) / d2,\n\t        cy0 = (-D * dx - dy * d) / d2,\n\t        cx1 = (D * dy + dx * d) / d2,\n\t        cy1 = (-D * dx + dy * d) / d2,\n\t        dx0 = cx0 - x00,\n\t        dy0 = cy0 - y00,\n\t        dx1 = cx1 - x00,\n\t        dy1 = cy1 - y00;\n\t\n\t    // Pick the closer of the two intersection points.\n\t    // TODO Is there a faster way to determine which intersection to use?\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t\n\t    return {\n\t      cx: cx0,\n\t      cy: cy0,\n\t      x01: -ox,\n\t      y01: -oy,\n\t      x11: cx0 * (r1 / r - 1),\n\t      y11: cy0 * (r1 / r - 1)\n\t    };\n\t  }\n\t\n\t  function arc() {\n\t    var innerRadius = arcInnerRadius,\n\t        outerRadius = arcOuterRadius,\n\t        cornerRadius = constant$1(0),\n\t        padRadius = null,\n\t        startAngle = arcStartAngle,\n\t        endAngle = arcEndAngle,\n\t        padAngle = arcPadAngle,\n\t        context = null;\n\t\n\t    function arc() {\n\t      var buffer,\n\t          r,\n\t          r0 = +innerRadius.apply(this, arguments),\n\t          r1 = +outerRadius.apply(this, arguments),\n\t          a0 = startAngle.apply(this, arguments) - halfPi$1,\n\t          a1 = endAngle.apply(this, arguments) - halfPi$1,\n\t          da = Math.abs(a1 - a0),\n\t          cw = a1 > a0;\n\t\n\t      if (!context) context = buffer = path();\n\t\n\t      // Ensure that the outer radius is always larger than the inner radius.\n\t      if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\t\n\t      // Is it a point?\n\t      if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\t\n\t      // Or is it a circle or annulus?\n\t      else if (da > tau$2 - epsilon$1) {\n\t        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n\t        context.arc(0, 0, r1, a0, a1, !cw);\n\t        if (r0 > epsilon$1) {\n\t          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n\t          context.arc(0, 0, r0, a1, a0, cw);\n\t        }\n\t      }\n\t\n\t      // Or is it a circular or annular sector?\n\t      else {\n\t        var a01 = a0,\n\t            a11 = a1,\n\t            a00 = a0,\n\t            a10 = a1,\n\t            da0 = da,\n\t            da1 = da,\n\t            ap = padAngle.apply(this, arguments) / 2,\n\t            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n\t            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n\t            rc0 = rc,\n\t            rc1 = rc,\n\t            t0,\n\t            t1;\n\t\n\t        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\t        if (rp > epsilon$1) {\n\t          var p0 = asin(rp / r0 * Math.sin(ap)),\n\t              p1 = asin(rp / r1 * Math.sin(ap));\n\t          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n\t          else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n\t          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n\t          else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n\t        }\n\t\n\t        var x01 = r1 * Math.cos(a01),\n\t            y01 = r1 * Math.sin(a01),\n\t            x10 = r0 * Math.cos(a10),\n\t            y10 = r0 * Math.sin(a10);\n\t\n\t        // Apply rounded corners?\n\t        if (rc > epsilon$1) {\n\t          var x11 = r1 * Math.cos(a11),\n\t              y11 = r1 * Math.sin(a11),\n\t              x00 = r0 * Math.cos(a00),\n\t              y00 = r0 * Math.sin(a00);\n\t\n\t          // Restrict the corner radius according to the sector angle.\n\t          if (da < pi$2) {\n\t            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n\t                ax = x01 - oc[0],\n\t                ay = y01 - oc[1],\n\t                bx = x11 - oc[0],\n\t                by = y11 - oc[1],\n\t                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n\t                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t          }\n\t        }\n\t\n\t        // Is the sector collapsed to a line?\n\t        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\t\n\t        // Does the sector’s outer ring have rounded corners?\n\t        else if (rc1 > epsilon$1) {\n\t          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n\t          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\t\n\t          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t          // Have the corners merged?\n\t          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t          // Otherwise, draw the two corners and the ring.\n\t          else {\n\t            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n\t            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t          }\n\t        }\n\t\n\t        // Or is the outer ring just a circular arc?\n\t        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\t\n\t        // Is there no inner ring, and it’s a circular sector?\n\t        // Or perhaps it’s an annular sector collapsed due to padding?\n\t        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\t\n\t        // Does the sector’s inner ring (or point) have rounded corners?\n\t        else if (rc0 > epsilon$1) {\n\t          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n\t          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\t\n\t          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\t\n\t          // Have the corners merged?\n\t          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\t\n\t          // Otherwise, draw the two corners and the ring.\n\t          else {\n\t            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n\t            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n\t            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n\t          }\n\t        }\n\t\n\t        // Or is the inner ring just a circular arc?\n\t        else context.arc(0, 0, r0, a10, a00, cw);\n\t      }\n\t\n\t      context.closePath();\n\t\n\t      if (buffer) return context = null, buffer + \"\" || null;\n\t    }\n\t\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n\t          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n\t      return [Math.cos(a) * r, Math.sin(a) * r];\n\t    };\n\t\n\t    arc.innerRadius = function(_) {\n\t      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n\t    };\n\t\n\t    arc.outerRadius = function(_) {\n\t      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n\t    };\n\t\n\t    arc.cornerRadius = function(_) {\n\t      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n\t    };\n\t\n\t    arc.padRadius = function(_) {\n\t      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n\t    };\n\t\n\t    arc.startAngle = function(_) {\n\t      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n\t    };\n\t\n\t    arc.endAngle = function(_) {\n\t      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n\t    };\n\t\n\t    arc.padAngle = function(_) {\n\t      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n\t    };\n\t\n\t    arc.context = function(_) {\n\t      return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n\t    };\n\t\n\t    return arc;\n\t  }\n\t\n\t  function Linear(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  Linear.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; // proceed\n\t        default: this._context.lineTo(x, y); break;\n\t      }\n\t    }\n\t  };\n\t\n\t  function curveLinear(context) {\n\t    return new Linear(context);\n\t  }\n\t\n\t  function x(p) {\n\t    return p[0];\n\t  }\n\t\n\t  function y(p) {\n\t    return p[1];\n\t  }\n\t\n\t  function line() {\n\t    var x$$ = x,\n\t        y$$ = y,\n\t        defined = constant$1(true),\n\t        context = null,\n\t        curve = curveLinear,\n\t        output = null;\n\t\n\t    function line(data) {\n\t      var i,\n\t          n = data.length,\n\t          d,\n\t          defined0 = false,\n\t          buffer;\n\t\n\t      if (context == null) output = curve(buffer = path());\n\t\n\t      for (i = 0; i <= n; ++i) {\n\t        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t          if (defined0 = !defined0) output.lineStart();\n\t          else output.lineEnd();\n\t        }\n\t        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n\t      }\n\t\n\t      if (buffer) return output = null, buffer + \"\" || null;\n\t    }\n\t\n\t    line.x = function(_) {\n\t      return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$$;\n\t    };\n\t\n\t    line.y = function(_) {\n\t      return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$$;\n\t    };\n\t\n\t    line.defined = function(_) {\n\t      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n\t    };\n\t\n\t    line.curve = function(_) {\n\t      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n\t    };\n\t\n\t    line.context = function(_) {\n\t      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n\t    };\n\t\n\t    return line;\n\t  }\n\t\n\t  function area$1() {\n\t    var x0 = x,\n\t        x1 = null,\n\t        y0 = constant$1(0),\n\t        y1 = y,\n\t        defined = constant$1(true),\n\t        context = null,\n\t        curve = curveLinear,\n\t        output = null;\n\t\n\t    function area(data) {\n\t      var i,\n\t          j,\n\t          k,\n\t          n = data.length,\n\t          d,\n\t          defined0 = false,\n\t          buffer,\n\t          x0z = new Array(n),\n\t          y0z = new Array(n);\n\t\n\t      if (context == null) output = curve(buffer = path());\n\t\n\t      for (i = 0; i <= n; ++i) {\n\t        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n\t          if (defined0 = !defined0) {\n\t            j = i;\n\t            output.areaStart();\n\t            output.lineStart();\n\t          } else {\n\t            output.lineEnd();\n\t            output.lineStart();\n\t            for (k = i - 1; k >= j; --k) {\n\t              output.point(x0z[k], y0z[k]);\n\t            }\n\t            output.lineEnd();\n\t            output.areaEnd();\n\t          }\n\t        }\n\t        if (defined0) {\n\t          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n\t          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n\t        }\n\t      }\n\t\n\t      if (buffer) return output = null, buffer + \"\" || null;\n\t    }\n\t\n\t    function arealine() {\n\t      return line().defined(defined).curve(curve).context(context);\n\t    }\n\t\n\t    area.x = function(_) {\n\t      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n\t    };\n\t\n\t    area.x0 = function(_) {\n\t      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n\t    };\n\t\n\t    area.x1 = function(_) {\n\t      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n\t    };\n\t\n\t    area.y = function(_) {\n\t      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n\t    };\n\t\n\t    area.y0 = function(_) {\n\t      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n\t    };\n\t\n\t    area.y1 = function(_) {\n\t      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n\t    };\n\t\n\t    area.lineX0 =\n\t    area.lineY0 = function() {\n\t      return arealine().x(x0).y(y0);\n\t    };\n\t\n\t    area.lineY1 = function() {\n\t      return arealine().x(x0).y(y1);\n\t    };\n\t\n\t    area.lineX1 = function() {\n\t      return arealine().x(x1).y(y0);\n\t    };\n\t\n\t    area.defined = function(_) {\n\t      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n\t    };\n\t\n\t    area.curve = function(_) {\n\t      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n\t    };\n\t\n\t    area.context = function(_) {\n\t      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n\t    };\n\t\n\t    return area;\n\t  }\n\t\n\t  function descending$1(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  }\n\t\n\t  function identity$1(d) {\n\t    return d;\n\t  }\n\t\n\t  function pie() {\n\t    var value = identity$1,\n\t        sortValues = descending$1,\n\t        sort = null,\n\t        startAngle = constant$1(0),\n\t        endAngle = constant$1(tau$2),\n\t        padAngle = constant$1(0);\n\t\n\t    function pie(data) {\n\t      var i,\n\t          n = data.length,\n\t          j,\n\t          k,\n\t          sum = 0,\n\t          index = new Array(n),\n\t          arcs = new Array(n),\n\t          a0 = +startAngle.apply(this, arguments),\n\t          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n\t          a1,\n\t          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n\t          pa = p * (da < 0 ? -1 : 1),\n\t          v;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n\t          sum += v;\n\t        }\n\t      }\n\t\n\t      // Optionally sort the arcs by previously-computed values or by data.\n\t      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n\t      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\t\n\t      // Compute the arcs! They are stored in the original data's order.\n\t      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n\t        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n\t          data: data[j],\n\t          index: i,\n\t          value: v,\n\t          startAngle: a0,\n\t          endAngle: a1,\n\t          padAngle: p\n\t        };\n\t      }\n\t\n\t      return arcs;\n\t    }\n\t\n\t    pie.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n\t    };\n\t\n\t    pie.sortValues = function(_) {\n\t      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n\t    };\n\t\n\t    pie.sort = function(_) {\n\t      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n\t    };\n\t\n\t    pie.startAngle = function(_) {\n\t      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n\t    };\n\t\n\t    pie.endAngle = function(_) {\n\t      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n\t    };\n\t\n\t    pie.padAngle = function(_) {\n\t      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n\t    };\n\t\n\t    return pie;\n\t  }\n\t\n\t  var curveRadialLinear = curveRadial(curveLinear);\n\t\n\t  function Radial(curve) {\n\t    this._curve = curve;\n\t  }\n\t\n\t  Radial.prototype = {\n\t    areaStart: function() {\n\t      this._curve.areaStart();\n\t    },\n\t    areaEnd: function() {\n\t      this._curve.areaEnd();\n\t    },\n\t    lineStart: function() {\n\t      this._curve.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this._curve.lineEnd();\n\t    },\n\t    point: function(a, r) {\n\t      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n\t    }\n\t  };\n\t\n\t  function curveRadial(curve) {\n\t\n\t    function radial(context) {\n\t      return new Radial(curve(context));\n\t    }\n\t\n\t    radial._curve = curve;\n\t\n\t    return radial;\n\t  }\n\t\n\t  function radialLine(l) {\n\t    var c = l.curve;\n\t\n\t    l.angle = l.x, delete l.x;\n\t    l.radius = l.y, delete l.y;\n\t\n\t    l.curve = function(_) {\n\t      return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t    };\n\t\n\t    return l;\n\t  }\n\t\n\t  function radialLine$1() {\n\t    return radialLine(line().curve(curveRadialLinear));\n\t  }\n\t\n\t  function radialArea() {\n\t    var a = area$1().curve(curveRadialLinear),\n\t        c = a.curve,\n\t        x0 = a.lineX0,\n\t        x1 = a.lineX1,\n\t        y0 = a.lineY0,\n\t        y1 = a.lineY1;\n\t\n\t    a.angle = a.x, delete a.x;\n\t    a.startAngle = a.x0, delete a.x0;\n\t    a.endAngle = a.x1, delete a.x1;\n\t    a.radius = a.y, delete a.y;\n\t    a.innerRadius = a.y0, delete a.y0;\n\t    a.outerRadius = a.y1, delete a.y1;\n\t    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n\t    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n\t    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n\t    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\t\n\t    a.curve = function(_) {\n\t      return arguments.length ? c(curveRadial(_)) : c()._curve;\n\t    };\n\t\n\t    return a;\n\t  }\n\t\n\t  var circle = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size / pi$2);\n\t      context.moveTo(r, 0);\n\t      context.arc(0, 0, r, 0, tau$2);\n\t    }\n\t  };\n\t\n\t  var cross$1 = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      context.moveTo(-3 * r, -r);\n\t      context.lineTo(-r, -r);\n\t      context.lineTo(-r, -3 * r);\n\t      context.lineTo(r, -3 * r);\n\t      context.lineTo(r, -r);\n\t      context.lineTo(3 * r, -r);\n\t      context.lineTo(3 * r, r);\n\t      context.lineTo(r, r);\n\t      context.lineTo(r, 3 * r);\n\t      context.lineTo(-r, 3 * r);\n\t      context.lineTo(-r, r);\n\t      context.lineTo(-3 * r, r);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var tan30 = Math.sqrt(1 / 3);\n\t  var tan30_2 = tan30 * 2;\n\t  var diamond = {\n\t    draw: function(context, size) {\n\t      var y = Math.sqrt(size / tan30_2),\n\t          x = y * tan30;\n\t      context.moveTo(0, -y);\n\t      context.lineTo(x, 0);\n\t      context.lineTo(0, y);\n\t      context.lineTo(-x, 0);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var ka = 0.89081309152928522810;\n\t  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n\t  var kx = Math.sin(tau$2 / 10) * kr;\n\t  var ky = -Math.cos(tau$2 / 10) * kr;\n\t  var star = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size * ka),\n\t          x = kx * r,\n\t          y = ky * r;\n\t      context.moveTo(0, -r);\n\t      context.lineTo(x, y);\n\t      for (var i = 1; i < 5; ++i) {\n\t        var a = tau$2 * i / 5,\n\t            c = Math.cos(a),\n\t            s = Math.sin(a);\n\t        context.lineTo(s * r, -c * r);\n\t        context.lineTo(c * x - s * y, s * x + c * y);\n\t      }\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var square = {\n\t    draw: function(context, size) {\n\t      var w = Math.sqrt(size),\n\t          x = -w / 2;\n\t      context.rect(x, x, w, w);\n\t    }\n\t  };\n\t\n\t  var sqrt3 = Math.sqrt(3);\n\t\n\t  var triangle = {\n\t    draw: function(context, size) {\n\t      var y = -Math.sqrt(size / (sqrt3 * 3));\n\t      context.moveTo(0, y * 2);\n\t      context.lineTo(-sqrt3 * y, -y);\n\t      context.lineTo(sqrt3 * y, -y);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var c = -0.5;\n\t  var s = Math.sqrt(3) / 2;\n\t  var k = 1 / Math.sqrt(12);\n\t  var a = (k / 2 + 1) * 3;\n\t  var wye = {\n\t    draw: function(context, size) {\n\t      var r = Math.sqrt(size / a),\n\t          x0 = r / 2,\n\t          y0 = r * k,\n\t          x1 = x0,\n\t          y1 = r * k + r,\n\t          x2 = -x1,\n\t          y2 = y1;\n\t      context.moveTo(x0, y0);\n\t      context.lineTo(x1, y1);\n\t      context.lineTo(x2, y2);\n\t      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n\t      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n\t      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n\t      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n\t      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n\t      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n\t      context.closePath();\n\t    }\n\t  };\n\t\n\t  var symbols = [\n\t    circle,\n\t    cross$1,\n\t    diamond,\n\t    square,\n\t    star,\n\t    triangle,\n\t    wye\n\t  ];\n\t\n\t  function symbol() {\n\t    var type = constant$1(circle),\n\t        size = constant$1(64),\n\t        context = null;\n\t\n\t    function symbol() {\n\t      var buffer;\n\t      if (!context) context = buffer = path();\n\t      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n\t      if (buffer) return context = null, buffer + \"\" || null;\n\t    }\n\t\n\t    symbol.type = function(_) {\n\t      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n\t    };\n\t\n\t    symbol.size = function(_) {\n\t      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n\t    };\n\t\n\t    symbol.context = function(_) {\n\t      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n\t    };\n\t\n\t    return symbol;\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  function point(that, x, y) {\n\t    that._context.bezierCurveTo(\n\t      (2 * that._x0 + that._x1) / 3,\n\t      (2 * that._y0 + that._y1) / 3,\n\t      (that._x0 + 2 * that._x1) / 3,\n\t      (that._y0 + 2 * that._y1) / 3,\n\t      (that._x0 + 4 * that._x1 + x) / 6,\n\t      (that._y0 + 4 * that._y1 + y) / 6\n\t    );\n\t  }\n\t\n\t  function Basis(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  Basis.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 =\n\t      this._y0 = this._y1 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 3: point(this, this._x1, this._y1); // proceed\n\t        case 2: this._context.lineTo(this._x1, this._y1); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n\t        default: point(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t    }\n\t  };\n\t\n\t  function basis(context) {\n\t    return new Basis(context);\n\t  }\n\t\n\t  function BasisClosed(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  BasisClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n\t      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 1: {\n\t          this._context.moveTo(this._x2, this._y2);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 2: {\n\t          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n\t          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 3: {\n\t          this.point(this._x2, this._y2);\n\t          this.point(this._x3, this._y3);\n\t          this.point(this._x4, this._y4);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n\t        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n\t        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n\t        default: point(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t    }\n\t  };\n\t\n\t  function basisClosed(context) {\n\t    return new BasisClosed(context);\n\t  }\n\t\n\t  function BasisOpen(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  BasisOpen.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 =\n\t      this._y0 = this._y1 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n\t        case 3: this._point = 4; // proceed\n\t        default: point(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t    }\n\t  };\n\t\n\t  function basisOpen(context) {\n\t    return new BasisOpen(context);\n\t  }\n\t\n\t  function Bundle(context, beta) {\n\t    this._basis = new Basis(context);\n\t    this._beta = beta;\n\t  }\n\t\n\t  Bundle.prototype = {\n\t    lineStart: function() {\n\t      this._x = [];\n\t      this._y = [];\n\t      this._basis.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      var x = this._x,\n\t          y = this._y,\n\t          j = x.length - 1;\n\t\n\t      if (j > 0) {\n\t        var x0 = x[0],\n\t            y0 = y[0],\n\t            dx = x[j] - x0,\n\t            dy = y[j] - y0,\n\t            i = -1,\n\t            t;\n\t\n\t        while (++i <= j) {\n\t          t = i / j;\n\t          this._basis.point(\n\t            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n\t            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n\t          );\n\t        }\n\t      }\n\t\n\t      this._x = this._y = null;\n\t      this._basis.lineEnd();\n\t    },\n\t    point: function(x, y) {\n\t      this._x.push(+x);\n\t      this._y.push(+y);\n\t    }\n\t  };\n\t\n\t  var bundle = (function custom(beta) {\n\t\n\t    function bundle(context) {\n\t      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n\t    }\n\t\n\t    bundle.beta = function(beta) {\n\t      return custom(+beta);\n\t    };\n\t\n\t    return bundle;\n\t  })(0.85);\n\t\n\t  function point$1(that, x, y) {\n\t    that._context.bezierCurveTo(\n\t      that._x1 + that._k * (that._x2 - that._x0),\n\t      that._y1 + that._k * (that._y2 - that._y0),\n\t      that._x2 + that._k * (that._x1 - x),\n\t      that._y2 + that._k * (that._y1 - y),\n\t      that._x2,\n\t      that._y2\n\t    );\n\t  }\n\t\n\t  function Cardinal(context, tension) {\n\t    this._context = context;\n\t    this._k = (1 - tension) / 6;\n\t  }\n\t\n\t  Cardinal.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 2: this._context.lineTo(this._x2, this._y2); break;\n\t        case 3: point$1(this, this._x1, this._y1); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n\t        case 2: this._point = 3; // proceed\n\t        default: point$1(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var cardinal = (function custom(tension) {\n\t\n\t    function cardinal(context) {\n\t      return new Cardinal(context, tension);\n\t    }\n\t\n\t    cardinal.tension = function(tension) {\n\t      return custom(+tension);\n\t    };\n\t\n\t    return cardinal;\n\t  })(0);\n\t\n\t  function CardinalClosed(context, tension) {\n\t    this._context = context;\n\t    this._k = (1 - tension) / 6;\n\t  }\n\t\n\t  CardinalClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 1: {\n\t          this._context.moveTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 2: {\n\t          this._context.lineTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 3: {\n\t          this.point(this._x3, this._y3);\n\t          this.point(this._x4, this._y4);\n\t          this.point(this._x5, this._y5);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t        default: point$1(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var cardinalClosed = (function custom(tension) {\n\t\n\t    function cardinal(context) {\n\t      return new CardinalClosed(context, tension);\n\t    }\n\t\n\t    cardinal.tension = function(tension) {\n\t      return custom(+tension);\n\t    };\n\t\n\t    return cardinal;\n\t  })(0);\n\t\n\t  function CardinalOpen(context, tension) {\n\t    this._context = context;\n\t    this._k = (1 - tension) / 6;\n\t  }\n\t\n\t  CardinalOpen.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t        case 3: this._point = 4; // proceed\n\t        default: point$1(this, x, y); break;\n\t      }\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var cardinalOpen = (function custom(tension) {\n\t\n\t    function cardinal(context) {\n\t      return new CardinalOpen(context, tension);\n\t    }\n\t\n\t    cardinal.tension = function(tension) {\n\t      return custom(+tension);\n\t    };\n\t\n\t    return cardinal;\n\t  })(0);\n\t\n\t  function point$2(that, x, y) {\n\t    var x1 = that._x1,\n\t        y1 = that._y1,\n\t        x2 = that._x2,\n\t        y2 = that._y2;\n\t\n\t    if (that._l01_a > epsilon$1) {\n\t      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n\t          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n\t      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n\t      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n\t    }\n\t\n\t    if (that._l23_a > epsilon$1) {\n\t      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n\t          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n\t      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n\t      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n\t    }\n\t\n\t    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n\t  }\n\t\n\t  function CatmullRom(context, alpha) {\n\t    this._context = context;\n\t    this._alpha = alpha;\n\t  }\n\t\n\t  CatmullRom.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._l01_a = this._l12_a = this._l23_a =\n\t      this._l01_2a = this._l12_2a = this._l23_2a =\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 2: this._context.lineTo(this._x2, this._y2); break;\n\t        case 3: this.point(this, this._x2, this._y2); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t\n\t      if (this._point) {\n\t        var x23 = this._x2 - x,\n\t            y23 = this._y2 - y;\n\t        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t      }\n\t\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; // proceed\n\t        default: point$2(this, x, y); break;\n\t      }\n\t\n\t      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var catmullRom = (function custom(alpha) {\n\t\n\t    function catmullRom(context) {\n\t      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n\t    }\n\t\n\t    catmullRom.alpha = function(alpha) {\n\t      return custom(+alpha);\n\t    };\n\t\n\t    return catmullRom;\n\t  })(0.5);\n\t\n\t  function CatmullRomClosed(context, alpha) {\n\t    this._context = context;\n\t    this._alpha = alpha;\n\t  }\n\t\n\t  CatmullRomClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n\t      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n\t      this._l01_a = this._l12_a = this._l23_a =\n\t      this._l01_2a = this._l12_2a = this._l23_2a =\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 1: {\n\t          this._context.moveTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 2: {\n\t          this._context.lineTo(this._x3, this._y3);\n\t          this._context.closePath();\n\t          break;\n\t        }\n\t        case 3: {\n\t          this.point(this._x3, this._y3);\n\t          this.point(this._x4, this._y4);\n\t          this.point(this._x5, this._y5);\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t\n\t      if (this._point) {\n\t        var x23 = this._x2 - x,\n\t            y23 = this._y2 - y;\n\t        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t      }\n\t\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n\t        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n\t        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n\t        default: point$2(this, x, y); break;\n\t      }\n\t\n\t      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var catmullRomClosed = (function custom(alpha) {\n\t\n\t    function catmullRom(context) {\n\t      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n\t    }\n\t\n\t    catmullRom.alpha = function(alpha) {\n\t      return custom(+alpha);\n\t    };\n\t\n\t    return catmullRom;\n\t  })(0.5);\n\t\n\t  function CatmullRomOpen(context, alpha) {\n\t    this._context = context;\n\t    this._alpha = alpha;\n\t  }\n\t\n\t  CatmullRomOpen.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 = this._x2 =\n\t      this._y0 = this._y1 = this._y2 = NaN;\n\t      this._l01_a = this._l12_a = this._l23_a =\n\t      this._l01_2a = this._l12_2a = this._l23_2a =\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t\n\t      if (this._point) {\n\t        var x23 = this._x2 - x,\n\t            y23 = this._y2 - y;\n\t        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n\t      }\n\t\n\t      switch (this._point) {\n\t        case 0: this._point = 1; break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n\t        case 3: this._point = 4; // proceed\n\t        default: point$2(this, x, y); break;\n\t      }\n\t\n\t      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n\t      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n\t      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n\t      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n\t    }\n\t  };\n\t\n\t  var catmullRomOpen = (function custom(alpha) {\n\t\n\t    function catmullRom(context) {\n\t      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n\t    }\n\t\n\t    catmullRom.alpha = function(alpha) {\n\t      return custom(+alpha);\n\t    };\n\t\n\t    return catmullRom;\n\t  })(0.5);\n\t\n\t  function LinearClosed(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  LinearClosed.prototype = {\n\t    areaStart: noop,\n\t    areaEnd: noop,\n\t    lineStart: function() {\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (this._point) this._context.closePath();\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      if (this._point) this._context.lineTo(x, y);\n\t      else this._point = 1, this._context.moveTo(x, y);\n\t    }\n\t  };\n\t\n\t  function linearClosed(context) {\n\t    return new LinearClosed(context);\n\t  }\n\t\n\t  function sign(x) {\n\t    return x < 0 ? -1 : 1;\n\t  }\n\t\n\t  // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n\t  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n\t  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n\t  // NOV(II), P. 443, 1990.\n\t  function slope3(that, x2, y2) {\n\t    var h0 = that._x1 - that._x0,\n\t        h1 = x2 - that._x1,\n\t        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n\t        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n\t        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n\t    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n\t  }\n\t\n\t  // Calculate a one-sided slope.\n\t  function slope2(that, t) {\n\t    var h = that._x1 - that._x0;\n\t    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n\t  }\n\t\n\t  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n\t  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n\t  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n\t  function point$3(that, t0, t1) {\n\t    var x0 = that._x0,\n\t        y0 = that._y0,\n\t        x1 = that._x1,\n\t        y1 = that._y1,\n\t        dx = (x1 - x0) / 3;\n\t    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n\t  }\n\t\n\t  function MonotoneX(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  MonotoneX.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x0 = this._x1 =\n\t      this._y0 = this._y1 =\n\t      this._t0 = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      switch (this._point) {\n\t        case 2: this._context.lineTo(this._x1, this._y1); break;\n\t        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n\t      }\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      var t1 = NaN;\n\t\n\t      x = +x, y = +y;\n\t      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; break;\n\t        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n\t        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n\t      }\n\t\n\t      this._x0 = this._x1, this._x1 = x;\n\t      this._y0 = this._y1, this._y1 = y;\n\t      this._t0 = t1;\n\t    }\n\t  }\n\t\n\t  function MonotoneY(context) {\n\t    this._context = new ReflectContext(context);\n\t  }\n\t\n\t  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n\t    MonotoneX.prototype.point.call(this, y, x);\n\t  };\n\t\n\t  function ReflectContext(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  ReflectContext.prototype = {\n\t    moveTo: function(x, y) { this._context.moveTo(y, x); },\n\t    closePath: function() { this._context.closePath(); },\n\t    lineTo: function(x, y) { this._context.lineTo(y, x); },\n\t    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n\t  };\n\t\n\t  function monotoneX(context) {\n\t    return new MonotoneX(context);\n\t  }\n\t\n\t  function monotoneY(context) {\n\t    return new MonotoneY(context);\n\t  }\n\t\n\t  function Natural(context) {\n\t    this._context = context;\n\t  }\n\t\n\t  Natural.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x = [];\n\t      this._y = [];\n\t    },\n\t    lineEnd: function() {\n\t      var x = this._x,\n\t          y = this._y,\n\t          n = x.length;\n\t\n\t      if (n) {\n\t        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n\t        if (n === 2) {\n\t          this._context.lineTo(x[1], y[1]);\n\t        } else {\n\t          var px = controlPoints(x),\n\t              py = controlPoints(y);\n\t          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n\t            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n\t          }\n\t        }\n\t      }\n\t\n\t      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n\t      this._line = 1 - this._line;\n\t      this._x = this._y = null;\n\t    },\n\t    point: function(x, y) {\n\t      this._x.push(+x);\n\t      this._y.push(+y);\n\t    }\n\t  };\n\t\n\t  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n\t  function controlPoints(x) {\n\t    var i,\n\t        n = x.length - 1,\n\t        m,\n\t        a = new Array(n),\n\t        b = new Array(n),\n\t        r = new Array(n);\n\t    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n\t    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n\t    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n\t    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n\t    a[n - 1] = r[n - 1] / b[n - 1];\n\t    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n\t    b[n - 1] = (x[n] + a[n - 1]) / 2;\n\t    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n\t    return [a, b];\n\t  }\n\t\n\t  function natural(context) {\n\t    return new Natural(context);\n\t  }\n\t\n\t  function Step(context, t) {\n\t    this._context = context;\n\t    this._t = t;\n\t  }\n\t\n\t  Step.prototype = {\n\t    areaStart: function() {\n\t      this._line = 0;\n\t    },\n\t    areaEnd: function() {\n\t      this._line = NaN;\n\t    },\n\t    lineStart: function() {\n\t      this._x = this._y = NaN;\n\t      this._point = 0;\n\t    },\n\t    lineEnd: function() {\n\t      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n\t      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n\t      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n\t    },\n\t    point: function(x, y) {\n\t      x = +x, y = +y;\n\t      switch (this._point) {\n\t        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n\t        case 1: this._point = 2; // proceed\n\t        default: {\n\t          if (this._t <= 0) {\n\t            this._context.lineTo(this._x, y);\n\t            this._context.lineTo(x, y);\n\t          } else {\n\t            var x1 = this._x * (1 - this._t) + x * this._t;\n\t            this._context.lineTo(x1, this._y);\n\t            this._context.lineTo(x1, y);\n\t          }\n\t          break;\n\t        }\n\t      }\n\t      this._x = x, this._y = y;\n\t    }\n\t  };\n\t\n\t  function step(context) {\n\t    return new Step(context, 0.5);\n\t  }\n\t\n\t  function stepBefore(context) {\n\t    return new Step(context, 0);\n\t  }\n\t\n\t  function stepAfter(context) {\n\t    return new Step(context, 1);\n\t  }\n\t\n\t  var slice$2 = Array.prototype.slice;\n\t\n\t  function none(series, order) {\n\t    if (!((n = series.length) > 1)) return;\n\t    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n\t      s0 = s1, s1 = series[order[i]];\n\t      for (var j = 0; j < m; ++j) {\n\t        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n\t      }\n\t    }\n\t  }\n\t\n\t  function none$1(series) {\n\t    var n = series.length, o = new Array(n);\n\t    while (--n >= 0) o[n] = n;\n\t    return o;\n\t  }\n\t\n\t  function stackValue(d, key) {\n\t    return d[key];\n\t  }\n\t\n\t  function stack() {\n\t    var keys = constant$1([]),\n\t        order = none$1,\n\t        offset = none,\n\t        value = stackValue;\n\t\n\t    function stack(data) {\n\t      var kz = keys.apply(this, arguments),\n\t          i,\n\t          m = data.length,\n\t          n = kz.length,\n\t          sz = new Array(n),\n\t          oz;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n\t          si[j] = sij = [0, +value(data[j], ki, j, data)];\n\t          sij.data = data[j];\n\t        }\n\t        si.key = ki;\n\t      }\n\t\n\t      for (i = 0, oz = order(sz); i < n; ++i) {\n\t        sz[oz[i]].index = i;\n\t      }\n\t\n\t      offset(sz, oz);\n\t      return sz;\n\t    }\n\t\n\t    stack.keys = function(_) {\n\t      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : keys;\n\t    };\n\t\n\t    stack.value = function(_) {\n\t      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n\t    };\n\t\n\t    stack.order = function(_) {\n\t      return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : order;\n\t    };\n\t\n\t    stack.offset = function(_) {\n\t      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n\t    };\n\t\n\t    return stack;\n\t  }\n\t\n\t  function expand(series, order) {\n\t    if (!((n = series.length) > 0)) return;\n\t    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n\t      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n\t    }\n\t    none(series, order);\n\t  }\n\t\n\t  function silhouette(series, order) {\n\t    if (!((n = series.length) > 0)) return;\n\t    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n\t      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n\t      s0[j][1] += s0[j][0] = -y / 2;\n\t    }\n\t    none(series, order);\n\t  }\n\t\n\t  function wiggle(series, order) {\n\t    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n\t    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n\t      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n\t        var si = series[order[i]],\n\t            sij0 = si[j][1] || 0,\n\t            sij1 = si[j - 1][1] || 0,\n\t            s3 = (sij0 - sij1) / 2;\n\t        for (var k = 0; k < i; ++k) {\n\t          var sk = series[order[k]],\n\t              skj0 = sk[j][1] || 0,\n\t              skj1 = sk[j - 1][1] || 0;\n\t          s3 += skj0 - skj1;\n\t        }\n\t        s1 += sij0, s2 += s3 * sij0;\n\t      }\n\t      s0[j - 1][1] += s0[j - 1][0] = y;\n\t      if (s1) y -= s2 / s1;\n\t    }\n\t    s0[j - 1][1] += s0[j - 1][0] = y;\n\t    none(series, order);\n\t  }\n\t\n\t  function ascending$1(series) {\n\t    var sums = series.map(sum$1);\n\t    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n\t  }\n\t\n\t  function sum$1(series) {\n\t    var s = 0, i = -1, n = series.length, v;\n\t    while (++i < n) if (v = +series[i][1]) s += v;\n\t    return s;\n\t  }\n\t\n\t  function descending$2(series) {\n\t    return ascending$1(series).reverse();\n\t  }\n\t\n\t  function insideOut(series) {\n\t    var n = series.length,\n\t        i,\n\t        j,\n\t        sums = series.map(sum$1),\n\t        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n\t        top = 0,\n\t        bottom = 0,\n\t        tops = [],\n\t        bottoms = [];\n\t\n\t    for (i = 0; i < n; ++i) {\n\t      j = order[i];\n\t      if (top < bottom) {\n\t        top += sums[j];\n\t        tops.push(j);\n\t      } else {\n\t        bottom += sums[j];\n\t        bottoms.push(j);\n\t      }\n\t    }\n\t\n\t    return bottoms.reverse().concat(tops);\n\t  }\n\t\n\t  function reverse(series) {\n\t    return none$1(series).reverse();\n\t  }\n\t\n\t  function define(constructor, factory, prototype) {\n\t    constructor.prototype = factory.prototype = prototype;\n\t    prototype.constructor = constructor;\n\t  }\n\t\n\t  function extend(parent, definition) {\n\t    var prototype = Object.create(parent.prototype);\n\t    for (var key in definition) prototype[key] = definition[key];\n\t    return prototype;\n\t  }\n\t\n\t  function Color() {}\n\t\n\t  var darker = 0.7;\n\t  var brighter = 1 / darker;\n\t\n\t  var reHex3 = /^#([0-9a-f]{3})$/;\n\t  var reHex6 = /^#([0-9a-f]{6})$/;\n\t  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n\t  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n\t  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n\t  var named = {\n\t    aliceblue: 0xf0f8ff,\n\t    antiquewhite: 0xfaebd7,\n\t    aqua: 0x00ffff,\n\t    aquamarine: 0x7fffd4,\n\t    azure: 0xf0ffff,\n\t    beige: 0xf5f5dc,\n\t    bisque: 0xffe4c4,\n\t    black: 0x000000,\n\t    blanchedalmond: 0xffebcd,\n\t    blue: 0x0000ff,\n\t    blueviolet: 0x8a2be2,\n\t    brown: 0xa52a2a,\n\t    burlywood: 0xdeb887,\n\t    cadetblue: 0x5f9ea0,\n\t    chartreuse: 0x7fff00,\n\t    chocolate: 0xd2691e,\n\t    coral: 0xff7f50,\n\t    cornflowerblue: 0x6495ed,\n\t    cornsilk: 0xfff8dc,\n\t    crimson: 0xdc143c,\n\t    cyan: 0x00ffff,\n\t    darkblue: 0x00008b,\n\t    darkcyan: 0x008b8b,\n\t    darkgoldenrod: 0xb8860b,\n\t    darkgray: 0xa9a9a9,\n\t    darkgreen: 0x006400,\n\t    darkgrey: 0xa9a9a9,\n\t    darkkhaki: 0xbdb76b,\n\t    darkmagenta: 0x8b008b,\n\t    darkolivegreen: 0x556b2f,\n\t    darkorange: 0xff8c00,\n\t    darkorchid: 0x9932cc,\n\t    darkred: 0x8b0000,\n\t    darksalmon: 0xe9967a,\n\t    darkseagreen: 0x8fbc8f,\n\t    darkslateblue: 0x483d8b,\n\t    darkslategray: 0x2f4f4f,\n\t    darkslategrey: 0x2f4f4f,\n\t    darkturquoise: 0x00ced1,\n\t    darkviolet: 0x9400d3,\n\t    deeppink: 0xff1493,\n\t    deepskyblue: 0x00bfff,\n\t    dimgray: 0x696969,\n\t    dimgrey: 0x696969,\n\t    dodgerblue: 0x1e90ff,\n\t    firebrick: 0xb22222,\n\t    floralwhite: 0xfffaf0,\n\t    forestgreen: 0x228b22,\n\t    fuchsia: 0xff00ff,\n\t    gainsboro: 0xdcdcdc,\n\t    ghostwhite: 0xf8f8ff,\n\t    gold: 0xffd700,\n\t    goldenrod: 0xdaa520,\n\t    gray: 0x808080,\n\t    green: 0x008000,\n\t    greenyellow: 0xadff2f,\n\t    grey: 0x808080,\n\t    honeydew: 0xf0fff0,\n\t    hotpink: 0xff69b4,\n\t    indianred: 0xcd5c5c,\n\t    indigo: 0x4b0082,\n\t    ivory: 0xfffff0,\n\t    khaki: 0xf0e68c,\n\t    lavender: 0xe6e6fa,\n\t    lavenderblush: 0xfff0f5,\n\t    lawngreen: 0x7cfc00,\n\t    lemonchiffon: 0xfffacd,\n\t    lightblue: 0xadd8e6,\n\t    lightcoral: 0xf08080,\n\t    lightcyan: 0xe0ffff,\n\t    lightgoldenrodyellow: 0xfafad2,\n\t    lightgray: 0xd3d3d3,\n\t    lightgreen: 0x90ee90,\n\t    lightgrey: 0xd3d3d3,\n\t    lightpink: 0xffb6c1,\n\t    lightsalmon: 0xffa07a,\n\t    lightseagreen: 0x20b2aa,\n\t    lightskyblue: 0x87cefa,\n\t    lightslategray: 0x778899,\n\t    lightslategrey: 0x778899,\n\t    lightsteelblue: 0xb0c4de,\n\t    lightyellow: 0xffffe0,\n\t    lime: 0x00ff00,\n\t    limegreen: 0x32cd32,\n\t    linen: 0xfaf0e6,\n\t    magenta: 0xff00ff,\n\t    maroon: 0x800000,\n\t    mediumaquamarine: 0x66cdaa,\n\t    mediumblue: 0x0000cd,\n\t    mediumorchid: 0xba55d3,\n\t    mediumpurple: 0x9370db,\n\t    mediumseagreen: 0x3cb371,\n\t    mediumslateblue: 0x7b68ee,\n\t    mediumspringgreen: 0x00fa9a,\n\t    mediumturquoise: 0x48d1cc,\n\t    mediumvioletred: 0xc71585,\n\t    midnightblue: 0x191970,\n\t    mintcream: 0xf5fffa,\n\t    mistyrose: 0xffe4e1,\n\t    moccasin: 0xffe4b5,\n\t    navajowhite: 0xffdead,\n\t    navy: 0x000080,\n\t    oldlace: 0xfdf5e6,\n\t    olive: 0x808000,\n\t    olivedrab: 0x6b8e23,\n\t    orange: 0xffa500,\n\t    orangered: 0xff4500,\n\t    orchid: 0xda70d6,\n\t    palegoldenrod: 0xeee8aa,\n\t    palegreen: 0x98fb98,\n\t    paleturquoise: 0xafeeee,\n\t    palevioletred: 0xdb7093,\n\t    papayawhip: 0xffefd5,\n\t    peachpuff: 0xffdab9,\n\t    peru: 0xcd853f,\n\t    pink: 0xffc0cb,\n\t    plum: 0xdda0dd,\n\t    powderblue: 0xb0e0e6,\n\t    purple: 0x800080,\n\t    rebeccapurple: 0x663399,\n\t    red: 0xff0000,\n\t    rosybrown: 0xbc8f8f,\n\t    royalblue: 0x4169e1,\n\t    saddlebrown: 0x8b4513,\n\t    salmon: 0xfa8072,\n\t    sandybrown: 0xf4a460,\n\t    seagreen: 0x2e8b57,\n\t    seashell: 0xfff5ee,\n\t    sienna: 0xa0522d,\n\t    silver: 0xc0c0c0,\n\t    skyblue: 0x87ceeb,\n\t    slateblue: 0x6a5acd,\n\t    slategray: 0x708090,\n\t    slategrey: 0x708090,\n\t    snow: 0xfffafa,\n\t    springgreen: 0x00ff7f,\n\t    steelblue: 0x4682b4,\n\t    tan: 0xd2b48c,\n\t    teal: 0x008080,\n\t    thistle: 0xd8bfd8,\n\t    tomato: 0xff6347,\n\t    turquoise: 0x40e0d0,\n\t    violet: 0xee82ee,\n\t    wheat: 0xf5deb3,\n\t    white: 0xffffff,\n\t    whitesmoke: 0xf5f5f5,\n\t    yellow: 0xffff00,\n\t    yellowgreen: 0x9acd32\n\t  };\n\t\n\t  define(Color, color, {\n\t    displayable: function() {\n\t      return this.rgb().displayable();\n\t    },\n\t    toString: function() {\n\t      return this.rgb() + \"\";\n\t    }\n\t  });\n\t\n\t  function color(format) {\n\t    var m;\n\t    format = (format + \"\").trim().toLowerCase();\n\t    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n\t        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n\t        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n\t        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n\t        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n\t        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n\t        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n\t        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n\t        : named.hasOwnProperty(format) ? rgbn(named[format])\n\t        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n\t        : null;\n\t  }\n\t\n\t  function rgbn(n) {\n\t    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n\t  }\n\t\n\t  function rgba(r, g, b, a) {\n\t    if (a <= 0) r = g = b = NaN;\n\t    return new Rgb(r, g, b, a);\n\t  }\n\t\n\t  function rgbConvert(o) {\n\t    if (!(o instanceof Color)) o = color(o);\n\t    if (!o) return new Rgb;\n\t    o = o.rgb();\n\t    return new Rgb(o.r, o.g, o.b, o.opacity);\n\t  }\n\t\n\t  function colorRgb(r, g, b, opacity) {\n\t    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Rgb(r, g, b, opacity) {\n\t    this.r = +r;\n\t    this.g = +g;\n\t    this.b = +b;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Rgb, colorRgb, extend(Color, {\n\t    brighter: function(k) {\n\t      k = k == null ? brighter : Math.pow(brighter, k);\n\t      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      k = k == null ? darker : Math.pow(darker, k);\n\t      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      return this;\n\t    },\n\t    displayable: function() {\n\t      return (0 <= this.r && this.r <= 255)\n\t          && (0 <= this.g && this.g <= 255)\n\t          && (0 <= this.b && this.b <= 255)\n\t          && (0 <= this.opacity && this.opacity <= 1);\n\t    },\n\t    toString: function() {\n\t      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n\t      return (a === 1 ? \"rgb(\" : \"rgba(\")\n\t          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n\t          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n\t          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n\t          + (a === 1 ? \")\" : \", \" + a + \")\");\n\t    }\n\t  }));\n\t\n\t  function hsla(h, s, l, a) {\n\t    if (a <= 0) h = s = l = NaN;\n\t    else if (l <= 0 || l >= 1) h = s = NaN;\n\t    else if (s <= 0) h = NaN;\n\t    return new Hsl(h, s, l, a);\n\t  }\n\t\n\t  function hslConvert(o) {\n\t    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n\t    if (!(o instanceof Color)) o = color(o);\n\t    if (!o) return new Hsl;\n\t    if (o instanceof Hsl) return o;\n\t    o = o.rgb();\n\t    var r = o.r / 255,\n\t        g = o.g / 255,\n\t        b = o.b / 255,\n\t        min = Math.min(r, g, b),\n\t        max = Math.max(r, g, b),\n\t        h = NaN,\n\t        s = max - min,\n\t        l = (max + min) / 2;\n\t    if (s) {\n\t      if (r === max) h = (g - b) / s + (g < b) * 6;\n\t      else if (g === max) h = (b - r) / s + 2;\n\t      else h = (r - g) / s + 4;\n\t      s /= l < 0.5 ? max + min : 2 - max - min;\n\t      h *= 60;\n\t    } else {\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new Hsl(h, s, l, o.opacity);\n\t  }\n\t\n\t  function colorHsl(h, s, l, opacity) {\n\t    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Hsl(h, s, l, opacity) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Hsl, colorHsl, extend(Color, {\n\t    brighter: function(k) {\n\t      k = k == null ? brighter : Math.pow(brighter, k);\n\t      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      k = k == null ? darker : Math.pow(darker, k);\n\t      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      var h = this.h % 360 + (this.h < 0) * 360,\n\t          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n\t          l = this.l,\n\t          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n\t          m1 = 2 * l - m2;\n\t      return new Rgb(\n\t        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n\t        hsl2rgb(h, m1, m2),\n\t        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n\t        this.opacity\n\t      );\n\t    },\n\t    displayable: function() {\n\t      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n\t          && (0 <= this.l && this.l <= 1)\n\t          && (0 <= this.opacity && this.opacity <= 1);\n\t    }\n\t  }));\n\t\n\t  /* From FvD 13.37, CSS Color Module Level 3 */\n\t  function hsl2rgb(h, m1, m2) {\n\t    return (h < 60 ? m1 + (m2 - m1) * h / 60\n\t        : h < 180 ? m2\n\t        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n\t        : m1) * 255;\n\t  }\n\t\n\t  var deg2rad = Math.PI / 180;\n\t  var rad2deg = 180 / Math.PI;\n\t\n\t  var Kn = 18;\n\t  var Xn = 0.950470;\n\t  var Yn = 1;\n\t  var Zn = 1.088830;\n\t  var t0 = 4 / 29;\n\t  var t1 = 6 / 29;\n\t  var t2 = 3 * t1 * t1;\n\t  var t3 = t1 * t1 * t1;\n\t  function labConvert(o) {\n\t    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n\t    if (o instanceof Hcl) {\n\t      var h = o.h * deg2rad;\n\t      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n\t    }\n\t    if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t    var b = rgb2xyz(o.r),\n\t        a = rgb2xyz(o.g),\n\t        l = rgb2xyz(o.b),\n\t        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n\t        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n\t        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\t    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n\t  }\n\t\n\t  function lab(l, a, b, opacity) {\n\t    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Lab(l, a, b, opacity) {\n\t    this.l = +l;\n\t    this.a = +a;\n\t    this.b = +b;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Lab, lab, extend(Color, {\n\t    brighter: function(k) {\n\t      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      var y = (this.l + 16) / 116,\n\t          x = isNaN(this.a) ? y : y + this.a / 500,\n\t          z = isNaN(this.b) ? y : y - this.b / 200;\n\t      y = Yn * lab2xyz(y);\n\t      x = Xn * lab2xyz(x);\n\t      z = Zn * lab2xyz(z);\n\t      return new Rgb(\n\t        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n\t        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n\t        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n\t        this.opacity\n\t      );\n\t    }\n\t  }));\n\t\n\t  function xyz2lab(t) {\n\t    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n\t  }\n\t\n\t  function lab2xyz(t) {\n\t    return t > t1 ? t * t * t : t2 * (t - t0);\n\t  }\n\t\n\t  function xyz2rgb(x) {\n\t    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n\t  }\n\t\n\t  function rgb2xyz(x) {\n\t    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n\t  }\n\t\n\t  function hclConvert(o) {\n\t    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n\t    if (!(o instanceof Lab)) o = labConvert(o);\n\t    var h = Math.atan2(o.b, o.a) * rad2deg;\n\t    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n\t  }\n\t\n\t  function colorHcl(h, c, l, opacity) {\n\t    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Hcl(h, c, l, opacity) {\n\t    this.h = +h;\n\t    this.c = +c;\n\t    this.l = +l;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Hcl, colorHcl, extend(Color, {\n\t    brighter: function(k) {\n\t      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n\t    },\n\t    rgb: function() {\n\t      return labConvert(this).rgb();\n\t    }\n\t  }));\n\t\n\t  var A = -0.14861;\n\t  var B = +1.78277;\n\t  var C = -0.29227;\n\t  var D = -0.90649;\n\t  var E = +1.97294;\n\t  var ED = E * D;\n\t  var EB = E * B;\n\t  var BC_DA = B * C - D * A;\n\t  function cubehelixConvert(o) {\n\t    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n\t    if (!(o instanceof Rgb)) o = rgbConvert(o);\n\t    var r = o.r / 255,\n\t        g = o.g / 255,\n\t        b = o.b / 255,\n\t        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n\t        bl = b - l,\n\t        k = (E * (g - l) - C * bl) / D,\n\t        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n\t        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n\t    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n\t  }\n\t\n\t  function cubehelix(h, s, l, opacity) {\n\t    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n\t  }\n\t\n\t  function Cubehelix(h, s, l, opacity) {\n\t    this.h = +h;\n\t    this.s = +s;\n\t    this.l = +l;\n\t    this.opacity = +opacity;\n\t  }\n\t\n\t  define(Cubehelix, cubehelix, extend(Color, {\n\t    brighter: function(k) {\n\t      k = k == null ? brighter : Math.pow(brighter, k);\n\t      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    darker: function(k) {\n\t      k = k == null ? darker : Math.pow(darker, k);\n\t      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n\t    },\n\t    rgb: function() {\n\t      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n\t          l = +this.l,\n\t          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n\t          cosh = Math.cos(h),\n\t          sinh = Math.sin(h);\n\t      return new Rgb(\n\t        255 * (l + a * (A * cosh + B * sinh)),\n\t        255 * (l + a * (C * cosh + D * sinh)),\n\t        255 * (l + a * (E * cosh)),\n\t        this.opacity\n\t      );\n\t    }\n\t  }));\n\t\n\t  function basis$1(t1, v0, v1, v2, v3) {\n\t    var t2 = t1 * t1, t3 = t2 * t1;\n\t    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n\t        + (4 - 6 * t2 + 3 * t3) * v1\n\t        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n\t        + t3 * v3) / 6;\n\t  }\n\t\n\t  function basis$2(values) {\n\t    var n = values.length - 1;\n\t    return function(t) {\n\t      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n\t          v1 = values[i],\n\t          v2 = values[i + 1],\n\t          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n\t          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n\t      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t    };\n\t  }\n\t\n\t  function basisClosed$1(values) {\n\t    var n = values.length;\n\t    return function(t) {\n\t      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n\t          v0 = values[(i + n - 1) % n],\n\t          v1 = values[i % n],\n\t          v2 = values[(i + 1) % n],\n\t          v3 = values[(i + 2) % n];\n\t      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n\t    };\n\t  }\n\t\n\t  function constant$2(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function linear$1(a, d) {\n\t    return function(t) {\n\t      return a + t * d;\n\t    };\n\t  }\n\t\n\t  function exponential$1(a, b, y) {\n\t    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n\t      return Math.pow(a + t * b, y);\n\t    };\n\t  }\n\t\n\t  function hue(a, b) {\n\t    var d = b - a;\n\t    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\n\t  }\n\t\n\t  function gamma(y) {\n\t    return (y = +y) === 1 ? nogamma : function(a, b) {\n\t      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);\n\t    };\n\t  }\n\t\n\t  function nogamma(a, b) {\n\t    var d = b - a;\n\t    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\n\t  }\n\t\n\t  var interpolateRgb = (function rgbGamma(y) {\n\t    var color = gamma(y);\n\t\n\t    function rgb(start, end) {\n\t      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n\t          g = color(start.g, end.g),\n\t          b = color(start.b, end.b),\n\t          opacity = color(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.r = r(t);\n\t        start.g = g(t);\n\t        start.b = b(t);\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t\n\t    rgb.gamma = rgbGamma;\n\t\n\t    return rgb;\n\t  })(1);\n\t\n\t  function rgbSpline(spline) {\n\t    return function(colors) {\n\t      var n = colors.length,\n\t          r = new Array(n),\n\t          g = new Array(n),\n\t          b = new Array(n),\n\t          i, color;\n\t      for (i = 0; i < n; ++i) {\n\t        color = colorRgb(colors[i]);\n\t        r[i] = color.r || 0;\n\t        g[i] = color.g || 0;\n\t        b[i] = color.b || 0;\n\t      }\n\t      r = spline(r);\n\t      g = spline(g);\n\t      b = spline(b);\n\t      color.opacity = 1;\n\t      return function(t) {\n\t        color.r = r(t);\n\t        color.g = g(t);\n\t        color.b = b(t);\n\t        return color + \"\";\n\t      };\n\t    };\n\t  }\n\t\n\t  var rgbBasis = rgbSpline(basis$2);\n\t  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\t\n\t  function array$1(a, b) {\n\t    var nb = b ? b.length : 0,\n\t        na = a ? Math.min(nb, a.length) : 0,\n\t        x = new Array(nb),\n\t        c = new Array(nb),\n\t        i;\n\t\n\t    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n\t    for (; i < nb; ++i) c[i] = b[i];\n\t\n\t    return function(t) {\n\t      for (i = 0; i < na; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  function date(a, b) {\n\t    var d = new Date;\n\t    return a = +a, b -= a, function(t) {\n\t      return d.setTime(a + b * t), d;\n\t    };\n\t  }\n\t\n\t  function interpolateNumber(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return a + b * t;\n\t    };\n\t  }\n\t\n\t  function object(a, b) {\n\t    var i = {},\n\t        c = {},\n\t        k;\n\t\n\t    if (a === null || typeof a !== \"object\") a = {};\n\t    if (b === null || typeof b !== \"object\") b = {};\n\t\n\t    for (k in b) {\n\t      if (k in a) {\n\t        i[k] = interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t\n\t  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n\t  var reB = new RegExp(reA.source, \"g\");\n\t  function zero(b) {\n\t    return function() {\n\t      return b;\n\t    };\n\t  }\n\t\n\t  function one(b) {\n\t    return function(t) {\n\t      return b(t) + \"\";\n\t    };\n\t  }\n\t\n\t  function interpolateString(a, b) {\n\t    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n\t        am, // current match in a\n\t        bm, // current match in b\n\t        bs, // string preceding current number in b, if any\n\t        i = -1, // index in s\n\t        s = [], // string constants and placeholders\n\t        q = []; // number interpolators\n\t\n\t    // Coerce inputs to strings.\n\t    a = a + \"\", b = b + \"\";\n\t\n\t    // Interpolate pairs of numbers in a & b.\n\t    while ((am = reA.exec(a))\n\t        && (bm = reB.exec(b))) {\n\t      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; // coalesce with previous string\n\t        else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n\t        if (s[i]) s[i] += bm; // coalesce with previous string\n\t        else s[++i] = bm;\n\t      } else { // interpolate non-matching numbers\n\t        s[++i] = null;\n\t        q.push({i: i, x: interpolateNumber(am, bm)});\n\t      }\n\t      bi = reB.lastIndex;\n\t    }\n\t\n\t    // Add remains of b.\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; // coalesce with previous string\n\t      else s[++i] = bs;\n\t    }\n\t\n\t    // Special optimization for only a single match.\n\t    // Otherwise, interpolate each of the numbers and rejoin the string.\n\t    return s.length < 2 ? (q[0]\n\t        ? one(q[0].x)\n\t        : zero(b))\n\t        : (b = q.length, function(t) {\n\t            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t            return s.join(\"\");\n\t          });\n\t  }\n\t\n\t  function interpolate(a, b) {\n\t    var t = typeof b, c;\n\t    return b == null || t === \"boolean\" ? constant$2(b)\n\t        : (t === \"number\" ? interpolateNumber\n\t        : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n\t        : b instanceof color ? interpolateRgb\n\t        : b instanceof Date ? date\n\t        : Array.isArray(b) ? array$1\n\t        : isNaN(b) ? object\n\t        : interpolateNumber)(a, b);\n\t  }\n\t\n\t  function interpolateRound(a, b) {\n\t    return a = +a, b -= a, function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t\n\t  var degrees = 180 / Math.PI;\n\t\n\t  var identity$2 = {\n\t    translateX: 0,\n\t    translateY: 0,\n\t    rotate: 0,\n\t    skewX: 0,\n\t    scaleX: 1,\n\t    scaleY: 1\n\t  };\n\t\n\t  function decompose(a, b, c, d, e, f) {\n\t    var scaleX, scaleY, skewX;\n\t    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n\t    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n\t    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n\t    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n\t    return {\n\t      translateX: e,\n\t      translateY: f,\n\t      rotate: Math.atan2(b, a) * degrees,\n\t      skewX: Math.atan(skewX) * degrees,\n\t      scaleX: scaleX,\n\t      scaleY: scaleY\n\t    };\n\t  }\n\t\n\t  var cssNode;\n\t  var cssRoot;\n\t  var cssView;\n\t  var svgNode;\n\t  function parseCss(value) {\n\t    if (value === \"none\") return identity$2;\n\t    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n\t    cssNode.style.transform = value;\n\t    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n\t    cssRoot.removeChild(cssNode);\n\t    value = value.slice(7, -1).split(\",\");\n\t    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n\t  }\n\t\n\t  function parseSvg(value) {\n\t    if (value == null) return identity$2;\n\t    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n\t    svgNode.setAttribute(\"transform\", value);\n\t    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n\t    value = value.matrix;\n\t    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n\t  }\n\t\n\t  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\t\n\t    function pop(s) {\n\t      return s.length ? s.pop() + \" \" : \"\";\n\t    }\n\t\n\t    function translate(xa, ya, xb, yb, s, q) {\n\t      if (xa !== xb || ya !== yb) {\n\t        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n\t        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t      } else if (xb || yb) {\n\t        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n\t      }\n\t    }\n\t\n\t    function rotate(a, b, s, q) {\n\t      if (a !== b) {\n\t        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n\t        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t      } else if (b) {\n\t        s.push(pop(s) + \"rotate(\" + b + degParen);\n\t      }\n\t    }\n\t\n\t    function skewX(a, b, s, q) {\n\t      if (a !== b) {\n\t        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n\t      } else if (b) {\n\t        s.push(pop(s) + \"skewX(\" + b + degParen);\n\t      }\n\t    }\n\t\n\t    function scale(xa, ya, xb, yb, s, q) {\n\t      if (xa !== xb || ya !== yb) {\n\t        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n\t        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n\t      } else if (xb !== 1 || yb !== 1) {\n\t        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n\t      }\n\t    }\n\t\n\t    return function(a, b) {\n\t      var s = [], // string constants and placeholders\n\t          q = []; // number interpolators\n\t      a = parse(a), b = parse(b);\n\t      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n\t      rotate(a.rotate, b.rotate, s, q);\n\t      skewX(a.skewX, b.skewX, s, q);\n\t      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n\t      a = b = null; // gc\n\t      return function(t) {\n\t        var i = -1, n = q.length, o;\n\t        while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t        return s.join(\"\");\n\t      };\n\t    };\n\t  }\n\t\n\t  var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n\t  var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\t\n\t  var rho = Math.SQRT2;\n\t  var rho2 = 2;\n\t  var rho4 = 4;\n\t  var epsilon2 = 1e-12;\n\t  function cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t\n\t  function sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t\n\t  function tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t\n\t  // p0 = [ux0, uy0, w0]\n\t  // p1 = [ux1, uy1, w1]\n\t  function interpolateZoom(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n\t        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n\t        dx = ux1 - ux0,\n\t        dy = uy1 - uy0,\n\t        d2 = dx * dx + dy * dy,\n\t        i,\n\t        S;\n\t\n\t    // Special case for u0 ≅ u1.\n\t    if (d2 < epsilon2) {\n\t      S = Math.log(w1 / w0) / rho;\n\t      i = function(t) {\n\t        return [\n\t          ux0 + t * dx,\n\t          uy0 + t * dy,\n\t          w0 * Math.exp(rho * t * S)\n\t        ];\n\t      }\n\t    }\n\t\n\t    // General case.\n\t    else {\n\t      var d1 = Math.sqrt(d2),\n\t          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n\t          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n\t          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n\t          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / rho;\n\t      i = function(t) {\n\t        var s = t * S,\n\t            coshr0 = cosh(r0),\n\t            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n\t        return [\n\t          ux0 + u * dx,\n\t          uy0 + u * dy,\n\t          w0 * coshr0 / cosh(rho * s + r0)\n\t        ];\n\t      }\n\t    }\n\t\n\t    i.duration = S * 1000;\n\t\n\t    return i;\n\t  }\n\t\n\t  function hsl(hue) {\n\t    return function(start, end) {\n\t      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n\t          s = nogamma(start.s, end.s),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.s = s(t);\n\t        start.l = l(t);\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t  }\n\t\n\t  var hsl$1 = hsl(hue);\n\t  var hslLong = hsl(nogamma);\n\t\n\t  function lab$1(start, end) {\n\t    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n\t        a = nogamma(start.a, end.a),\n\t        b = nogamma(start.b, end.b),\n\t        opacity = nogamma(start.opacity, end.opacity);\n\t    return function(t) {\n\t      start.l = l(t);\n\t      start.a = a(t);\n\t      start.b = b(t);\n\t      start.opacity = opacity(t);\n\t      return start + \"\";\n\t    };\n\t  }\n\t\n\t  function hcl(hue) {\n\t    return function(start, end) {\n\t      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n\t          c = nogamma(start.c, end.c),\n\t          l = nogamma(start.l, end.l),\n\t          opacity = nogamma(start.opacity, end.opacity);\n\t      return function(t) {\n\t        start.h = h(t);\n\t        start.c = c(t);\n\t        start.l = l(t);\n\t        start.opacity = opacity(t);\n\t        return start + \"\";\n\t      };\n\t    }\n\t  }\n\t\n\t  var hcl$1 = hcl(hue);\n\t  var hclLong = hcl(nogamma);\n\t\n\t  function cubehelix$1(hue) {\n\t    return (function cubehelixGamma(y) {\n\t      y = +y;\n\t\n\t      function cubehelix$$(start, end) {\n\t        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n\t            s = nogamma(start.s, end.s),\n\t            l = nogamma(start.l, end.l),\n\t            opacity = nogamma(start.opacity, end.opacity);\n\t        return function(t) {\n\t          start.h = h(t);\n\t          start.s = s(t);\n\t          start.l = l(Math.pow(t, y));\n\t          start.opacity = opacity(t);\n\t          return start + \"\";\n\t        };\n\t      }\n\t\n\t      cubehelix$$.gamma = cubehelixGamma;\n\t\n\t      return cubehelix$$;\n\t    })(1);\n\t  }\n\t\n\t  var cubehelix$2 = cubehelix$1(hue);\n\t  var interpolateCubehelixLong = cubehelix$1(nogamma);\n\t\n\t  function quantize(interpolator, n) {\n\t    var samples = new Array(n);\n\t    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n\t    return samples;\n\t  }\n\t\n\t  var noop$1 = {value: function() {}};\n\t\n\t  function dispatch() {\n\t    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n\t      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n\t      _[t] = [];\n\t    }\n\t    return new Dispatch(_);\n\t  }\n\t\n\t  function Dispatch(_) {\n\t    this._ = _;\n\t  }\n\t\n\t  function parseTypenames(typenames, types) {\n\t    return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t      var name = \"\", i = t.indexOf(\".\");\n\t      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n\t      return {type: t, name: name};\n\t    });\n\t  }\n\t\n\t  Dispatch.prototype = dispatch.prototype = {\n\t    constructor: Dispatch,\n\t    on: function(typename, callback) {\n\t      var _ = this._,\n\t          T = parseTypenames(typename + \"\", _),\n\t          t,\n\t          i = -1,\n\t          n = T.length;\n\t\n\t      // If no callback was specified, return the callback of the given type and name.\n\t      if (arguments.length < 2) {\n\t        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n\t        return;\n\t      }\n\t\n\t      // If a type was specified, set the callback for the given type and name.\n\t      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\t      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      while (++i < n) {\n\t        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);\n\t        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);\n\t      }\n\t\n\t      return this;\n\t    },\n\t    copy: function() {\n\t      var copy = {}, _ = this._;\n\t      for (var t in _) copy[t] = _[t].slice();\n\t      return new Dispatch(copy);\n\t    },\n\t    call: function(type, that) {\n\t      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n\t      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t    },\n\t    apply: function(type, that, args) {\n\t      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\t      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n\t    }\n\t  };\n\t\n\t  function get(type, name) {\n\t    for (var i = 0, n = type.length, c; i < n; ++i) {\n\t      if ((c = type[i]).name === name) {\n\t        return c.value;\n\t      }\n\t    }\n\t  }\n\t\n\t  function set$1(type, name, callback) {\n\t    for (var i = 0, n = type.length; i < n; ++i) {\n\t      if (type[i].name === name) {\n\t        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n\t        break;\n\t      }\n\t    }\n\t    if (callback != null) type.push({name: name, value: callback});\n\t    return type;\n\t  }\n\t\n\t  function objectConverter(columns) {\n\t    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n\t      return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t    }).join(\",\") + \"}\");\n\t  }\n\t\n\t  function customConverter(columns, f) {\n\t    var object = objectConverter(columns);\n\t    return function(row, i) {\n\t      return f(object(row), i, columns);\n\t    };\n\t  }\n\t\n\t  // Compute unique columns in order of discovery.\n\t  function inferColumns(rows) {\n\t    var columnSet = Object.create(null),\n\t        columns = [];\n\t\n\t    rows.forEach(function(row) {\n\t      for (var column in row) {\n\t        if (!(column in columnSet)) {\n\t          columns.push(columnSet[column] = column);\n\t        }\n\t      }\n\t    });\n\t\n\t    return columns;\n\t  }\n\t\n\t  function dsv(delimiter) {\n\t    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n\t        delimiterCode = delimiter.charCodeAt(0);\n\t\n\t    function parse(text, f) {\n\t      var convert, columns, rows = parseRows(text, function(row, i) {\n\t        if (convert) return convert(row, i - 1);\n\t        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n\t      });\n\t      rows.columns = columns;\n\t      return rows;\n\t    }\n\t\n\t    function parseRows(text, f) {\n\t      var EOL = {}, // sentinel value for end-of-line\n\t          EOF = {}, // sentinel value for end-of-file\n\t          rows = [], // output rows\n\t          N = text.length,\n\t          I = 0, // current character index\n\t          n = 0, // the current line number\n\t          t, // the current token\n\t          eol; // is the current token followed by EOL?\n\t\n\t      function token() {\n\t        if (I >= N) return EOF; // special case: end of file\n\t        if (eol) return eol = false, EOL; // special case: end of line\n\t\n\t        // special case: quotes\n\t        var j = I, c;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n\t        }\n\t\n\t        // common case: find next delimiter or newline\n\t        while (I < N) {\n\t          var k = 1;\n\t          c = text.charCodeAt(I++);\n\t          if (c === 10) eol = true; // \\n\n\t          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n\t          else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t\n\t        // special case: last token before EOF\n\t        return text.slice(j);\n\t      }\n\t\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t\n\t      return rows;\n\t    }\n\t\n\t    function format(rows, columns) {\n\t      if (columns == null) columns = inferColumns(rows);\n\t      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n\t        return columns.map(function(column) {\n\t          return formatValue(row[column]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    }\n\t\n\t    function formatRows(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    }\n\t\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t\n\t    function formatValue(text) {\n\t      return text == null ? \"\"\n\t          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n\t          : text;\n\t    }\n\t\n\t    return {\n\t      parse: parse,\n\t      parseRows: parseRows,\n\t      format: format,\n\t      formatRows: formatRows\n\t    };\n\t  }\n\t\n\t  var csv = dsv(\",\");\n\t\n\t  var csvParse = csv.parse;\n\t  var csvParseRows = csv.parseRows;\n\t  var csvFormat = csv.format;\n\t  var csvFormatRows = csv.formatRows;\n\t\n\t  var tsv = dsv(\"\\t\");\n\t\n\t  var tsvParse = tsv.parse;\n\t  var tsvParseRows = tsv.parseRows;\n\t  var tsvFormat = tsv.format;\n\t  var tsvFormatRows = tsv.formatRows;\n\t\n\t  function request(url, callback) {\n\t    var request,\n\t        event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n\t        mimeType,\n\t        headers = map$1(),\n\t        xhr = new XMLHttpRequest,\n\t        user = null,\n\t        password = null,\n\t        response,\n\t        responseType,\n\t        timeout = 0;\n\t\n\t    // If IE does not support CORS, use XDomainRequest.\n\t    if (typeof XDomainRequest !== \"undefined\"\n\t        && !(\"withCredentials\" in xhr)\n\t        && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\t\n\t    \"onload\" in xhr\n\t        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n\t        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\t\n\t    function respond(o) {\n\t      var status = xhr.status, result;\n\t      if (!status && hasResponse(xhr)\n\t          || status >= 200 && status < 300\n\t          || status === 304) {\n\t        if (response) {\n\t          try {\n\t            result = response.call(request, xhr);\n\t          } catch (e) {\n\t            event.call(\"error\", request, e);\n\t            return;\n\t          }\n\t        } else {\n\t          result = xhr;\n\t        }\n\t        event.call(\"load\", request, result);\n\t      } else {\n\t        event.call(\"error\", request, o);\n\t      }\n\t    }\n\t\n\t    xhr.onprogress = function(e) {\n\t      event.call(\"progress\", request, e);\n\t    };\n\t\n\t    request = {\n\t      header: function(name, value) {\n\t        name = (name + \"\").toLowerCase();\n\t        if (arguments.length < 2) return headers.get(name);\n\t        if (value == null) headers.remove(name);\n\t        else headers.set(name, value + \"\");\n\t        return request;\n\t      },\n\t\n\t      // If mimeType is non-null and no Accept header is set, a default is used.\n\t      mimeType: function(value) {\n\t        if (!arguments.length) return mimeType;\n\t        mimeType = value == null ? null : value + \"\";\n\t        return request;\n\t      },\n\t\n\t      // Specifies what type the response value should take;\n\t      // for instance, arraybuffer, blob, document, or text.\n\t      responseType: function(value) {\n\t        if (!arguments.length) return responseType;\n\t        responseType = value;\n\t        return request;\n\t      },\n\t\n\t      timeout: function(value) {\n\t        if (!arguments.length) return timeout;\n\t        timeout = +value;\n\t        return request;\n\t      },\n\t\n\t      user: function(value) {\n\t        return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n\t      },\n\t\n\t      password: function(value) {\n\t        return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n\t      },\n\t\n\t      // Specify how to convert the response content to a specific type;\n\t      // changes the callback value on \"load\" events.\n\t      response: function(value) {\n\t        response = value;\n\t        return request;\n\t      },\n\t\n\t      // Alias for send(\"GET\", …).\n\t      get: function(data, callback) {\n\t        return request.send(\"GET\", data, callback);\n\t      },\n\t\n\t      // Alias for send(\"POST\", …).\n\t      post: function(data, callback) {\n\t        return request.send(\"POST\", data, callback);\n\t      },\n\t\n\t      // If callback is non-null, it will be used for error and load events.\n\t      send: function(method, data, callback) {\n\t        xhr.open(method, url, true, user, password);\n\t        if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n\t        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n\t        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n\t        if (responseType != null) xhr.responseType = responseType;\n\t        if (timeout > 0) xhr.timeout = timeout;\n\t        if (callback == null && typeof data === \"function\") callback = data, data = null;\n\t        if (callback != null && callback.length === 1) callback = fixCallback(callback);\n\t        if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n\t        event.call(\"beforesend\", request, xhr);\n\t        xhr.send(data == null ? null : data);\n\t        return request;\n\t      },\n\t\n\t      abort: function() {\n\t        xhr.abort();\n\t        return request;\n\t      },\n\t\n\t      on: function() {\n\t        var value = event.on.apply(event, arguments);\n\t        return value === event ? request : value;\n\t      }\n\t    };\n\t\n\t    if (callback != null) {\n\t      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t      return request.get(callback);\n\t    }\n\t\n\t    return request;\n\t  }\n\t\n\t  function fixCallback(callback) {\n\t    return function(error, xhr) {\n\t      callback(error == null ? xhr : null);\n\t    };\n\t  }\n\t\n\t  function hasResponse(xhr) {\n\t    var type = xhr.responseType;\n\t    return type && type !== \"text\"\n\t        ? xhr.response // null on error\n\t        : xhr.responseText; // \"\" on error\n\t  }\n\t\n\t  function type(defaultMimeType, response) {\n\t    return function(url, callback) {\n\t      var r = request(url).mimeType(defaultMimeType).response(response);\n\t      if (callback != null) {\n\t        if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\t        return r.get(callback);\n\t      }\n\t      return r;\n\t    };\n\t  }\n\t\n\t  var html = type(\"text/html\", function(xhr) {\n\t    return document.createRange().createContextualFragment(xhr.responseText);\n\t  });\n\t\n\t  var json = type(\"application/json\", function(xhr) {\n\t    return JSON.parse(xhr.responseText);\n\t  });\n\t\n\t  var text = type(\"text/plain\", function(xhr) {\n\t    return xhr.responseText;\n\t  });\n\t\n\t  var xml = type(\"application/xml\", function(xhr) {\n\t    var xml = xhr.responseXML;\n\t    if (!xml) throw new Error(\"parse error\");\n\t    return xml;\n\t  });\n\t\n\t  function dsv$1(defaultMimeType, parse) {\n\t    return function(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var r = request(url).mimeType(defaultMimeType);\n\t      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n\t      r.row(row);\n\t      return callback ? r.get(callback) : r;\n\t    };\n\t  }\n\t\n\t  function responseOf(parse, row) {\n\t    return function(request) {\n\t      return parse(request.responseText, row);\n\t    };\n\t  }\n\t\n\t  var csv$1 = dsv$1(\"text/csv\", csvParse);\n\t\n\t  var tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\t\n\t  var frame = 0;\n\t  var timeout = 0;\n\t  var interval = 0;\n\t  var pokeDelay = 1000;\n\t  var taskHead;\n\t  var taskTail;\n\t  var clockLast = 0;\n\t  var clockNow = 0;\n\t  var clockSkew = 0;\n\t  var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n\t  var setFrame = typeof requestAnimationFrame === \"function\"\n\t          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)\n\t          : function(f) { setTimeout(f, 17); };\n\t  function now() {\n\t    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n\t  }\n\t\n\t  function clearNow() {\n\t    clockNow = 0;\n\t  }\n\t\n\t  function Timer() {\n\t    this._call =\n\t    this._time =\n\t    this._next = null;\n\t  }\n\t\n\t  Timer.prototype = timer.prototype = {\n\t    constructor: Timer,\n\t    restart: function(callback, delay, time) {\n\t      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n\t      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\t      if (!this._next && taskTail !== this) {\n\t        if (taskTail) taskTail._next = this;\n\t        else taskHead = this;\n\t        taskTail = this;\n\t      }\n\t      this._call = callback;\n\t      this._time = time;\n\t      sleep();\n\t    },\n\t    stop: function() {\n\t      if (this._call) {\n\t        this._call = null;\n\t        this._time = Infinity;\n\t        sleep();\n\t      }\n\t    }\n\t  };\n\t\n\t  function timer(callback, delay, time) {\n\t    var t = new Timer;\n\t    t.restart(callback, delay, time);\n\t    return t;\n\t  }\n\t\n\t  function timerFlush() {\n\t    now(); // Get the current time, if not already set.\n\t    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\t    var t = taskHead, e;\n\t    while (t) {\n\t      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n\t      t = t._next;\n\t    }\n\t    --frame;\n\t  }\n\t\n\t  function wake(time) {\n\t    clockNow = (clockLast = time || clock.now()) + clockSkew;\n\t    frame = timeout = 0;\n\t    try {\n\t      timerFlush();\n\t    } finally {\n\t      frame = 0;\n\t      nap();\n\t      clockNow = 0;\n\t    }\n\t  }\n\t\n\t  function poke$1() {\n\t    var now = clock.now(), delay = now - clockLast;\n\t    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n\t  }\n\t\n\t  function nap() {\n\t    var t0, t1 = taskHead, t2, time = Infinity;\n\t    while (t1) {\n\t      if (t1._call) {\n\t        if (time > t1._time) time = t1._time;\n\t        t0 = t1, t1 = t1._next;\n\t      } else {\n\t        t2 = t1._next, t1._next = null;\n\t        t1 = t0 ? t0._next = t2 : taskHead = t2;\n\t      }\n\t    }\n\t    taskTail = t0;\n\t    sleep(time);\n\t  }\n\t\n\t  function sleep(time) {\n\t    if (frame) return; // Soonest alarm already set, or will be.\n\t    if (timeout) timeout = clearTimeout(timeout);\n\t    var delay = time - clockNow;\n\t    if (delay > 24) {\n\t      if (time < Infinity) timeout = setTimeout(wake, delay);\n\t      if (interval) interval = clearInterval(interval);\n\t    } else {\n\t      if (!interval) interval = setInterval(poke$1, pokeDelay);\n\t      frame = 1, setFrame(wake);\n\t    }\n\t  }\n\t\n\t  function timeout$1(callback, delay, time) {\n\t    var t = new Timer;\n\t    delay = delay == null ? 0 : +delay;\n\t    t.restart(function(elapsed) {\n\t      t.stop();\n\t      callback(elapsed + delay);\n\t    }, delay, time);\n\t    return t;\n\t  }\n\t\n\t  function interval$1(callback, delay, time) {\n\t    var t = new Timer, total = delay;\n\t    if (delay == null) return t.restart(callback, delay, time), t;\n\t    delay = +delay, time = time == null ? now() : +time;\n\t    t.restart(function tick(elapsed) {\n\t      elapsed += total;\n\t      t.restart(tick, total += delay, time);\n\t      callback(elapsed);\n\t    }, delay, time);\n\t    return t;\n\t  }\n\t\n\tvar   t0$1 = new Date;\n\tvar   t1$1 = new Date;\n\t  function newInterval(floori, offseti, count, field) {\n\t\n\t    function interval(date) {\n\t      return floori(date = new Date(+date)), date;\n\t    }\n\t\n\t    interval.floor = interval;\n\t\n\t    interval.ceil = function(date) {\n\t      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n\t    };\n\t\n\t    interval.round = function(date) {\n\t      var d0 = interval(date),\n\t          d1 = interval.ceil(date);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    };\n\t\n\t    interval.offset = function(date, step) {\n\t      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n\t    };\n\t\n\t    interval.range = function(start, stop, step) {\n\t      var range = [];\n\t      start = interval.ceil(start);\n\t      step = step == null ? 1 : Math.floor(step);\n\t      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\t      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n\t      return range;\n\t    };\n\t\n\t    interval.filter = function(test) {\n\t      return newInterval(function(date) {\n\t        while (floori(date), !test(date)) date.setTime(date - 1);\n\t      }, function(date, step) {\n\t        while (--step >= 0) while (offseti(date, 1), !test(date));\n\t      });\n\t    };\n\t\n\t    if (count) {\n\t      interval.count = function(start, end) {\n\t        t0$1.setTime(+start), t1$1.setTime(+end);\n\t        floori(t0$1), floori(t1$1);\n\t        return Math.floor(count(t0$1, t1$1));\n\t      };\n\t\n\t      interval.every = function(step) {\n\t        step = Math.floor(step);\n\t        return !isFinite(step) || !(step > 0) ? null\n\t            : !(step > 1) ? interval\n\t            : interval.filter(field\n\t                ? function(d) { return field(d) % step === 0; }\n\t                : function(d) { return interval.count(0, d) % step === 0; });\n\t      };\n\t    }\n\t\n\t    return interval;\n\t  }\n\t\n\t  var millisecond = newInterval(function() {\n\t    // noop\n\t  }, function(date, step) {\n\t    date.setTime(+date + step);\n\t  }, function(start, end) {\n\t    return end - start;\n\t  });\n\t\n\t  // An optimized implementation for this simple case.\n\t  millisecond.every = function(k) {\n\t    k = Math.floor(k);\n\t    if (!isFinite(k) || !(k > 0)) return null;\n\t    if (!(k > 1)) return millisecond;\n\t    return newInterval(function(date) {\n\t      date.setTime(Math.floor(date / k) * k);\n\t    }, function(date, step) {\n\t      date.setTime(+date + step * k);\n\t    }, function(start, end) {\n\t      return (end - start) / k;\n\t    });\n\t  };\n\t\n\t  var milliseconds = millisecond.range;\n\t\n\t  var durationSecond = 1e3;\n\t  var durationMinute = 6e4;\n\t  var durationHour = 36e5;\n\t  var durationDay = 864e5;\n\t  var durationWeek = 6048e5;\n\t\n\t  var second = newInterval(function(date) {\n\t    date.setTime(Math.floor(date / durationSecond) * durationSecond);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationSecond);\n\t  }, function(start, end) {\n\t    return (end - start) / durationSecond;\n\t  }, function(date) {\n\t    return date.getUTCSeconds();\n\t  });\n\t\n\t  var seconds = second.range;\n\t\n\t  var minute = newInterval(function(date) {\n\t    date.setTime(Math.floor(date / durationMinute) * durationMinute);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationMinute);\n\t  }, function(start, end) {\n\t    return (end - start) / durationMinute;\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t\n\t  var minutes = minute.range;\n\t\n\t  var hour = newInterval(function(date) {\n\t    var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n\t    if (offset < 0) offset += durationHour;\n\t    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationHour);\n\t  }, function(start, end) {\n\t    return (end - start) / durationHour;\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t\n\t  var hours = hour.range;\n\t\n\t  var day = newInterval(function(date) {\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setDate(date.getDate() + step);\n\t  }, function(start, end) {\n\t    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t\n\t  var days = day.range;\n\t\n\t  function weekday(i) {\n\t    return newInterval(function(date) {\n\t      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n\t      date.setHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setDate(date.getDate() + step * 7);\n\t    }, function(start, end) {\n\t      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n\t    });\n\t  }\n\t\n\t  var timeWeek = weekday(0);\n\t  var timeMonday = weekday(1);\n\t  var tuesday = weekday(2);\n\t  var wednesday = weekday(3);\n\t  var thursday = weekday(4);\n\t  var friday = weekday(5);\n\t  var saturday = weekday(6);\n\t\n\t  var sundays = timeWeek.range;\n\t  var mondays = timeMonday.range;\n\t  var tuesdays = tuesday.range;\n\t  var wednesdays = wednesday.range;\n\t  var thursdays = thursday.range;\n\t  var fridays = friday.range;\n\t  var saturdays = saturday.range;\n\t\n\t  var month = newInterval(function(date) {\n\t    date.setDate(1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setMonth(date.getMonth() + step);\n\t  }, function(start, end) {\n\t    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t\n\t  var months = month.range;\n\t\n\t  var year = newInterval(function(date) {\n\t    date.setMonth(0, 1);\n\t    date.setHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setFullYear(date.getFullYear() + step);\n\t  }, function(start, end) {\n\t    return end.getFullYear() - start.getFullYear();\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t\n\t  // An optimized implementation for this simple case.\n\t  year.every = function(k) {\n\t    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n\t      date.setMonth(0, 1);\n\t      date.setHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setFullYear(date.getFullYear() + step * k);\n\t    });\n\t  };\n\t\n\t  var years = year.range;\n\t\n\t  var utcMinute = newInterval(function(date) {\n\t    date.setUTCSeconds(0, 0);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationMinute);\n\t  }, function(start, end) {\n\t    return (end - start) / durationMinute;\n\t  }, function(date) {\n\t    return date.getUTCMinutes();\n\t  });\n\t\n\t  var utcMinutes = utcMinute.range;\n\t\n\t  var utcHour = newInterval(function(date) {\n\t    date.setUTCMinutes(0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setTime(+date + step * durationHour);\n\t  }, function(start, end) {\n\t    return (end - start) / durationHour;\n\t  }, function(date) {\n\t    return date.getUTCHours();\n\t  });\n\t\n\t  var utcHours = utcHour.range;\n\t\n\t  var utcDay = newInterval(function(date) {\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCDate(date.getUTCDate() + step);\n\t  }, function(start, end) {\n\t    return (end - start) / durationDay;\n\t  }, function(date) {\n\t    return date.getUTCDate() - 1;\n\t  });\n\t\n\t  var utcDays = utcDay.range;\n\t\n\t  function utcWeekday(i) {\n\t    return newInterval(function(date) {\n\t      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n\t      date.setUTCHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setUTCDate(date.getUTCDate() + step * 7);\n\t    }, function(start, end) {\n\t      return (end - start) / durationWeek;\n\t    });\n\t  }\n\t\n\t  var utcWeek = utcWeekday(0);\n\t  var utcMonday = utcWeekday(1);\n\t  var utcTuesday = utcWeekday(2);\n\t  var utcWednesday = utcWeekday(3);\n\t  var utcThursday = utcWeekday(4);\n\t  var utcFriday = utcWeekday(5);\n\t  var utcSaturday = utcWeekday(6);\n\t\n\t  var utcSundays = utcWeek.range;\n\t  var utcMondays = utcMonday.range;\n\t  var utcTuesdays = utcTuesday.range;\n\t  var utcWednesdays = utcWednesday.range;\n\t  var utcThursdays = utcThursday.range;\n\t  var utcFridays = utcFriday.range;\n\t  var utcSaturdays = utcSaturday.range;\n\t\n\t  var utcMonth = newInterval(function(date) {\n\t    date.setUTCDate(1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCMonth(date.getUTCMonth() + step);\n\t  }, function(start, end) {\n\t    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n\t  }, function(date) {\n\t    return date.getUTCMonth();\n\t  });\n\t\n\t  var utcMonths = utcMonth.range;\n\t\n\t  var utcYear = newInterval(function(date) {\n\t    date.setUTCMonth(0, 1);\n\t    date.setUTCHours(0, 0, 0, 0);\n\t  }, function(date, step) {\n\t    date.setUTCFullYear(date.getUTCFullYear() + step);\n\t  }, function(start, end) {\n\t    return end.getUTCFullYear() - start.getUTCFullYear();\n\t  }, function(date) {\n\t    return date.getUTCFullYear();\n\t  });\n\t\n\t  // An optimized implementation for this simple case.\n\t  utcYear.every = function(k) {\n\t    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n\t      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n\t      date.setUTCMonth(0, 1);\n\t      date.setUTCHours(0, 0, 0, 0);\n\t    }, function(date, step) {\n\t      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n\t    });\n\t  };\n\t\n\t  var utcYears = utcYear.range;\n\t\n\t  // Computes the decimal coefficient and exponent of the specified number x with\n\t  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n\t  // For example, formatDecimal(1.23) returns [\"123\", 0].\n\t  function formatDecimal(x, p) {\n\t    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\t    var i, coefficient = x.slice(0, i);\n\t\n\t    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n\t    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\t    return [\n\t      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n\t      +x.slice(i + 1)\n\t    ];\n\t  }\n\t\n\t  function exponent$1(x) {\n\t    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n\t  }\n\t\n\t  function formatGroup(grouping, thousands) {\n\t    return function(value, width) {\n\t      var i = value.length,\n\t          t = [],\n\t          j = 0,\n\t          g = grouping[0],\n\t          length = 0;\n\t\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = grouping[j = (j + 1) % grouping.length];\n\t      }\n\t\n\t      return t.reverse().join(thousands);\n\t    };\n\t  }\n\t\n\t  function formatDefault(x, p) {\n\t    x = x.toPrecision(p);\n\t\n\t    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n\t      switch (x[i]) {\n\t        case \".\": i0 = i1 = i; break;\n\t        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n\t        case \"e\": break out;\n\t        default: if (i0 > 0) i0 = 0; break;\n\t      }\n\t    }\n\t\n\t    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n\t  }\n\t\n\t  var prefixExponent;\n\t\n\t  function formatPrefixAuto(x, p) {\n\t    var d = formatDecimal(x, p);\n\t    if (!d) return x + \"\";\n\t    var coefficient = d[0],\n\t        exponent = d[1],\n\t        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n\t        n = coefficient.length;\n\t    return i === n ? coefficient\n\t        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n\t        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n\t        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n\t  }\n\t\n\t  function formatRounded(x, p) {\n\t    var d = formatDecimal(x, p);\n\t    if (!d) return x + \"\";\n\t    var coefficient = d[0],\n\t        exponent = d[1];\n\t    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n\t        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n\t        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n\t  }\n\t\n\t  var formatTypes = {\n\t    \"\": formatDefault,\n\t    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n\t    \"b\": function(x) { return Math.round(x).toString(2); },\n\t    \"c\": function(x) { return x + \"\"; },\n\t    \"d\": function(x) { return Math.round(x).toString(10); },\n\t    \"e\": function(x, p) { return x.toExponential(p); },\n\t    \"f\": function(x, p) { return x.toFixed(p); },\n\t    \"g\": function(x, p) { return x.toPrecision(p); },\n\t    \"o\": function(x) { return Math.round(x).toString(8); },\n\t    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n\t    \"r\": formatRounded,\n\t    \"s\": formatPrefixAuto,\n\t    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n\t    \"x\": function(x) { return Math.round(x).toString(16); }\n\t  };\n\t\n\t  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n\t  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\t\n\t  function formatSpecifier(specifier) {\n\t    return new FormatSpecifier(specifier);\n\t  }\n\t\n\t  function FormatSpecifier(specifier) {\n\t    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\t\n\t    var match,\n\t        fill = match[1] || \" \",\n\t        align = match[2] || \">\",\n\t        sign = match[3] || \"-\",\n\t        symbol = match[4] || \"\",\n\t        zero = !!match[5],\n\t        width = match[6] && +match[6],\n\t        comma = !!match[7],\n\t        precision = match[8] && +match[8].slice(1),\n\t        type = match[9] || \"\";\n\t\n\t    // The \"n\" type is an alias for \",g\".\n\t    if (type === \"n\") comma = true, type = \"g\";\n\t\n\t    // Map invalid types to the default format.\n\t    else if (!formatTypes[type]) type = \"\";\n\t\n\t    // If zero fill is specified, padding goes after sign and before digits.\n\t    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\t\n\t    this.fill = fill;\n\t    this.align = align;\n\t    this.sign = sign;\n\t    this.symbol = symbol;\n\t    this.zero = zero;\n\t    this.width = width;\n\t    this.comma = comma;\n\t    this.precision = precision;\n\t    this.type = type;\n\t  }\n\t\n\t  FormatSpecifier.prototype.toString = function() {\n\t    return this.fill\n\t        + this.align\n\t        + this.sign\n\t        + this.symbol\n\t        + (this.zero ? \"0\" : \"\")\n\t        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n\t        + (this.comma ? \",\" : \"\")\n\t        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n\t        + this.type;\n\t  };\n\t\n\t  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\t\n\t  function identity$3(x) {\n\t    return x;\n\t  }\n\t\n\t  function formatLocale(locale) {\n\t    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n\t        currency = locale.currency,\n\t        decimal = locale.decimal;\n\t\n\t    function newFormat(specifier) {\n\t      specifier = formatSpecifier(specifier);\n\t\n\t      var fill = specifier.fill,\n\t          align = specifier.align,\n\t          sign = specifier.sign,\n\t          symbol = specifier.symbol,\n\t          zero = specifier.zero,\n\t          width = specifier.width,\n\t          comma = specifier.comma,\n\t          precision = specifier.precision,\n\t          type = specifier.type;\n\t\n\t      // Compute the prefix and suffix.\n\t      // For SI-prefix, the suffix is lazily computed.\n\t      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n\t          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\t\n\t      // What format function should we use?\n\t      // Is this an integer type?\n\t      // Can this type generate exponential notation?\n\t      var formatType = formatTypes[type],\n\t          maybeSuffix = !type || /[defgprs%]/.test(type);\n\t\n\t      // Set the default precision if not specified,\n\t      // or clamp the specified precision to the supported range.\n\t      // For significant precision, it must be in [1, 21].\n\t      // For fixed precision, it must be in [0, 20].\n\t      precision = precision == null ? (type ? 6 : 12)\n\t          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n\t          : Math.max(0, Math.min(20, precision));\n\t\n\t      function format(value) {\n\t        var valuePrefix = prefix,\n\t            valueSuffix = suffix,\n\t            i, n, c;\n\t\n\t        if (type === \"c\") {\n\t          valueSuffix = formatType(value) + valueSuffix;\n\t          value = \"\";\n\t        } else {\n\t          value = +value;\n\t\n\t          // Convert negative to positive, and compute the prefix.\n\t          // Note that -0 is not less than 0, but 1 / -0 is!\n\t          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\t\n\t          // Perform the initial formatting.\n\t          value = formatType(value, precision);\n\t\n\t          // If the original value was negative, it may be rounded to zero during\n\t          // formatting; treat this as (positive) zero.\n\t          if (valueNegative) {\n\t            i = -1, n = value.length;\n\t            valueNegative = false;\n\t            while (++i < n) {\n\t              if (c = value.charCodeAt(i), (48 < c && c < 58)\n\t                  || (type === \"x\" && 96 < c && c < 103)\n\t                  || (type === \"X\" && 64 < c && c < 71)) {\n\t                valueNegative = true;\n\t                break;\n\t              }\n\t            }\n\t          }\n\t\n\t          // Compute the prefix and suffix.\n\t          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n\t          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\t\n\t          // Break the formatted value into the integer “value” part that can be\n\t          // grouped, and fractional or exponential “suffix” part that is not.\n\t          if (maybeSuffix) {\n\t            i = -1, n = value.length;\n\t            while (++i < n) {\n\t              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n\t                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n\t                value = value.slice(0, i);\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        // If the fill character is not \"0\", grouping is applied before padding.\n\t        if (comma && !zero) value = group(value, Infinity);\n\t\n\t        // Compute the padding.\n\t        var length = valuePrefix.length + value.length + valueSuffix.length,\n\t            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\t\n\t        // If the fill character is \"0\", grouping is applied after padding.\n\t        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\t\n\t        // Reconstruct the final output based on the desired alignment.\n\t        switch (align) {\n\t          case \"<\": return valuePrefix + value + valueSuffix + padding;\n\t          case \"=\": return valuePrefix + padding + value + valueSuffix;\n\t          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n\t        }\n\t        return padding + valuePrefix + value + valueSuffix;\n\t      }\n\t\n\t      format.toString = function() {\n\t        return specifier + \"\";\n\t      };\n\t\n\t      return format;\n\t    }\n\t\n\t    function formatPrefix(specifier, value) {\n\t      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n\t          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n\t          k = Math.pow(10, -e),\n\t          prefix = prefixes[8 + e / 3];\n\t      return function(value) {\n\t        return f(k * value) + prefix;\n\t      };\n\t    }\n\t\n\t    return {\n\t      format: newFormat,\n\t      formatPrefix: formatPrefix\n\t    };\n\t  }\n\t\n\t  var locale;\n\t  defaultLocale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [3],\n\t    currency: [\"$\", \"\"]\n\t  });\n\t\n\t  function defaultLocale(definition) {\n\t    locale = formatLocale(definition);\n\t    exports.format = locale.format;\n\t    exports.formatPrefix = locale.formatPrefix;\n\t    return locale;\n\t  }\n\t\n\t  function precisionFixed(step) {\n\t    return Math.max(0, -exponent$1(Math.abs(step)));\n\t  }\n\t\n\t  function precisionPrefix(step, value) {\n\t    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n\t  }\n\t\n\t  function precisionRound(step, max) {\n\t    step = Math.abs(step), max = Math.abs(max) - step;\n\t    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n\t  }\n\t\n\t  function localDate(d) {\n\t    if (0 <= d.y && d.y < 100) {\n\t      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n\t      date.setFullYear(d.y);\n\t      return date;\n\t    }\n\t    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n\t  }\n\t\n\t  function utcDate(d) {\n\t    if (0 <= d.y && d.y < 100) {\n\t      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n\t      date.setUTCFullYear(d.y);\n\t      return date;\n\t    }\n\t    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n\t  }\n\t\n\t  function newYear(y) {\n\t    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n\t  }\n\t\n\t  function formatLocale$1(locale) {\n\t    var locale_dateTime = locale.dateTime,\n\t        locale_date = locale.date,\n\t        locale_time = locale.time,\n\t        locale_periods = locale.periods,\n\t        locale_weekdays = locale.days,\n\t        locale_shortWeekdays = locale.shortDays,\n\t        locale_months = locale.months,\n\t        locale_shortMonths = locale.shortMonths;\n\t\n\t    var periodRe = formatRe(locale_periods),\n\t        periodLookup = formatLookup(locale_periods),\n\t        weekdayRe = formatRe(locale_weekdays),\n\t        weekdayLookup = formatLookup(locale_weekdays),\n\t        shortWeekdayRe = formatRe(locale_shortWeekdays),\n\t        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n\t        monthRe = formatRe(locale_months),\n\t        monthLookup = formatLookup(locale_months),\n\t        shortMonthRe = formatRe(locale_shortMonths),\n\t        shortMonthLookup = formatLookup(locale_shortMonths);\n\t\n\t    var formats = {\n\t      \"a\": formatShortWeekday,\n\t      \"A\": formatWeekday,\n\t      \"b\": formatShortMonth,\n\t      \"B\": formatMonth,\n\t      \"c\": null,\n\t      \"d\": formatDayOfMonth,\n\t      \"e\": formatDayOfMonth,\n\t      \"H\": formatHour24,\n\t      \"I\": formatHour12,\n\t      \"j\": formatDayOfYear,\n\t      \"L\": formatMilliseconds,\n\t      \"m\": formatMonthNumber,\n\t      \"M\": formatMinutes,\n\t      \"p\": formatPeriod,\n\t      \"S\": formatSeconds,\n\t      \"U\": formatWeekNumberSunday,\n\t      \"w\": formatWeekdayNumber,\n\t      \"W\": formatWeekNumberMonday,\n\t      \"x\": null,\n\t      \"X\": null,\n\t      \"y\": formatYear,\n\t      \"Y\": formatFullYear,\n\t      \"Z\": formatZone,\n\t      \"%\": formatLiteralPercent\n\t    };\n\t\n\t    var utcFormats = {\n\t      \"a\": formatUTCShortWeekday,\n\t      \"A\": formatUTCWeekday,\n\t      \"b\": formatUTCShortMonth,\n\t      \"B\": formatUTCMonth,\n\t      \"c\": null,\n\t      \"d\": formatUTCDayOfMonth,\n\t      \"e\": formatUTCDayOfMonth,\n\t      \"H\": formatUTCHour24,\n\t      \"I\": formatUTCHour12,\n\t      \"j\": formatUTCDayOfYear,\n\t      \"L\": formatUTCMilliseconds,\n\t      \"m\": formatUTCMonthNumber,\n\t      \"M\": formatUTCMinutes,\n\t      \"p\": formatUTCPeriod,\n\t      \"S\": formatUTCSeconds,\n\t      \"U\": formatUTCWeekNumberSunday,\n\t      \"w\": formatUTCWeekdayNumber,\n\t      \"W\": formatUTCWeekNumberMonday,\n\t      \"x\": null,\n\t      \"X\": null,\n\t      \"y\": formatUTCYear,\n\t      \"Y\": formatUTCFullYear,\n\t      \"Z\": formatUTCZone,\n\t      \"%\": formatLiteralPercent\n\t    };\n\t\n\t    var parses = {\n\t      \"a\": parseShortWeekday,\n\t      \"A\": parseWeekday,\n\t      \"b\": parseShortMonth,\n\t      \"B\": parseMonth,\n\t      \"c\": parseLocaleDateTime,\n\t      \"d\": parseDayOfMonth,\n\t      \"e\": parseDayOfMonth,\n\t      \"H\": parseHour24,\n\t      \"I\": parseHour24,\n\t      \"j\": parseDayOfYear,\n\t      \"L\": parseMilliseconds,\n\t      \"m\": parseMonthNumber,\n\t      \"M\": parseMinutes,\n\t      \"p\": parsePeriod,\n\t      \"S\": parseSeconds,\n\t      \"U\": parseWeekNumberSunday,\n\t      \"w\": parseWeekdayNumber,\n\t      \"W\": parseWeekNumberMonday,\n\t      \"x\": parseLocaleDate,\n\t      \"X\": parseLocaleTime,\n\t      \"y\": parseYear,\n\t      \"Y\": parseFullYear,\n\t      \"Z\": parseZone,\n\t      \"%\": parseLiteralPercent\n\t    };\n\t\n\t    // These recursive directive definitions must be deferred.\n\t    formats.x = newFormat(locale_date, formats);\n\t    formats.X = newFormat(locale_time, formats);\n\t    formats.c = newFormat(locale_dateTime, formats);\n\t    utcFormats.x = newFormat(locale_date, utcFormats);\n\t    utcFormats.X = newFormat(locale_time, utcFormats);\n\t    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\t\n\t    function newFormat(specifier, formats) {\n\t      return function(date) {\n\t        var string = [],\n\t            i = -1,\n\t            j = 0,\n\t            n = specifier.length,\n\t            c,\n\t            pad,\n\t            format;\n\t\n\t        if (!(date instanceof Date)) date = new Date(+date);\n\t\n\t        while (++i < n) {\n\t          if (specifier.charCodeAt(i) === 37) {\n\t            string.push(specifier.slice(j, i));\n\t            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n\t            else pad = c === \"e\" ? \" \" : \"0\";\n\t            if (format = formats[c]) c = format(date, pad);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t\n\t        string.push(specifier.slice(j, i));\n\t        return string.join(\"\");\n\t      };\n\t    }\n\t\n\t    function newParse(specifier, newDate) {\n\t      return function(string) {\n\t        var d = newYear(1900),\n\t            i = parseSpecifier(d, specifier, string += \"\", 0);\n\t        if (i != string.length) return null;\n\t\n\t        // The am-pm flag is 0 for AM, and 1 for PM.\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t\n\t        // Convert day-of-week and week-of-year to day-of-year.\n\t        if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n\t          d.m = 0;\n\t          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n\t        }\n\t\n\t        // If a time zone is specified, all fields are interpreted as UTC and then\n\t        // offset according to the specified time zone.\n\t        if (\"Z\" in d) {\n\t          d.H += d.Z / 100 | 0;\n\t          d.M += d.Z % 100;\n\t          return utcDate(d);\n\t        }\n\t\n\t        // Otherwise, all fields are in local time.\n\t        return newDate(d);\n\t      };\n\t    }\n\t\n\t    function parseSpecifier(d, specifier, string, j) {\n\t      var i = 0,\n\t          n = specifier.length,\n\t          m = string.length,\n\t          c,\n\t          parse;\n\t\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = specifier.charCodeAt(i++);\n\t        if (c === 37) {\n\t          c = specifier.charAt(i++);\n\t          parse = parses[c in pads ? specifier.charAt(i++) : c];\n\t          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t\n\t      return j;\n\t    }\n\t\n\t    function parsePeriod(d, string, i) {\n\t      var n = periodRe.exec(string.slice(i));\n\t      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseShortWeekday(d, string, i) {\n\t      var n = shortWeekdayRe.exec(string.slice(i));\n\t      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseWeekday(d, string, i) {\n\t      var n = weekdayRe.exec(string.slice(i));\n\t      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseShortMonth(d, string, i) {\n\t      var n = shortMonthRe.exec(string.slice(i));\n\t      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseMonth(d, string, i) {\n\t      var n = monthRe.exec(string.slice(i));\n\t      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n\t    }\n\t\n\t    function parseLocaleDateTime(d, string, i) {\n\t      return parseSpecifier(d, locale_dateTime, string, i);\n\t    }\n\t\n\t    function parseLocaleDate(d, string, i) {\n\t      return parseSpecifier(d, locale_date, string, i);\n\t    }\n\t\n\t    function parseLocaleTime(d, string, i) {\n\t      return parseSpecifier(d, locale_time, string, i);\n\t    }\n\t\n\t    function formatShortWeekday(d) {\n\t      return locale_shortWeekdays[d.getDay()];\n\t    }\n\t\n\t    function formatWeekday(d) {\n\t      return locale_weekdays[d.getDay()];\n\t    }\n\t\n\t    function formatShortMonth(d) {\n\t      return locale_shortMonths[d.getMonth()];\n\t    }\n\t\n\t    function formatMonth(d) {\n\t      return locale_months[d.getMonth()];\n\t    }\n\t\n\t    function formatPeriod(d) {\n\t      return locale_periods[+(d.getHours() >= 12)];\n\t    }\n\t\n\t    function formatUTCShortWeekday(d) {\n\t      return locale_shortWeekdays[d.getUTCDay()];\n\t    }\n\t\n\t    function formatUTCWeekday(d) {\n\t      return locale_weekdays[d.getUTCDay()];\n\t    }\n\t\n\t    function formatUTCShortMonth(d) {\n\t      return locale_shortMonths[d.getUTCMonth()];\n\t    }\n\t\n\t    function formatUTCMonth(d) {\n\t      return locale_months[d.getUTCMonth()];\n\t    }\n\t\n\t    function formatUTCPeriod(d) {\n\t      return locale_periods[+(d.getUTCHours() >= 12)];\n\t    }\n\t\n\t    return {\n\t      format: function(specifier) {\n\t        var f = newFormat(specifier += \"\", formats);\n\t        f.toString = function() { return specifier; };\n\t        return f;\n\t      },\n\t      parse: function(specifier) {\n\t        var p = newParse(specifier += \"\", localDate);\n\t        p.toString = function() { return specifier; };\n\t        return p;\n\t      },\n\t      utcFormat: function(specifier) {\n\t        var f = newFormat(specifier += \"\", utcFormats);\n\t        f.toString = function() { return specifier; };\n\t        return f;\n\t      },\n\t      utcParse: function(specifier) {\n\t        var p = newParse(specifier, utcDate);\n\t        p.toString = function() { return specifier; };\n\t        return p;\n\t      }\n\t    };\n\t  }\n\t\n\t  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n\t  var numberRe = /^\\s*\\d+/;\n\t  var percentRe = /^%/;\n\t  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  function pad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\",\n\t        string = (sign ? -value : value) + \"\",\n\t        length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t\n\t  function requote(s) {\n\t    return s.replace(requoteRe, \"\\\\$&\");\n\t  }\n\t\n\t  function formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t\n\t  function formatLookup(names) {\n\t    var map = {}, i = -1, n = names.length;\n\t    while (++i < n) map[names[i].toLowerCase()] = i;\n\t    return map;\n\t  }\n\t\n\t  function parseWeekdayNumber(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (d.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekNumberSunday(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i));\n\t    return n ? (d.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseWeekNumberMonday(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i));\n\t    return n ? (d.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseFullYear(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (d.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseYear(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseZone(d, string, i) {\n\t    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n\t    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMonthNumber(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseDayOfMonth(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseDayOfYear(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseHour24(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMinutes(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseSeconds(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (d.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseMilliseconds(d, string, i) {\n\t    var n = numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (d.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t\n\t  function parseLiteralPercent(d, string, i) {\n\t    var n = percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t\n\t  function formatDayOfMonth(d, p) {\n\t    return pad(d.getDate(), p, 2);\n\t  }\n\t\n\t  function formatHour24(d, p) {\n\t    return pad(d.getHours(), p, 2);\n\t  }\n\t\n\t  function formatHour12(d, p) {\n\t    return pad(d.getHours() % 12 || 12, p, 2);\n\t  }\n\t\n\t  function formatDayOfYear(d, p) {\n\t    return pad(1 + day.count(year(d), d), p, 3);\n\t  }\n\t\n\t  function formatMilliseconds(d, p) {\n\t    return pad(d.getMilliseconds(), p, 3);\n\t  }\n\t\n\t  function formatMonthNumber(d, p) {\n\t    return pad(d.getMonth() + 1, p, 2);\n\t  }\n\t\n\t  function formatMinutes(d, p) {\n\t    return pad(d.getMinutes(), p, 2);\n\t  }\n\t\n\t  function formatSeconds(d, p) {\n\t    return pad(d.getSeconds(), p, 2);\n\t  }\n\t\n\t  function formatWeekNumberSunday(d, p) {\n\t    return pad(timeWeek.count(year(d), d), p, 2);\n\t  }\n\t\n\t  function formatWeekdayNumber(d) {\n\t    return d.getDay();\n\t  }\n\t\n\t  function formatWeekNumberMonday(d, p) {\n\t    return pad(timeMonday.count(year(d), d), p, 2);\n\t  }\n\t\n\t  function formatYear(d, p) {\n\t    return pad(d.getFullYear() % 100, p, 2);\n\t  }\n\t\n\t  function formatFullYear(d, p) {\n\t    return pad(d.getFullYear() % 10000, p, 4);\n\t  }\n\t\n\t  function formatZone(d) {\n\t    var z = d.getTimezoneOffset();\n\t    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n\t        + pad(z / 60 | 0, \"0\", 2)\n\t        + pad(z % 60, \"0\", 2);\n\t  }\n\t\n\t  function formatUTCDayOfMonth(d, p) {\n\t    return pad(d.getUTCDate(), p, 2);\n\t  }\n\t\n\t  function formatUTCHour24(d, p) {\n\t    return pad(d.getUTCHours(), p, 2);\n\t  }\n\t\n\t  function formatUTCHour12(d, p) {\n\t    return pad(d.getUTCHours() % 12 || 12, p, 2);\n\t  }\n\t\n\t  function formatUTCDayOfYear(d, p) {\n\t    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n\t  }\n\t\n\t  function formatUTCMilliseconds(d, p) {\n\t    return pad(d.getUTCMilliseconds(), p, 3);\n\t  }\n\t\n\t  function formatUTCMonthNumber(d, p) {\n\t    return pad(d.getUTCMonth() + 1, p, 2);\n\t  }\n\t\n\t  function formatUTCMinutes(d, p) {\n\t    return pad(d.getUTCMinutes(), p, 2);\n\t  }\n\t\n\t  function formatUTCSeconds(d, p) {\n\t    return pad(d.getUTCSeconds(), p, 2);\n\t  }\n\t\n\t  function formatUTCWeekNumberSunday(d, p) {\n\t    return pad(utcWeek.count(utcYear(d), d), p, 2);\n\t  }\n\t\n\t  function formatUTCWeekdayNumber(d) {\n\t    return d.getUTCDay();\n\t  }\n\t\n\t  function formatUTCWeekNumberMonday(d, p) {\n\t    return pad(utcMonday.count(utcYear(d), d), p, 2);\n\t  }\n\t\n\t  function formatUTCYear(d, p) {\n\t    return pad(d.getUTCFullYear() % 100, p, 2);\n\t  }\n\t\n\t  function formatUTCFullYear(d, p) {\n\t    return pad(d.getUTCFullYear() % 10000, p, 4);\n\t  }\n\t\n\t  function formatUTCZone() {\n\t    return \"+0000\";\n\t  }\n\t\n\t  function formatLiteralPercent() {\n\t    return \"%\";\n\t  }\n\t\n\t  var locale$1;\n\t  defaultLocale$1({\n\t    dateTime: \"%x, %X\",\n\t    date: \"%-m/%-d/%Y\",\n\t    time: \"%-I:%M:%S %p\",\n\t    periods: [\"AM\", \"PM\"],\n\t    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n\t  });\n\t\n\t  function defaultLocale$1(definition) {\n\t    locale$1 = formatLocale$1(definition);\n\t    exports.timeFormat = locale$1.format;\n\t    exports.timeParse = locale$1.parse;\n\t    exports.utcFormat = locale$1.utcFormat;\n\t    exports.utcParse = locale$1.utcParse;\n\t    return locale$1;\n\t  }\n\t\n\t  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\t\n\t  function formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t\n\t  var formatIso = Date.prototype.toISOString\n\t      ? formatIsoNative\n\t      : exports.utcFormat(isoSpecifier);\n\t\n\t  function parseIsoNative(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  }\n\t\n\t  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n\t      ? parseIsoNative\n\t      : exports.utcParse(isoSpecifier);\n\t\n\t  var array$2 = Array.prototype;\n\t\n\t  var map$2 = array$2.map;\n\t  var slice$3 = array$2.slice;\n\t\n\t  var implicit = {name: \"implicit\"};\n\t\n\t  function ordinal(range) {\n\t    var index = map$1(),\n\t        domain = [],\n\t        unknown = implicit;\n\t\n\t    range = range == null ? [] : slice$3.call(range);\n\t\n\t    function scale(d) {\n\t      var key = d + \"\", i = index.get(key);\n\t      if (!i) {\n\t        if (unknown !== implicit) return unknown;\n\t        index.set(key, i = domain.push(d));\n\t      }\n\t      return range[(i - 1) % range.length];\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain.slice();\n\t      domain = [], index = map$1();\n\t      var i = -1, n = _.length, d, key;\n\t      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n\t      return scale;\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n\t    };\n\t\n\t    scale.unknown = function(_) {\n\t      return arguments.length ? (unknown = _, scale) : unknown;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return ordinal()\n\t          .domain(domain)\n\t          .range(range)\n\t          .unknown(unknown);\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function band() {\n\t    var scale = ordinal().unknown(undefined),\n\t        domain = scale.domain,\n\t        ordinalRange = scale.range,\n\t        range$$ = [0, 1],\n\t        step,\n\t        bandwidth,\n\t        round = false,\n\t        paddingInner = 0,\n\t        paddingOuter = 0,\n\t        align = 0.5;\n\t\n\t    delete scale.unknown;\n\t\n\t    function rescale() {\n\t      var n = domain().length,\n\t          reverse = range$$[1] < range$$[0],\n\t          start = range$$[reverse - 0],\n\t          stop = range$$[1 - reverse];\n\t      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n\t      if (round) step = Math.floor(step);\n\t      start += (stop - start - step * (n - paddingInner)) * align;\n\t      bandwidth = step * (1 - paddingInner);\n\t      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n\t      var values = range(n).map(function(i) { return start + step * i; });\n\t      return ordinalRange(reverse ? values.reverse() : values);\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain(_), rescale()) : domain();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();\n\t    };\n\t\n\t    scale.rangeRound = function(_) {\n\t      return range$$ = [+_[0], +_[1]], round = true, rescale();\n\t    };\n\t\n\t    scale.bandwidth = function() {\n\t      return bandwidth;\n\t    };\n\t\n\t    scale.step = function() {\n\t      return step;\n\t    };\n\t\n\t    scale.round = function(_) {\n\t      return arguments.length ? (round = !!_, rescale()) : round;\n\t    };\n\t\n\t    scale.padding = function(_) {\n\t      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t    };\n\t\n\t    scale.paddingInner = function(_) {\n\t      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n\t    };\n\t\n\t    scale.paddingOuter = function(_) {\n\t      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n\t    };\n\t\n\t    scale.align = function(_) {\n\t      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return band()\n\t          .domain(domain())\n\t          .range(range$$)\n\t          .round(round)\n\t          .paddingInner(paddingInner)\n\t          .paddingOuter(paddingOuter)\n\t          .align(align);\n\t    };\n\t\n\t    return rescale();\n\t  }\n\t\n\t  function pointish(scale) {\n\t    var copy = scale.copy;\n\t\n\t    scale.padding = scale.paddingOuter;\n\t    delete scale.paddingInner;\n\t    delete scale.paddingOuter;\n\t\n\t    scale.copy = function() {\n\t      return pointish(copy());\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function point$4() {\n\t    return pointish(band().paddingInner(1));\n\t  }\n\t\n\t  function constant$3(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function number$1(x) {\n\t    return +x;\n\t  }\n\t\n\t  var unit = [0, 1];\n\t\n\t  function deinterpolate(a, b) {\n\t    return (b -= (a = +a))\n\t        ? function(x) { return (x - a) / b; }\n\t        : constant$3(b);\n\t  }\n\t\n\t  function deinterpolateClamp(deinterpolate) {\n\t    return function(a, b) {\n\t      var d = deinterpolate(a = +a, b = +b);\n\t      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n\t    };\n\t  }\n\t\n\t  function reinterpolateClamp(reinterpolate) {\n\t    return function(a, b) {\n\t      var r = reinterpolate(a = +a, b = +b);\n\t      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n\t    };\n\t  }\n\t\n\t  function bimap(domain, range, deinterpolate, reinterpolate) {\n\t    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n\t    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n\t    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n\t    return function(x) { return r0(d0(x)); };\n\t  }\n\t\n\t  function polymap(domain, range, deinterpolate, reinterpolate) {\n\t    var j = Math.min(domain.length, range.length) - 1,\n\t        d = new Array(j),\n\t        r = new Array(j),\n\t        i = -1;\n\t\n\t    // Reverse descending domains.\n\t    if (domain[j] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t\n\t    while (++i < j) {\n\t      d[i] = deinterpolate(domain[i], domain[i + 1]);\n\t      r[i] = reinterpolate(range[i], range[i + 1]);\n\t    }\n\t\n\t    return function(x) {\n\t      var i = bisectRight(domain, x, 1, j) - 1;\n\t      return r[i](d[i](x));\n\t    };\n\t  }\n\t\n\t  function copy(source, target) {\n\t    return target\n\t        .domain(source.domain())\n\t        .range(source.range())\n\t        .interpolate(source.interpolate())\n\t        .clamp(source.clamp());\n\t  }\n\t\n\t  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n\t  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n\t  function continuous(deinterpolate$$, reinterpolate) {\n\t    var domain = unit,\n\t        range = unit,\n\t        interpolate$$ = interpolate,\n\t        clamp = false,\n\t        piecewise,\n\t        output,\n\t        input;\n\t\n\t    function rescale() {\n\t      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n\t      output = input = null;\n\t      return scale;\n\t    }\n\t\n\t    function scale(x) {\n\t      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);\n\t    }\n\t\n\t    scale.invert = function(y) {\n\t      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n\t    };\n\t\n\t    scale.rangeRound = function(_) {\n\t      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();\n\t    };\n\t\n\t    scale.clamp = function(_) {\n\t      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n\t    };\n\t\n\t    scale.interpolate = function(_) {\n\t      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;\n\t    };\n\t\n\t    return rescale();\n\t  }\n\t\n\t  function tickFormat(domain, count, specifier) {\n\t    var start = domain[0],\n\t        stop = domain[domain.length - 1],\n\t        step = tickStep(start, stop, count == null ? 10 : count),\n\t        precision;\n\t    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\t    switch (specifier.type) {\n\t      case \"s\": {\n\t        var value = Math.max(Math.abs(start), Math.abs(stop));\n\t        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n\t        return exports.formatPrefix(specifier, value);\n\t      }\n\t      case \"\":\n\t      case \"e\":\n\t      case \"g\":\n\t      case \"p\":\n\t      case \"r\": {\n\t        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n\t        break;\n\t      }\n\t      case \"f\":\n\t      case \"%\": {\n\t        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n\t        break;\n\t      }\n\t    }\n\t    return exports.format(specifier);\n\t  }\n\t\n\t  function linearish(scale) {\n\t    var domain = scale.domain;\n\t\n\t    scale.ticks = function(count) {\n\t      var d = domain();\n\t      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n\t    };\n\t\n\t    scale.tickFormat = function(count, specifier) {\n\t      return tickFormat(domain(), count, specifier);\n\t    };\n\t\n\t    scale.nice = function(count) {\n\t      var d = domain(),\n\t          i = d.length - 1,\n\t          n = count == null ? 10 : count,\n\t          start = d[0],\n\t          stop = d[i],\n\t          step = tickStep(start, stop, n);\n\t\n\t      if (step) {\n\t        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n\t        d[0] = Math.floor(start / step) * step;\n\t        d[i] = Math.ceil(stop / step) * step;\n\t        domain(d);\n\t      }\n\t\n\t      return scale;\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function linear$2() {\n\t    var scale = continuous(deinterpolate, interpolateNumber);\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, linear$2());\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function identity$4() {\n\t    var domain = [0, 1];\n\t\n\t    function scale(x) {\n\t      return +x;\n\t    }\n\t\n\t    scale.invert = scale;\n\t\n\t    scale.domain = scale.range = function(_) {\n\t      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return identity$4().domain(domain);\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function nice(domain, interval) {\n\t    domain = domain.slice();\n\t\n\t    var i0 = 0,\n\t        i1 = domain.length - 1,\n\t        x0 = domain[i0],\n\t        x1 = domain[i1],\n\t        t;\n\t\n\t    if (x1 < x0) {\n\t      t = i0, i0 = i1, i1 = t;\n\t      t = x0, x0 = x1, x1 = t;\n\t    }\n\t\n\t    domain[i0] = interval.floor(x0);\n\t    domain[i1] = interval.ceil(x1);\n\t    return domain;\n\t  }\n\t\n\t  function deinterpolate$1(a, b) {\n\t    return (b = Math.log(b / a))\n\t        ? function(x) { return Math.log(x / a) / b; }\n\t        : constant$3(b);\n\t  }\n\t\n\t  function reinterpolate(a, b) {\n\t    return a < 0\n\t        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n\t        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n\t  }\n\t\n\t  function pow10(x) {\n\t    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n\t  }\n\t\n\t  function powp(base) {\n\t    return base === 10 ? pow10\n\t        : base === Math.E ? Math.exp\n\t        : function(x) { return Math.pow(base, x); };\n\t  }\n\t\n\t  function logp(base) {\n\t    return base === Math.E ? Math.log\n\t        : base === 10 && Math.log10\n\t        || base === 2 && Math.log2\n\t        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n\t  }\n\t\n\t  function reflect(f) {\n\t    return function(x) {\n\t      return -f(-x);\n\t    };\n\t  }\n\t\n\t  function log() {\n\t    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n\t        domain = scale.domain,\n\t        base = 10,\n\t        logs = logp(10),\n\t        pows = powp(10);\n\t\n\t    function rescale() {\n\t      logs = logp(base), pows = powp(base);\n\t      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n\t      return scale;\n\t    }\n\t\n\t    scale.base = function(_) {\n\t      return arguments.length ? (base = +_, rescale()) : base;\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain(_), rescale()) : domain();\n\t    };\n\t\n\t    scale.ticks = function(count) {\n\t      var d = domain(),\n\t          u = d[0],\n\t          v = d[d.length - 1],\n\t          r;\n\t\n\t      if (r = v < u) i = u, u = v, v = i;\n\t\n\t      var i = logs(u),\n\t          j = logs(v),\n\t          p,\n\t          k,\n\t          t,\n\t          n = count == null ? 10 : +count,\n\t          z = [];\n\t\n\t      if (!(base % 1) && j - i < n) {\n\t        i = Math.round(i) - 1, j = Math.round(j) + 1;\n\t        if (u > 0) for (; i < j; ++i) {\n\t          for (k = 1, p = pows(i); k < base; ++k) {\n\t            t = p * k;\n\t            if (t < u) continue;\n\t            if (t > v) break;\n\t            z.push(t);\n\t          }\n\t        } else for (; i < j; ++i) {\n\t          for (k = base - 1, p = pows(i); k >= 1; --k) {\n\t            t = p * k;\n\t            if (t < u) continue;\n\t            if (t > v) break;\n\t            z.push(t);\n\t          }\n\t        }\n\t      } else {\n\t        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n\t      }\n\t\n\t      return r ? z.reverse() : z;\n\t    };\n\t\n\t    scale.tickFormat = function(count, specifier) {\n\t      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n\t      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n\t      if (count === Infinity) return specifier;\n\t      if (count == null) count = 10;\n\t      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n\t      return function(d) {\n\t        var i = d / pows(Math.round(logs(d)));\n\t        if (i * base < base - 0.5) i *= base;\n\t        return i <= k ? specifier(d) : \"\";\n\t      };\n\t    };\n\t\n\t    scale.nice = function() {\n\t      return domain(nice(domain(), {\n\t        floor: function(x) { return pows(Math.floor(logs(x))); },\n\t        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n\t      }));\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, log().base(base));\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function raise(x, exponent) {\n\t    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n\t  }\n\t\n\t  function pow() {\n\t    var exponent = 1,\n\t        scale = continuous(deinterpolate, reinterpolate),\n\t        domain = scale.domain;\n\t\n\t    function deinterpolate(a, b) {\n\t      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n\t          ? function(x) { return (raise(x, exponent) - a) / b; }\n\t          : constant$3(b);\n\t    }\n\t\n\t    function reinterpolate(a, b) {\n\t      b = raise(b, exponent) - (a = raise(a, exponent));\n\t      return function(t) { return raise(a + b * t, 1 / exponent); };\n\t    }\n\t\n\t    scale.exponent = function(_) {\n\t      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, pow().exponent(exponent));\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function sqrt() {\n\t    return pow().exponent(0.5);\n\t  }\n\t\n\t  function quantile() {\n\t    var domain = [],\n\t        range = [],\n\t        thresholds = [];\n\t\n\t    function rescale() {\n\t      var i = 0, n = Math.max(1, range.length);\n\t      thresholds = new Array(n - 1);\n\t      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n\t      return scale;\n\t    }\n\t\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n\t    }\n\t\n\t    scale.invertExtent = function(y) {\n\t      var i = range.indexOf(y);\n\t      return i < 0 ? [NaN, NaN] : [\n\t        i > 0 ? thresholds[i - 1] : domain[0],\n\t        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n\t      ];\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain.slice();\n\t      domain = [];\n\t      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n\t      domain.sort(ascending);\n\t      return rescale();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n\t    };\n\t\n\t    scale.quantiles = function() {\n\t      return thresholds.slice();\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return quantile()\n\t          .domain(domain)\n\t          .range(range);\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function quantize$1() {\n\t    var x0 = 0,\n\t        x1 = 1,\n\t        n = 1,\n\t        domain = [0.5],\n\t        range = [0, 1];\n\t\n\t    function scale(x) {\n\t      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t    }\n\t\n\t    function rescale() {\n\t      var i = -1;\n\t      domain = new Array(n);\n\t      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n\t      return scale;\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();\n\t    };\n\t\n\t    scale.invertExtent = function(y) {\n\t      var i = range.indexOf(y);\n\t      return i < 0 ? [NaN, NaN]\n\t          : i < 1 ? [x0, domain[0]]\n\t          : i >= n ? [domain[n - 1], x1]\n\t          : [domain[i - 1], domain[i]];\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return quantize$1()\n\t          .domain([x0, x1])\n\t          .range(range);\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  function threshold$1() {\n\t    var domain = [0.5],\n\t        range = [0, 1],\n\t        n = 1;\n\t\n\t    function scale(x) {\n\t      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n\t    };\n\t\n\t    scale.range = function(_) {\n\t      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n\t    };\n\t\n\t    scale.invertExtent = function(y) {\n\t      var i = range.indexOf(y);\n\t      return [domain[i - 1], domain[i]];\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return threshold$1()\n\t          .domain(domain)\n\t          .range(range);\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\tvar   durationSecond$1 = 1000;\n\tvar   durationMinute$1 = durationSecond$1 * 60;\n\tvar   durationHour$1 = durationMinute$1 * 60;\n\tvar   durationDay$1 = durationHour$1 * 24;\n\tvar   durationWeek$1 = durationDay$1 * 7;\n\t  var durationMonth = durationDay$1 * 30;\n\t  var durationYear = durationDay$1 * 365;\n\t  function date$1(t) {\n\t    return new Date(t);\n\t  }\n\t\n\t  function number$2(t) {\n\t    return t instanceof Date ? +t : +new Date(+t);\n\t  }\n\t\n\t  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n\t    var scale = continuous(deinterpolate, interpolateNumber),\n\t        invert = scale.invert,\n\t        domain = scale.domain;\n\t\n\t    var formatMillisecond = format(\".%L\"),\n\t        formatSecond = format(\":%S\"),\n\t        formatMinute = format(\"%I:%M\"),\n\t        formatHour = format(\"%I %p\"),\n\t        formatDay = format(\"%a %d\"),\n\t        formatWeek = format(\"%b %d\"),\n\t        formatMonth = format(\"%B\"),\n\t        formatYear = format(\"%Y\");\n\t\n\t    var tickIntervals = [\n\t      [second,  1,      durationSecond$1],\n\t      [second,  5,  5 * durationSecond$1],\n\t      [second, 15, 15 * durationSecond$1],\n\t      [second, 30, 30 * durationSecond$1],\n\t      [minute,  1,      durationMinute$1],\n\t      [minute,  5,  5 * durationMinute$1],\n\t      [minute, 15, 15 * durationMinute$1],\n\t      [minute, 30, 30 * durationMinute$1],\n\t      [  hour,  1,      durationHour$1  ],\n\t      [  hour,  3,  3 * durationHour$1  ],\n\t      [  hour,  6,  6 * durationHour$1  ],\n\t      [  hour, 12, 12 * durationHour$1  ],\n\t      [   day,  1,      durationDay$1   ],\n\t      [   day,  2,  2 * durationDay$1   ],\n\t      [  week,  1,      durationWeek$1  ],\n\t      [ month,  1,      durationMonth ],\n\t      [ month,  3,  3 * durationMonth ],\n\t      [  year,  1,      durationYear  ]\n\t    ];\n\t\n\t    function tickFormat(date) {\n\t      return (second(date) < date ? formatMillisecond\n\t          : minute(date) < date ? formatSecond\n\t          : hour(date) < date ? formatMinute\n\t          : day(date) < date ? formatHour\n\t          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n\t          : year(date) < date ? formatMonth\n\t          : formatYear)(date);\n\t    }\n\t\n\t    function tickInterval(interval, start, stop, step) {\n\t      if (interval == null) interval = 10;\n\t\n\t      // If a desired tick count is specified, pick a reasonable tick interval\n\t      // based on the extent of the domain and a rough estimate of tick size.\n\t      // Otherwise, assume interval is already a time interval and use it.\n\t      if (typeof interval === \"number\") {\n\t        var target = Math.abs(stop - start) / interval,\n\t            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n\t        if (i === tickIntervals.length) {\n\t          step = tickStep(start / durationYear, stop / durationYear, interval);\n\t          interval = year;\n\t        } else if (i) {\n\t          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n\t          step = i[1];\n\t          interval = i[0];\n\t        } else {\n\t          step = tickStep(start, stop, interval);\n\t          interval = millisecond;\n\t        }\n\t      }\n\t\n\t      return step == null ? interval : interval.every(step);\n\t    }\n\t\n\t    scale.invert = function(y) {\n\t      return new Date(invert(y));\n\t    };\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\n\t    };\n\t\n\t    scale.ticks = function(interval, step) {\n\t      var d = domain(),\n\t          t0 = d[0],\n\t          t1 = d[d.length - 1],\n\t          r = t1 < t0,\n\t          t;\n\t      if (r) t = t0, t0 = t1, t1 = t;\n\t      t = tickInterval(interval, t0, t1, step);\n\t      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\t      return r ? t.reverse() : t;\n\t    };\n\t\n\t    scale.tickFormat = function(count, specifier) {\n\t      return specifier == null ? tickFormat : format(specifier);\n\t    };\n\t\n\t    scale.nice = function(interval, step) {\n\t      var d = domain();\n\t      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n\t          ? domain(nice(d, interval))\n\t          : scale;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n\t    };\n\t\n\t    return scale;\n\t  }\n\t\n\t  function time() {\n\t    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n\t  }\n\t\n\t  function utcTime() {\n\t    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n\t  }\n\t\n\t  function colors(s) {\n\t    return s.match(/.{6}/g).map(function(x) {\n\t      return \"#\" + x;\n\t    });\n\t  }\n\t\n\t  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\t\n\t  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\t\n\t  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\t\n\t  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\t\n\t  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\t\n\t  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\t  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\t\n\t  var rainbow = cubehelix();\n\t\n\t  function rainbow$1(t) {\n\t    if (t < 0 || t > 1) t -= Math.floor(t);\n\t    var ts = Math.abs(t - 0.5);\n\t    rainbow.h = 360 * t - 100;\n\t    rainbow.s = 1.5 - 1.5 * ts;\n\t    rainbow.l = 0.8 - 0.9 * ts;\n\t    return rainbow + \"\";\n\t  }\n\t\n\t  function ramp(range) {\n\t    var n = range.length;\n\t    return function(t) {\n\t      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n\t    };\n\t  }\n\t\n\t  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\t\n\t  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\t\n\t  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\t\n\t  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\t\n\t  function sequential(interpolator) {\n\t    var x0 = 0,\n\t        x1 = 1,\n\t        clamp = false;\n\t\n\t    function scale(x) {\n\t      var t = (x - x0) / (x1 - x0);\n\t      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n\t    }\n\t\n\t    scale.domain = function(_) {\n\t      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n\t    };\n\t\n\t    scale.clamp = function(_) {\n\t      return arguments.length ? (clamp = !!_, scale) : clamp;\n\t    };\n\t\n\t    scale.interpolator = function(_) {\n\t      return arguments.length ? (interpolator = _, scale) : interpolator;\n\t    };\n\t\n\t    scale.copy = function() {\n\t      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n\t    };\n\t\n\t    return linearish(scale);\n\t  }\n\t\n\t  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\t\n\t  var namespaces = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: xhtml,\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t\n\t  function namespace(name) {\n\t    var prefix = name += \"\", i = prefix.indexOf(\":\");\n\t    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n\t  }\n\t\n\t  function creatorInherit(name) {\n\t    return function() {\n\t      var document = this.ownerDocument,\n\t          uri = this.namespaceURI;\n\t      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n\t          ? document.createElement(name)\n\t          : document.createElementNS(uri, name);\n\t    };\n\t  }\n\t\n\t  function creatorFixed(fullname) {\n\t    return function() {\n\t      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n\t    };\n\t  }\n\t\n\t  function creator(name) {\n\t    var fullname = namespace(name);\n\t    return (fullname.local\n\t        ? creatorFixed\n\t        : creatorInherit)(fullname);\n\t  }\n\t\n\t  var nextId = 0;\n\t\n\t  function local() {\n\t    return new Local;\n\t  }\n\t\n\t  function Local() {\n\t    this._ = \"@\" + (++nextId).toString(36);\n\t  }\n\t\n\t  Local.prototype = local.prototype = {\n\t    constructor: Local,\n\t    get: function(node) {\n\t      var id = this._;\n\t      while (!(id in node)) if (!(node = node.parentNode)) return;\n\t      return node[id];\n\t    },\n\t    set: function(node, value) {\n\t      return node[this._] = value;\n\t    },\n\t    remove: function(node) {\n\t      return this._ in node && delete node[this._];\n\t    },\n\t    toString: function() {\n\t      return this._;\n\t    }\n\t  };\n\t\n\t  var matcher = function(selector) {\n\t    return function() {\n\t      return this.matches(selector);\n\t    };\n\t  };\n\t\n\t  if (typeof document !== \"undefined\") {\n\t    var element = document.documentElement;\n\t    if (!element.matches) {\n\t      var vendorMatches = element.webkitMatchesSelector\n\t          || element.msMatchesSelector\n\t          || element.mozMatchesSelector\n\t          || element.oMatchesSelector;\n\t      matcher = function(selector) {\n\t        return function() {\n\t          return vendorMatches.call(this, selector);\n\t        };\n\t      };\n\t    }\n\t  }\n\t\n\t  var matcher$1 = matcher;\n\t\n\t  var filterEvents = {};\n\t\n\t  exports.event = null;\n\t\n\t  if (typeof document !== \"undefined\") {\n\t    var element$1 = document.documentElement;\n\t    if (!(\"onmouseenter\" in element$1)) {\n\t      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n\t    }\n\t  }\n\t\n\t  function filterContextListener(listener, index, group) {\n\t    listener = contextListener(listener, index, group);\n\t    return function(event) {\n\t      var related = event.relatedTarget;\n\t      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n\t        listener.call(this, event);\n\t      }\n\t    };\n\t  }\n\t\n\t  function contextListener(listener, index, group) {\n\t    return function(event1) {\n\t      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n\t      exports.event = event1;\n\t      try {\n\t        listener.call(this, this.__data__, index, group);\n\t      } finally {\n\t        exports.event = event0;\n\t      }\n\t    };\n\t  }\n\t\n\t  function parseTypenames$1(typenames) {\n\t    return typenames.trim().split(/^|\\s+/).map(function(t) {\n\t      var name = \"\", i = t.indexOf(\".\");\n\t      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n\t      return {type: t, name: name};\n\t    });\n\t  }\n\t\n\t  function onRemove(typename) {\n\t    return function() {\n\t      var on = this.__on;\n\t      if (!on) return;\n\t      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n\t        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n\t          this.removeEventListener(o.type, o.listener, o.capture);\n\t        } else {\n\t          on[++i] = o;\n\t        }\n\t      }\n\t      if (++i) on.length = i;\n\t      else delete this.__on;\n\t    };\n\t  }\n\t\n\t  function onAdd(typename, value, capture) {\n\t    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n\t    return function(d, i, group) {\n\t      var on = this.__on, o, listener = wrap(value, i, group);\n\t      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n\t        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n\t          this.removeEventListener(o.type, o.listener, o.capture);\n\t          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n\t          o.value = value;\n\t          return;\n\t        }\n\t      }\n\t      this.addEventListener(typename.type, listener, capture);\n\t      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n\t      if (!on) this.__on = [o];\n\t      else on.push(o);\n\t    };\n\t  }\n\t\n\t  function selection_on(typename, value, capture) {\n\t    var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\t\n\t    if (arguments.length < 2) {\n\t      var on = this.node().__on;\n\t      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n\t        for (i = 0, o = on[j]; i < n; ++i) {\n\t          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n\t            return o.value;\n\t          }\n\t        }\n\t      }\n\t      return;\n\t    }\n\t\n\t    on = value ? onAdd : onRemove;\n\t    if (capture == null) capture = false;\n\t    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n\t    return this;\n\t  }\n\t\n\t  function customEvent(event1, listener, that, args) {\n\t    var event0 = exports.event;\n\t    event1.sourceEvent = exports.event;\n\t    exports.event = event1;\n\t    try {\n\t      return listener.apply(that, args);\n\t    } finally {\n\t      exports.event = event0;\n\t    }\n\t  }\n\t\n\t  function sourceEvent() {\n\t    var current = exports.event, source;\n\t    while (source = current.sourceEvent) current = source;\n\t    return current;\n\t  }\n\t\n\t  function point$5(node, event) {\n\t    var svg = node.ownerSVGElement || node;\n\t\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      point.x = event.clientX, point.y = event.clientY;\n\t      point = point.matrixTransform(node.getScreenCTM().inverse());\n\t      return [point.x, point.y];\n\t    }\n\t\n\t    var rect = node.getBoundingClientRect();\n\t    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n\t  }\n\t\n\t  function mouse(node) {\n\t    var event = sourceEvent();\n\t    if (event.changedTouches) event = event.changedTouches[0];\n\t    return point$5(node, event);\n\t  }\n\t\n\t  function none$2() {}\n\t\n\t  function selector(selector) {\n\t    return selector == null ? none$2 : function() {\n\t      return this.querySelector(selector);\n\t    };\n\t  }\n\t\n\t  function selection_select(select) {\n\t    if (typeof select !== \"function\") select = selector(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          subgroup[i] = subnode;\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Selection(subgroups, this._parents);\n\t  }\n\t\n\t  function empty() {\n\t    return [];\n\t  }\n\t\n\t  function selectorAll(selector) {\n\t    return selector == null ? empty : function() {\n\t      return this.querySelectorAll(selector);\n\t    };\n\t  }\n\t\n\t  function selection_selectAll(select) {\n\t    if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          subgroups.push(select.call(node, node.__data__, i, group));\n\t          parents.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Selection(subgroups, parents);\n\t  }\n\t\n\t  function selection_filter(match) {\n\t    if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Selection(subgroups, this._parents);\n\t  }\n\t\n\t  function sparse(update) {\n\t    return new Array(update.length);\n\t  }\n\t\n\t  function selection_enter() {\n\t    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n\t  }\n\t\n\t  function EnterNode(parent, datum) {\n\t    this.ownerDocument = parent.ownerDocument;\n\t    this.namespaceURI = parent.namespaceURI;\n\t    this._next = null;\n\t    this._parent = parent;\n\t    this.__data__ = datum;\n\t  }\n\t\n\t  EnterNode.prototype = {\n\t    constructor: EnterNode,\n\t    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n\t    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n\t    querySelector: function(selector) { return this._parent.querySelector(selector); },\n\t    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n\t  };\n\t\n\t  function constant$4(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\t\n\t  function bindIndex(parent, group, enter, update, exit, data) {\n\t    var i = 0,\n\t        node,\n\t        groupLength = group.length,\n\t        dataLength = data.length;\n\t\n\t    // Put any non-null nodes that fit into update.\n\t    // Put any null nodes into enter.\n\t    // Put any remaining data into enter.\n\t    for (; i < dataLength; ++i) {\n\t      if (node = group[i]) {\n\t        node.__data__ = data[i];\n\t        update[i] = node;\n\t      } else {\n\t        enter[i] = new EnterNode(parent, data[i]);\n\t      }\n\t    }\n\t\n\t    // Put any non-null nodes that don’t fit into exit.\n\t    for (; i < groupLength; ++i) {\n\t      if (node = group[i]) {\n\t        exit[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  function bindKey(parent, group, enter, update, exit, data, key) {\n\t    var i,\n\t        node,\n\t        nodeByKeyValue = {},\n\t        groupLength = group.length,\n\t        dataLength = data.length,\n\t        keyValues = new Array(groupLength),\n\t        keyValue;\n\t\n\t    // Compute the key for each node.\n\t    // If multiple nodes have the same key, the duplicates are added to exit.\n\t    for (i = 0; i < groupLength; ++i) {\n\t      if (node = group[i]) {\n\t        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n\t        if (keyValue in nodeByKeyValue) {\n\t          exit[i] = node;\n\t        } else {\n\t          nodeByKeyValue[keyValue] = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    // Compute the key for each datum.\n\t    // If there a node associated with this key, join and add it to update.\n\t    // If there is not (or the key is a duplicate), add it to enter.\n\t    for (i = 0; i < dataLength; ++i) {\n\t      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\t      if (node = nodeByKeyValue[keyValue]) {\n\t        update[i] = node;\n\t        node.__data__ = data[i];\n\t        nodeByKeyValue[keyValue] = null;\n\t      } else {\n\t        enter[i] = new EnterNode(parent, data[i]);\n\t      }\n\t    }\n\t\n\t    // Add any remaining nodes that were not bound to data to exit.\n\t    for (i = 0; i < groupLength; ++i) {\n\t      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n\t        exit[i] = node;\n\t      }\n\t    }\n\t  }\n\t\n\t  function selection_data(value, key) {\n\t    if (!value) {\n\t      data = new Array(this.size()), j = -1;\n\t      this.each(function(d) { data[++j] = d; });\n\t      return data;\n\t    }\n\t\n\t    var bind = key ? bindKey : bindIndex,\n\t        parents = this._parents,\n\t        groups = this._groups;\n\t\n\t    if (typeof value !== \"function\") value = constant$4(value);\n\t\n\t    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n\t      var parent = parents[j],\n\t          group = groups[j],\n\t          groupLength = group.length,\n\t          data = value.call(parent, parent && parent.__data__, j, parents),\n\t          dataLength = data.length,\n\t          enterGroup = enter[j] = new Array(dataLength),\n\t          updateGroup = update[j] = new Array(dataLength),\n\t          exitGroup = exit[j] = new Array(groupLength);\n\t\n\t      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\t\n\t      // Now connect the enter nodes to their following update node, such that\n\t      // appendChild can insert the materialized enter node before this node,\n\t      // rather than at the end of the parent node.\n\t      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n\t        if (previous = enterGroup[i0]) {\n\t          if (i0 >= i1) i1 = i0 + 1;\n\t          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n\t          previous._next = next || null;\n\t        }\n\t      }\n\t    }\n\t\n\t    update = new Selection(update, parents);\n\t    update._enter = enter;\n\t    update._exit = exit;\n\t    return update;\n\t  }\n\t\n\t  function selection_exit() {\n\t    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n\t  }\n\t\n\t  function selection_merge(selection) {\n\t\n\t    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t        if (node = group0[i] || group1[i]) {\n\t          merge[i] = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (; j < m0; ++j) {\n\t      merges[j] = groups0[j];\n\t    }\n\t\n\t    return new Selection(merges, this._parents);\n\t  }\n\t\n\t  function selection_order() {\n\t\n\t    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n\t      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function selection_sort(compare) {\n\t    if (!compare) compare = ascending$2;\n\t\n\t    function compareNode(a, b) {\n\t      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n\t    }\n\t\n\t    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          sortgroup[i] = node;\n\t        }\n\t      }\n\t      sortgroup.sort(compareNode);\n\t    }\n\t\n\t    return new Selection(sortgroups, this._parents).order();\n\t  }\n\t\n\t  function ascending$2(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t\n\t  function selection_call() {\n\t    var callback = arguments[0];\n\t    arguments[0] = this;\n\t    callback.apply(null, arguments);\n\t    return this;\n\t  }\n\t\n\t  function selection_nodes() {\n\t    var nodes = new Array(this.size()), i = -1;\n\t    this.each(function() { nodes[++i] = this; });\n\t    return nodes;\n\t  }\n\t\n\t  function selection_node() {\n\t\n\t    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  function selection_size() {\n\t    var size = 0;\n\t    this.each(function() { ++size; });\n\t    return size;\n\t  }\n\t\n\t  function selection_empty() {\n\t    return !this.node();\n\t  }\n\t\n\t  function selection_each(callback) {\n\t\n\t    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n\t        if (node = group[i]) callback.call(node, node.__data__, i, group);\n\t      }\n\t    }\n\t\n\t    return this;\n\t  }\n\t\n\t  function attrRemove(name) {\n\t    return function() {\n\t      this.removeAttribute(name);\n\t    };\n\t  }\n\t\n\t  function attrRemoveNS(fullname) {\n\t    return function() {\n\t      this.removeAttributeNS(fullname.space, fullname.local);\n\t    };\n\t  }\n\t\n\t  function attrConstant(name, value) {\n\t    return function() {\n\t      this.setAttribute(name, value);\n\t    };\n\t  }\n\t\n\t  function attrConstantNS(fullname, value) {\n\t    return function() {\n\t      this.setAttributeNS(fullname.space, fullname.local, value);\n\t    };\n\t  }\n\t\n\t  function attrFunction(name, value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) this.removeAttribute(name);\n\t      else this.setAttribute(name, v);\n\t    };\n\t  }\n\t\n\t  function attrFunctionNS(fullname, value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n\t      else this.setAttributeNS(fullname.space, fullname.local, v);\n\t    };\n\t  }\n\t\n\t  function selection_attr(name, value) {\n\t    var fullname = namespace(name);\n\t\n\t    if (arguments.length < 2) {\n\t      var node = this.node();\n\t      return fullname.local\n\t          ? node.getAttributeNS(fullname.space, fullname.local)\n\t          : node.getAttribute(fullname);\n\t    }\n\t\n\t    return this.each((value == null\n\t        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n\t        ? (fullname.local ? attrFunctionNS : attrFunction)\n\t        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n\t  }\n\t\n\t  function window(node) {\n\t    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n\t        || (node.document && node) // node is a Window\n\t        || node.defaultView; // node is a Document\n\t  }\n\t\n\t  function styleRemove(name) {\n\t    return function() {\n\t      this.style.removeProperty(name);\n\t    };\n\t  }\n\t\n\t  function styleConstant(name, value, priority) {\n\t    return function() {\n\t      this.style.setProperty(name, value, priority);\n\t    };\n\t  }\n\t\n\t  function styleFunction(name, value, priority) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) this.style.removeProperty(name);\n\t      else this.style.setProperty(name, v, priority);\n\t    };\n\t  }\n\t\n\t  function selection_style(name, value, priority) {\n\t    var node;\n\t    return arguments.length > 1\n\t        ? this.each((value == null\n\t              ? styleRemove : typeof value === \"function\"\n\t              ? styleFunction\n\t              : styleConstant)(name, value, priority == null ? \"\" : priority))\n\t        : window(node = this.node())\n\t            .getComputedStyle(node, null)\n\t            .getPropertyValue(name);\n\t  }\n\t\n\t  function propertyRemove(name) {\n\t    return function() {\n\t      delete this[name];\n\t    };\n\t  }\n\t\n\t  function propertyConstant(name, value) {\n\t    return function() {\n\t      this[name] = value;\n\t    };\n\t  }\n\t\n\t  function propertyFunction(name, value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      if (v == null) delete this[name];\n\t      else this[name] = v;\n\t    };\n\t  }\n\t\n\t  function selection_property(name, value) {\n\t    return arguments.length > 1\n\t        ? this.each((value == null\n\t            ? propertyRemove : typeof value === \"function\"\n\t            ? propertyFunction\n\t            : propertyConstant)(name, value))\n\t        : this.node()[name];\n\t  }\n\t\n\t  function classArray(string) {\n\t    return string.trim().split(/^|\\s+/);\n\t  }\n\t\n\t  function classList(node) {\n\t    return node.classList || new ClassList(node);\n\t  }\n\t\n\t  function ClassList(node) {\n\t    this._node = node;\n\t    this._names = classArray(node.getAttribute(\"class\") || \"\");\n\t  }\n\t\n\t  ClassList.prototype = {\n\t    add: function(name) {\n\t      var i = this._names.indexOf(name);\n\t      if (i < 0) {\n\t        this._names.push(name);\n\t        this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t      }\n\t    },\n\t    remove: function(name) {\n\t      var i = this._names.indexOf(name);\n\t      if (i >= 0) {\n\t        this._names.splice(i, 1);\n\t        this._node.setAttribute(\"class\", this._names.join(\" \"));\n\t      }\n\t    },\n\t    contains: function(name) {\n\t      return this._names.indexOf(name) >= 0;\n\t    }\n\t  };\n\t\n\t  function classedAdd(node, names) {\n\t    var list = classList(node), i = -1, n = names.length;\n\t    while (++i < n) list.add(names[i]);\n\t  }\n\t\n\t  function classedRemove(node, names) {\n\t    var list = classList(node), i = -1, n = names.length;\n\t    while (++i < n) list.remove(names[i]);\n\t  }\n\t\n\t  function classedTrue(names) {\n\t    return function() {\n\t      classedAdd(this, names);\n\t    };\n\t  }\n\t\n\t  function classedFalse(names) {\n\t    return function() {\n\t      classedRemove(this, names);\n\t    };\n\t  }\n\t\n\t  function classedFunction(names, value) {\n\t    return function() {\n\t      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n\t    };\n\t  }\n\t\n\t  function selection_classed(name, value) {\n\t    var names = classArray(name + \"\");\n\t\n\t    if (arguments.length < 2) {\n\t      var list = classList(this.node()), i = -1, n = names.length;\n\t      while (++i < n) if (!list.contains(names[i])) return false;\n\t      return true;\n\t    }\n\t\n\t    return this.each((typeof value === \"function\"\n\t        ? classedFunction : value\n\t        ? classedTrue\n\t        : classedFalse)(names, value));\n\t  }\n\t\n\t  function textRemove() {\n\t    this.textContent = \"\";\n\t  }\n\t\n\t  function textConstant(value) {\n\t    return function() {\n\t      this.textContent = value;\n\t    };\n\t  }\n\t\n\t  function textFunction(value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    };\n\t  }\n\t\n\t  function selection_text(value) {\n\t    return arguments.length\n\t        ? this.each(value == null\n\t            ? textRemove : (typeof value === \"function\"\n\t            ? textFunction\n\t            : textConstant)(value))\n\t        : this.node().textContent;\n\t  }\n\t\n\t  function htmlRemove() {\n\t    this.innerHTML = \"\";\n\t  }\n\t\n\t  function htmlConstant(value) {\n\t    return function() {\n\t      this.innerHTML = value;\n\t    };\n\t  }\n\t\n\t  function htmlFunction(value) {\n\t    return function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    };\n\t  }\n\t\n\t  function selection_html(value) {\n\t    return arguments.length\n\t        ? this.each(value == null\n\t            ? htmlRemove : (typeof value === \"function\"\n\t            ? htmlFunction\n\t            : htmlConstant)(value))\n\t        : this.node().innerHTML;\n\t  }\n\t\n\t  function raise$1() {\n\t    if (this.nextSibling) this.parentNode.appendChild(this);\n\t  }\n\t\n\t  function selection_raise() {\n\t    return this.each(raise$1);\n\t  }\n\t\n\t  function lower() {\n\t    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n\t  }\n\t\n\t  function selection_lower() {\n\t    return this.each(lower);\n\t  }\n\t\n\t  function selection_append(name) {\n\t    var create = typeof name === \"function\" ? name : creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(create.apply(this, arguments));\n\t    });\n\t  }\n\t\n\t  function constantNull() {\n\t    return null;\n\t  }\n\t\n\t  function selection_insert(name, before) {\n\t    var create = typeof name === \"function\" ? name : creator(name),\n\t        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n\t    });\n\t  }\n\t\n\t  function remove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t\n\t  function selection_remove() {\n\t    return this.each(remove);\n\t  }\n\t\n\t  function selection_datum(value) {\n\t    return arguments.length\n\t        ? this.property(\"__data__\", value)\n\t        : this.node().__data__;\n\t  }\n\t\n\t  function dispatchEvent(node, type, params) {\n\t    var window$$ = window(node),\n\t        event = window$$.CustomEvent;\n\t\n\t    if (event) {\n\t      event = new event(type, params);\n\t    } else {\n\t      event = window$$.document.createEvent(\"Event\");\n\t      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n\t      else event.initEvent(type, false, false);\n\t    }\n\t\n\t    node.dispatchEvent(event);\n\t  }\n\t\n\t  function dispatchConstant(type, params) {\n\t    return function() {\n\t      return dispatchEvent(this, type, params);\n\t    };\n\t  }\n\t\n\t  function dispatchFunction(type, params) {\n\t    return function() {\n\t      return dispatchEvent(this, type, params.apply(this, arguments));\n\t    };\n\t  }\n\t\n\t  function selection_dispatch(type, params) {\n\t    return this.each((typeof params === \"function\"\n\t        ? dispatchFunction\n\t        : dispatchConstant)(type, params));\n\t  }\n\t\n\t  var root = [null];\n\t\n\t  function Selection(groups, parents) {\n\t    this._groups = groups;\n\t    this._parents = parents;\n\t  }\n\t\n\t  function selection() {\n\t    return new Selection([[document.documentElement]], root);\n\t  }\n\t\n\t  Selection.prototype = selection.prototype = {\n\t    constructor: Selection,\n\t    select: selection_select,\n\t    selectAll: selection_selectAll,\n\t    filter: selection_filter,\n\t    data: selection_data,\n\t    enter: selection_enter,\n\t    exit: selection_exit,\n\t    merge: selection_merge,\n\t    order: selection_order,\n\t    sort: selection_sort,\n\t    call: selection_call,\n\t    nodes: selection_nodes,\n\t    node: selection_node,\n\t    size: selection_size,\n\t    empty: selection_empty,\n\t    each: selection_each,\n\t    attr: selection_attr,\n\t    style: selection_style,\n\t    property: selection_property,\n\t    classed: selection_classed,\n\t    text: selection_text,\n\t    html: selection_html,\n\t    raise: selection_raise,\n\t    lower: selection_lower,\n\t    append: selection_append,\n\t    insert: selection_insert,\n\t    remove: selection_remove,\n\t    datum: selection_datum,\n\t    on: selection_on,\n\t    dispatch: selection_dispatch\n\t  };\n\t\n\t  function select(selector) {\n\t    return typeof selector === \"string\"\n\t        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n\t        : new Selection([[selector]], root);\n\t  }\n\t\n\t  function selectAll(selector) {\n\t    return typeof selector === \"string\"\n\t        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n\t        : new Selection([selector == null ? [] : selector], root);\n\t  }\n\t\n\t  function touch(node, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\t\n\t    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return point$5(node, touch);\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  function touches(node, touches) {\n\t    if (touches == null) touches = sourceEvent().touches;\n\t\n\t    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n\t      points[i] = point$5(node, touches[i]);\n\t    }\n\t\n\t    return points;\n\t  }\n\t\n\t  var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n\t  var emptyTween = [];\n\t\n\t  var CREATED = 0;\n\t  var SCHEDULED = 1;\n\t  var STARTING = 2;\n\t  var STARTED = 3;\n\t  var ENDING = 4;\n\t  var ENDED = 5;\n\t\n\t  function schedule(node, name, id, index, group, timing) {\n\t    var schedules = node.__transition;\n\t    if (!schedules) node.__transition = {};\n\t    else if (id in schedules) return;\n\t    create(node, id, {\n\t      name: name,\n\t      index: index, // For context during callback.\n\t      group: group, // For context during callback.\n\t      on: emptyOn,\n\t      tween: emptyTween,\n\t      time: timing.time,\n\t      delay: timing.delay,\n\t      duration: timing.duration,\n\t      ease: timing.ease,\n\t      timer: null,\n\t      state: CREATED\n\t    });\n\t  }\n\t\n\t  function init(node, id) {\n\t    var schedule = node.__transition;\n\t    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n\t    return schedule;\n\t  }\n\t\n\t  function set$2(node, id) {\n\t    var schedule = node.__transition;\n\t    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n\t    return schedule;\n\t  }\n\t\n\t  function get$1(node, id) {\n\t    var schedule = node.__transition;\n\t    if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n\t    return schedule;\n\t  }\n\t\n\t  function create(node, id, self) {\n\t    var schedules = node.__transition,\n\t        tween;\n\t\n\t    // Initialize the self timer when the transition is created.\n\t    // Note the actual delay is not known until the first callback!\n\t    schedules[id] = self;\n\t    self.timer = timer(schedule, 0, self.time);\n\t\n\t    // If the delay is greater than this first sleep, sleep some more;\n\t    // otherwise, start immediately.\n\t    function schedule(elapsed) {\n\t      self.state = SCHEDULED;\n\t      if (self.delay <= elapsed) start(elapsed - self.delay);\n\t      else self.timer.restart(start, self.delay, self.time);\n\t    }\n\t\n\t    function start(elapsed) {\n\t      var i, j, n, o;\n\t\n\t      for (i in schedules) {\n\t        o = schedules[i];\n\t        if (o.name !== self.name) continue;\n\t\n\t        // Interrupt the active transition, if any.\n\t        // Dispatch the interrupt event.\n\t        if (o.state === STARTED) {\n\t          o.state = ENDED;\n\t          o.timer.stop();\n\t          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n\t          delete schedules[i];\n\t        }\n\t\n\t        // Cancel any pre-empted transitions. No interrupt event is dispatched\n\t        // because the cancelled transitions never started. Note that this also\n\t        // removes this transition from the pending list!\n\t        else if (+i < id) {\n\t          o.state = ENDED;\n\t          o.timer.stop();\n\t          delete schedules[i];\n\t        }\n\t      }\n\t\n\t      // Defer the first tick to end of the current frame; see mbostock/d3#1576.\n\t      // Note the transition may be canceled after start and before the first tick!\n\t      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n\t      // Assuming this is successful, subsequent callbacks go straight to tick.\n\t      timeout$1(function() {\n\t        if (self.state === STARTED) {\n\t          self.timer.restart(tick, self.delay, self.time);\n\t          tick(elapsed);\n\t        }\n\t      });\n\t\n\t      // Dispatch the start event.\n\t      // Note this must be done before the tween are initialized.\n\t      self.state = STARTING;\n\t      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n\t      if (self.state !== STARTING) return; // interrupted\n\t      self.state = STARTED;\n\t\n\t      // Initialize the tween, deleting null tween.\n\t      tween = new Array(n = self.tween.length);\n\t      for (i = 0, j = -1; i < n; ++i) {\n\t        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n\t          tween[++j] = o;\n\t        }\n\t      }\n\t      tween.length = j + 1;\n\t    }\n\t\n\t    function tick(elapsed) {\n\t      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),\n\t          i = -1,\n\t          n = tween.length;\n\t\n\t      while (++i < n) {\n\t        tween[i].call(null, t);\n\t      }\n\t\n\t      // Dispatch the end event.\n\t      if (self.state === ENDING) {\n\t        self.state = ENDED;\n\t        self.timer.stop();\n\t        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n\t        for (i in schedules) if (+i !== id) return void delete schedules[id];\n\t        delete node.__transition;\n\t      }\n\t    }\n\t  }\n\t\n\t  function interrupt(node, name) {\n\t    var schedules = node.__transition,\n\t        schedule,\n\t        active,\n\t        empty = true,\n\t        i;\n\t\n\t    if (!schedules) return;\n\t\n\t    name = name == null ? null : name + \"\";\n\t\n\t    for (i in schedules) {\n\t      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n\t      active = schedule.state === STARTED;\n\t      schedule.state = ENDED;\n\t      schedule.timer.stop();\n\t      if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n\t      delete schedules[i];\n\t    }\n\t\n\t    if (empty) delete node.__transition;\n\t  }\n\t\n\t  function selection_interrupt(name) {\n\t    return this.each(function() {\n\t      interrupt(this, name);\n\t    });\n\t  }\n\t\n\t  function tweenRemove(id, name) {\n\t    var tween0, tween1;\n\t    return function() {\n\t      var schedule = set$2(this, id),\n\t          tween = schedule.tween;\n\t\n\t      // If this node shared tween with the previous node,\n\t      // just assign the updated shared tween and we’re done!\n\t      // Otherwise, copy-on-write.\n\t      if (tween !== tween0) {\n\t        tween1 = tween0 = tween;\n\t        for (var i = 0, n = tween1.length; i < n; ++i) {\n\t          if (tween1[i].name === name) {\n\t            tween1 = tween1.slice();\n\t            tween1.splice(i, 1);\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      schedule.tween = tween1;\n\t    };\n\t  }\n\t\n\t  function tweenFunction(id, name, value) {\n\t    var tween0, tween1;\n\t    if (typeof value !== \"function\") throw new Error;\n\t    return function() {\n\t      var schedule = set$2(this, id),\n\t          tween = schedule.tween;\n\t\n\t      // If this node shared tween with the previous node,\n\t      // just assign the updated shared tween and we’re done!\n\t      // Otherwise, copy-on-write.\n\t      if (tween !== tween0) {\n\t        tween1 = (tween0 = tween).slice();\n\t        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n\t          if (tween1[i].name === name) {\n\t            tween1[i] = t;\n\t            break;\n\t          }\n\t        }\n\t        if (i === n) tween1.push(t);\n\t      }\n\t\n\t      schedule.tween = tween1;\n\t    };\n\t  }\n\t\n\t  function transition_tween(name, value) {\n\t    var id = this._id;\n\t\n\t    name += \"\";\n\t\n\t    if (arguments.length < 2) {\n\t      var tween = get$1(this.node(), id).tween;\n\t      for (var i = 0, n = tween.length, t; i < n; ++i) {\n\t        if ((t = tween[i]).name === name) {\n\t          return t.value;\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t\n\t    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n\t  }\n\t\n\t  function tweenValue(transition, name, value) {\n\t    var id = transition._id;\n\t\n\t    transition.each(function() {\n\t      var schedule = set$2(this, id);\n\t      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n\t    });\n\t\n\t    return function(node) {\n\t      return get$1(node, id).value[name];\n\t    };\n\t  }\n\t\n\t  function interpolate$1(a, b) {\n\t    var c;\n\t    return (typeof b === \"number\" ? interpolateNumber\n\t        : b instanceof color ? interpolateRgb\n\t        : (c = color(b)) ? (b = c, interpolateRgb)\n\t        : interpolateString)(a, b);\n\t  }\n\t\n\t  function attrRemove$1(name) {\n\t    return function() {\n\t      this.removeAttribute(name);\n\t    };\n\t  }\n\t\n\t  function attrRemoveNS$1(fullname) {\n\t    return function() {\n\t      this.removeAttributeNS(fullname.space, fullname.local);\n\t    };\n\t  }\n\t\n\t  function attrConstant$1(name, interpolate, value1) {\n\t    var value00,\n\t        interpolate0;\n\t    return function() {\n\t      var value0 = this.getAttribute(name);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value1);\n\t    };\n\t  }\n\t\n\t  function attrConstantNS$1(fullname, interpolate, value1) {\n\t    var value00,\n\t        interpolate0;\n\t    return function() {\n\t      var value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value1);\n\t    };\n\t  }\n\t\n\t  function attrFunction$1(name, interpolate, value) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var value0, value1 = value(this);\n\t      if (value1 == null) return void this.removeAttribute(name);\n\t      value0 = this.getAttribute(name);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function attrFunctionNS$1(fullname, interpolate, value) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var value0, value1 = value(this);\n\t      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n\t      value0 = this.getAttributeNS(fullname.space, fullname.local);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function transition_attr(name, value) {\n\t    var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate$1;\n\t    return this.attrTween(name, typeof value === \"function\"\n\t        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n\t        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n\t        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n\t  }\n\t\n\t  function attrTweenNS(fullname, value) {\n\t    function tween() {\n\t      var node = this, i = value.apply(node, arguments);\n\t      return i && function(t) {\n\t        node.setAttributeNS(fullname.space, fullname.local, i(t));\n\t      };\n\t    }\n\t    tween._value = value;\n\t    return tween;\n\t  }\n\t\n\t  function attrTween(name, value) {\n\t    function tween() {\n\t      var node = this, i = value.apply(node, arguments);\n\t      return i && function(t) {\n\t        node.setAttribute(name, i(t));\n\t      };\n\t    }\n\t    tween._value = value;\n\t    return tween;\n\t  }\n\t\n\t  function transition_attrTween(name, value) {\n\t    var key = \"attr.\" + name;\n\t    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t    if (value == null) return this.tween(key, null);\n\t    if (typeof value !== \"function\") throw new Error;\n\t    var fullname = namespace(name);\n\t    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n\t  }\n\t\n\t  function delayFunction(id, value) {\n\t    return function() {\n\t      init(this, id).delay = +value.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  function delayConstant(id, value) {\n\t    return value = +value, function() {\n\t      init(this, id).delay = value;\n\t    };\n\t  }\n\t\n\t  function transition_delay(value) {\n\t    var id = this._id;\n\t\n\t    return arguments.length\n\t        ? this.each((typeof value === \"function\"\n\t            ? delayFunction\n\t            : delayConstant)(id, value))\n\t        : get$1(this.node(), id).delay;\n\t  }\n\t\n\t  function durationFunction(id, value) {\n\t    return function() {\n\t      set$2(this, id).duration = +value.apply(this, arguments);\n\t    };\n\t  }\n\t\n\t  function durationConstant(id, value) {\n\t    return value = +value, function() {\n\t      set$2(this, id).duration = value;\n\t    };\n\t  }\n\t\n\t  function transition_duration(value) {\n\t    var id = this._id;\n\t\n\t    return arguments.length\n\t        ? this.each((typeof value === \"function\"\n\t            ? durationFunction\n\t            : durationConstant)(id, value))\n\t        : get$1(this.node(), id).duration;\n\t  }\n\t\n\t  function easeConstant(id, value) {\n\t    if (typeof value !== \"function\") throw new Error;\n\t    return function() {\n\t      set$2(this, id).ease = value;\n\t    };\n\t  }\n\t\n\t  function transition_ease(value) {\n\t    var id = this._id;\n\t\n\t    return arguments.length\n\t        ? this.each(easeConstant(id, value))\n\t        : get$1(this.node(), id).ease;\n\t  }\n\t\n\t  function transition_filter(match) {\n\t    if (typeof match !== \"function\") match = matcher$1(match);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(subgroups, this._parents, this._name, this._id);\n\t  }\n\t\n\t  function transition_merge(transition) {\n\t    if (transition._id !== this._id) throw new Error;\n\t\n\t    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n\t      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n\t        if (node = group0[i] || group1[i]) {\n\t          merge[i] = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (; j < m0; ++j) {\n\t      merges[j] = groups0[j];\n\t    }\n\t\n\t    return new Transition(merges, this._parents, this._name, this._id);\n\t  }\n\t\n\t  function start$1(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n\t      var i = t.indexOf(\".\");\n\t      if (i >= 0) t = t.slice(0, i);\n\t      return !t || t === \"start\";\n\t    });\n\t  }\n\t\n\t  function onFunction(id, name, listener) {\n\t    var on0, on1, sit = start$1(name) ? init : set$2;\n\t    return function() {\n\t      var schedule = sit(this, id),\n\t          on = schedule.on;\n\t\n\t      // If this node shared a dispatch with the previous node,\n\t      // just assign the updated shared dispatch and we’re done!\n\t      // Otherwise, copy-on-write.\n\t      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\t\n\t      schedule.on = on1;\n\t    };\n\t  }\n\t\n\t  function transition_on(name, listener) {\n\t    var id = this._id;\n\t\n\t    return arguments.length < 2\n\t        ? get$1(this.node(), id).on.on(name)\n\t        : this.each(onFunction(id, name, listener));\n\t  }\n\t\n\t  function removeFunction(id) {\n\t    return function() {\n\t      var parent = this.parentNode;\n\t      for (var i in this.__transition) if (+i !== id) return;\n\t      if (parent) parent.removeChild(this);\n\t    };\n\t  }\n\t\n\t  function transition_remove() {\n\t    return this.on(\"end.remove\", removeFunction(this._id));\n\t  }\n\t\n\t  function transition_select(select) {\n\t    var name = this._name,\n\t        id = this._id;\n\t\n\t    if (typeof select !== \"function\") select = selector(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n\t        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          subgroup[i] = subnode;\n\t          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(subgroups, this._parents, name, id);\n\t  }\n\t\n\t  function transition_selectAll(select) {\n\t    var name = this._name,\n\t        id = this._id;\n\t\n\t    if (typeof select !== \"function\") select = selectorAll(select);\n\t\n\t    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n\t            if (child = children[k]) {\n\t              schedule(child, name, id, k, children, inherit);\n\t            }\n\t          }\n\t          subgroups.push(children);\n\t          parents.push(node);\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(subgroups, parents, name, id);\n\t  }\n\t\n\t  var Selection$1 = selection.prototype.constructor;\n\t\n\t  function transition_selection() {\n\t    return new Selection$1(this._groups, this._parents);\n\t  }\n\t\n\t  function styleRemove$1(name, interpolate) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var style = window(this).getComputedStyle(this, null),\n\t          value0 = style.getPropertyValue(name),\n\t          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function styleRemoveEnd(name) {\n\t    return function() {\n\t      this.style.removeProperty(name);\n\t    };\n\t  }\n\t\n\t  function styleConstant$1(name, interpolate, value1) {\n\t    var value00,\n\t        interpolate0;\n\t    return function() {\n\t      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n\t      return value0 === value1 ? null\n\t          : value0 === value00 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value1);\n\t    };\n\t  }\n\t\n\t  function styleFunction$1(name, interpolate, value) {\n\t    var value00,\n\t        value10,\n\t        interpolate0;\n\t    return function() {\n\t      var style = window(this).getComputedStyle(this, null),\n\t          value0 = style.getPropertyValue(name),\n\t          value1 = value(this);\n\t      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n\t      return value0 === value1 ? null\n\t          : value0 === value00 && value1 === value10 ? interpolate0\n\t          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n\t    };\n\t  }\n\t\n\t  function transition_style(name, value, priority) {\n\t    var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate$1;\n\t    return value == null ? this\n\t            .styleTween(name, styleRemove$1(name, i))\n\t            .on(\"end.style.\" + name, styleRemoveEnd(name))\n\t        : this.styleTween(name, typeof value === \"function\"\n\t            ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n\t            : styleConstant$1(name, i, value), priority);\n\t  }\n\t\n\t  function styleTween(name, value, priority) {\n\t    function tween() {\n\t      var node = this, i = value.apply(node, arguments);\n\t      return i && function(t) {\n\t        node.style.setProperty(name, i(t), priority);\n\t      };\n\t    }\n\t    tween._value = value;\n\t    return tween;\n\t  }\n\t\n\t  function transition_styleTween(name, value, priority) {\n\t    var key = \"style.\" + (name += \"\");\n\t    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n\t    if (value == null) return this.tween(key, null);\n\t    if (typeof value !== \"function\") throw new Error;\n\t    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n\t  }\n\t\n\t  function textConstant$1(value) {\n\t    return function() {\n\t      this.textContent = value;\n\t    };\n\t  }\n\t\n\t  function textFunction$1(value) {\n\t    return function() {\n\t      var value1 = value(this);\n\t      this.textContent = value1 == null ? \"\" : value1;\n\t    };\n\t  }\n\t\n\t  function transition_text(value) {\n\t    return this.tween(\"text\", typeof value === \"function\"\n\t        ? textFunction$1(tweenValue(this, \"text\", value))\n\t        : textConstant$1(value == null ? \"\" : value + \"\"));\n\t  }\n\t\n\t  function transition_transition() {\n\t    var name = this._name,\n\t        id0 = this._id,\n\t        id1 = newId();\n\t\n\t    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          var inherit = get$1(node, id0);\n\t          schedule(node, name, id1, i, group, {\n\t            time: inherit.time + inherit.delay + inherit.duration,\n\t            delay: 0,\n\t            duration: inherit.duration,\n\t            ease: inherit.ease\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(groups, this._parents, name, id1);\n\t  }\n\t\n\t  var id = 0;\n\t\n\t  function Transition(groups, parents, name, id) {\n\t    this._groups = groups;\n\t    this._parents = parents;\n\t    this._name = name;\n\t    this._id = id;\n\t  }\n\t\n\t  function transition(name) {\n\t    return selection().transition(name);\n\t  }\n\t\n\t  function newId() {\n\t    return ++id;\n\t  }\n\t\n\t  var selection_prototype = selection.prototype;\n\t\n\t  Transition.prototype = transition.prototype = {\n\t    constructor: Transition,\n\t    select: transition_select,\n\t    selectAll: transition_selectAll,\n\t    filter: transition_filter,\n\t    merge: transition_merge,\n\t    selection: transition_selection,\n\t    transition: transition_transition,\n\t    call: selection_prototype.call,\n\t    nodes: selection_prototype.nodes,\n\t    node: selection_prototype.node,\n\t    size: selection_prototype.size,\n\t    empty: selection_prototype.empty,\n\t    each: selection_prototype.each,\n\t    on: transition_on,\n\t    attr: transition_attr,\n\t    attrTween: transition_attrTween,\n\t    style: transition_style,\n\t    styleTween: transition_styleTween,\n\t    text: transition_text,\n\t    remove: transition_remove,\n\t    tween: transition_tween,\n\t    delay: transition_delay,\n\t    duration: transition_duration,\n\t    ease: transition_ease\n\t  };\n\t\n\t  var defaultTiming = {\n\t    time: null, // Set on use.\n\t    delay: 0,\n\t    duration: 250,\n\t    ease: easeCubicInOut\n\t  };\n\t\n\t  function inherit(node, id) {\n\t    var timing;\n\t    while (!(timing = node.__transition) || !(timing = timing[id])) {\n\t      if (!(node = node.parentNode)) {\n\t        return defaultTiming.time = now(), defaultTiming;\n\t      }\n\t    }\n\t    return timing;\n\t  }\n\t\n\t  function selection_transition(name) {\n\t    var id,\n\t        timing;\n\t\n\t    if (name instanceof Transition) {\n\t      id = name._id, name = name._name;\n\t    } else {\n\t      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n\t    }\n\t\n\t    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n\t      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n\t        if (node = group[i]) {\n\t          schedule(node, name, id, i, group, timing || inherit(node, id));\n\t        }\n\t      }\n\t    }\n\t\n\t    return new Transition(groups, this._parents, name, id);\n\t  }\n\t\n\t  selection.prototype.interrupt = selection_interrupt;\n\t  selection.prototype.transition = selection_transition;\n\t\n\t  var root$1 = [null];\n\t\n\t  function active(node, name) {\n\t    var schedules = node.__transition,\n\t        schedule,\n\t        i;\n\t\n\t    if (schedules) {\n\t      name = name == null ? null : name + \"\";\n\t      for (i in schedules) {\n\t        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n\t          return new Transition([[node]], root$1, name, +i);\n\t        }\n\t      }\n\t    }\n\t\n\t    return null;\n\t  }\n\t\n\t  var slice$4 = Array.prototype.slice;\n\t\n\t  function identity$5(x) {\n\t    return x;\n\t  }\n\t\n\t  var top = 1;\n\t  var right = 2;\n\t  var bottom = 3;\n\t  var left = 4;\n\tvar   epsilon$2 = 1e-6;\n\t  function translateX(scale0, scale1, d) {\n\t    var x = scale0(d);\n\t    return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n\t  }\n\t\n\t  function translateY(scale0, scale1, d) {\n\t    var y = scale0(d);\n\t    return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n\t  }\n\t\n\t  function center(scale) {\n\t    var offset = scale.bandwidth() / 2;\n\t    if (scale.round()) offset = Math.round(offset);\n\t    return function(d) {\n\t      return scale(d) + offset;\n\t    };\n\t  }\n\t\n\t  function entering() {\n\t    return !this.__axis;\n\t  }\n\t\n\t  function axis(orient, scale) {\n\t    var tickArguments = [],\n\t        tickValues = null,\n\t        tickFormat = null,\n\t        tickSizeInner = 6,\n\t        tickSizeOuter = 6,\n\t        tickPadding = 3;\n\t\n\t    function axis(context) {\n\t      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n\t          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n\t          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n\t          transform = orient === top || orient === bottom ? translateX : translateY,\n\t          range = scale.range(),\n\t          range0 = range[0] + 0.5,\n\t          range1 = range[range.length - 1] + 0.5,\n\t          position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n\t          selection = context.selection ? context.selection() : context,\n\t          path = selection.selectAll(\".domain\").data([null]),\n\t          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n\t          tickExit = tick.exit(),\n\t          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n\t          line = tick.select(\"line\"),\n\t          text = tick.select(\"text\"),\n\t          k = orient === top || orient === left ? -1 : 1,\n\t          x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\t\n\t      path = path.merge(path.enter().insert(\"path\", \".tick\")\n\t          .attr(\"class\", \"domain\")\n\t          .attr(\"stroke\", \"#000\"));\n\t\n\t      tick = tick.merge(tickEnter);\n\t\n\t      line = line.merge(tickEnter.append(\"line\")\n\t          .attr(\"stroke\", \"#000\")\n\t          .attr(x + \"2\", k * tickSizeInner)\n\t          .attr(y + \"1\", 0.5)\n\t          .attr(y + \"2\", 0.5));\n\t\n\t      text = text.merge(tickEnter.append(\"text\")\n\t          .attr(\"fill\", \"#000\")\n\t          .attr(x, k * spacing)\n\t          .attr(y, 0.5)\n\t          .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\t\n\t      if (context !== selection) {\n\t        path = path.transition(context);\n\t        tick = tick.transition(context);\n\t        line = line.transition(context);\n\t        text = text.transition(context);\n\t\n\t        tickExit = tickExit.transition(context)\n\t            .attr(\"opacity\", epsilon$2)\n\t            .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\t\n\t        tickEnter\n\t            .attr(\"opacity\", epsilon$2)\n\t            .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n\t      }\n\t\n\t      tickExit.remove();\n\t\n\t      path\n\t          .attr(\"d\", orient === left || orient == right\n\t              ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n\t              : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\t\n\t      tick\n\t          .attr(\"opacity\", 1)\n\t          .attr(\"transform\", function(d) { return transform(position, position, d); });\n\t\n\t      line\n\t          .attr(x + \"2\", k * tickSizeInner);\n\t\n\t      text\n\t          .attr(x, k * spacing)\n\t          .text(format);\n\t\n\t      selection.filter(entering)\n\t          .attr(\"fill\", \"none\")\n\t          .attr(\"font-size\", 10)\n\t          .attr(\"font-family\", \"sans-serif\")\n\t          .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\t\n\t      selection\n\t          .each(function() { this.__axis = position; });\n\t    }\n\t\n\t    axis.scale = function(_) {\n\t      return arguments.length ? (scale = _, axis) : scale;\n\t    };\n\t\n\t    axis.ticks = function() {\n\t      return tickArguments = slice$4.call(arguments), axis;\n\t    };\n\t\n\t    axis.tickArguments = function(_) {\n\t      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n\t    };\n\t\n\t    axis.tickValues = function(_) {\n\t      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n\t    };\n\t\n\t    axis.tickFormat = function(_) {\n\t      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n\t    };\n\t\n\t    axis.tickSize = function(_) {\n\t      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n\t    };\n\t\n\t    axis.tickSizeInner = function(_) {\n\t      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n\t    };\n\t\n\t    axis.tickSizeOuter = function(_) {\n\t      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n\t    };\n\t\n\t    axis.tickPadding = function(_) {\n\t      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n\t    };\n\t\n\t    return axis;\n\t  }\n\t\n\t  function axisTop(scale) {\n\t    return axis(top, scale);\n\t  }\n\t\n\t  function axisRight(scale) {\n\t    return axis(right, scale);\n\t  }\n\t\n\t  function axisBottom(scale) {\n\t    return axis(bottom, scale);\n\t  }\n\t\n\t  function axisLeft(scale) {\n\t    return axis(left, scale);\n\t  }\n\t\n\t  function defaultSeparation(a, b) {\n\t    return a.parent === b.parent ? 1 : 2;\n\t  }\n\t\n\t  function meanX(children) {\n\t    return children.reduce(meanXReduce, 0) / children.length;\n\t  }\n\t\n\t  function meanXReduce(x, c) {\n\t    return x + c.x;\n\t  }\n\t\n\t  function maxY(children) {\n\t    return 1 + children.reduce(maxYReduce, 0);\n\t  }\n\t\n\t  function maxYReduce(y, c) {\n\t    return Math.max(y, c.y);\n\t  }\n\t\n\t  function leafLeft(node) {\n\t    var children;\n\t    while (children = node.children) node = children[0];\n\t    return node;\n\t  }\n\t\n\t  function leafRight(node) {\n\t    var children;\n\t    while (children = node.children) node = children[children.length - 1];\n\t    return node;\n\t  }\n\t\n\t  function cluster() {\n\t    var separation = defaultSeparation,\n\t        dx = 1,\n\t        dy = 1,\n\t        nodeSize = false;\n\t\n\t    function cluster(root) {\n\t      var previousNode,\n\t          x = 0;\n\t\n\t      // First walk, computing the initial x & y values.\n\t      root.eachAfter(function(node) {\n\t        var children = node.children;\n\t        if (children) {\n\t          node.x = meanX(children);\n\t          node.y = maxY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t\n\t      var left = leafLeft(root),\n\t          right = leafRight(root),\n\t          x0 = left.x - separation(left, right) / 2,\n\t          x1 = right.x + separation(right, left) / 2;\n\t\n\t      // Second walk, normalizing x & y to the desired size.\n\t      return root.eachAfter(nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * dx;\n\t        node.y = (root.y - node.y) * dy;\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * dx;\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n\t      });\n\t    }\n\t\n\t    cluster.separation = function(x) {\n\t      return arguments.length ? (separation = x, cluster) : separation;\n\t    };\n\t\n\t    cluster.size = function(x) {\n\t      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n\t    };\n\t\n\t    cluster.nodeSize = function(x) {\n\t      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n\t    };\n\t\n\t    return cluster;\n\t  }\n\t\n\t  function node_each(callback) {\n\t    var node = this, current, next = [node], children, i, n;\n\t    do {\n\t      current = next.reverse(), next = [];\n\t      while (node = current.pop()) {\n\t        callback(node), children = node.children;\n\t        if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t          next.push(children[i]);\n\t        }\n\t      }\n\t    } while (next.length);\n\t    return this;\n\t  }\n\t\n\t  function node_eachBefore(callback) {\n\t    var node = this, nodes = [node], children, i;\n\t    while (node = nodes.pop()) {\n\t      callback(node), children = node.children;\n\t      if (children) for (i = children.length - 1; i >= 0; --i) {\n\t        nodes.push(children[i]);\n\t      }\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function node_eachAfter(callback) {\n\t    var node = this, nodes = [node], next = [], children, i, n;\n\t    while (node = nodes.pop()) {\n\t      next.push(node), children = node.children;\n\t      if (children) for (i = 0, n = children.length; i < n; ++i) {\n\t        nodes.push(children[i]);\n\t      }\n\t    }\n\t    while (node = next.pop()) {\n\t      callback(node);\n\t    }\n\t    return this;\n\t  }\n\t\n\t  function node_sum(value) {\n\t    return this.eachAfter(function(node) {\n\t      var sum = +value(node.data) || 0,\n\t          children = node.children,\n\t          i = children && children.length;\n\t      while (--i >= 0) sum += children[i].value;\n\t      node.value = sum;\n\t    });\n\t  }\n\t\n\t  function node_sort(compare) {\n\t    return this.eachBefore(function(node) {\n\t      if (node.children) {\n\t        node.children.sort(compare);\n\t      }\n\t    });\n\t  }\n\t\n\t  function node_path(end) {\n\t    var start = this,\n\t        ancestor = leastCommonAncestor(start, end),\n\t        nodes = [start];\n\t    while (start !== ancestor) {\n\t      start = start.parent;\n\t      nodes.push(start);\n\t    }\n\t    var k = nodes.length;\n\t    while (end !== ancestor) {\n\t      nodes.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return nodes;\n\t  }\n\t\n\t  function leastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = a.ancestors(),\n\t        bNodes = b.ancestors(),\n\t        c = null;\n\t    a = aNodes.pop();\n\t    b = bNodes.pop();\n\t    while (a === b) {\n\t      c = a;\n\t      a = aNodes.pop();\n\t      b = bNodes.pop();\n\t    }\n\t    return c;\n\t  }\n\t\n\t  function node_ancestors() {\n\t    var node = this, nodes = [node];\n\t    while (node = node.parent) {\n\t      nodes.push(node);\n\t    }\n\t    return nodes;\n\t  }\n\t\n\t  function node_descendants() {\n\t    var nodes = [];\n\t    this.each(function(node) {\n\t      nodes.push(node);\n\t    });\n\t    return nodes;\n\t  }\n\t\n\t  function node_leaves() {\n\t    var leaves = [];\n\t    this.eachBefore(function(node) {\n\t      if (!node.children) {\n\t        leaves.push(node);\n\t      }\n\t    });\n\t    return leaves;\n\t  }\n\t\n\t  function node_links() {\n\t    var root = this, links = [];\n\t    root.each(function(node) {\n\t      if (node !== root) { // Don’t include the root’s parent, if any.\n\t        links.push({source: node.parent, target: node});\n\t      }\n\t    });\n\t    return links;\n\t  }\n\t\n\t  function hierarchy(data, children) {\n\t    var root = new Node(data),\n\t        valued = +data.value && (root.value = data.value),\n\t        node,\n\t        nodes = [root],\n\t        child,\n\t        childs,\n\t        i,\n\t        n;\n\t\n\t    if (children == null) children = defaultChildren;\n\t\n\t    while (node = nodes.pop()) {\n\t      if (valued) node.value = +node.data.value;\n\t      if ((childs = children(node.data)) && (n = childs.length)) {\n\t        node.children = new Array(n);\n\t        for (i = n - 1; i >= 0; --i) {\n\t          nodes.push(child = node.children[i] = new Node(childs[i]));\n\t          child.parent = node;\n\t          child.depth = node.depth + 1;\n\t        }\n\t      }\n\t    }\n\t\n\t    return root.eachBefore(computeHeight);\n\t  }\n\t\n\t  function node_copy() {\n\t    return hierarchy(this).eachBefore(copyData);\n\t  }\n\t\n\t  function defaultChildren(d) {\n\t    return d.children;\n\t  }\n\t\n\t  function copyData(node) {\n\t    node.data = node.data.data;\n\t  }\n\t\n\t  function computeHeight(node) {\n\t    var height = 0;\n\t    do node.height = height;\n\t    while ((node = node.parent) && (node.height < ++height));\n\t  }\n\t\n\t  function Node(data) {\n\t    this.data = data;\n\t    this.depth =\n\t    this.height = 0;\n\t    this.parent = null;\n\t  }\n\t\n\t  Node.prototype = hierarchy.prototype = {\n\t    constructor: Node,\n\t    each: node_each,\n\t    eachAfter: node_eachAfter,\n\t    eachBefore: node_eachBefore,\n\t    sum: node_sum,\n\t    sort: node_sort,\n\t    path: node_path,\n\t    ancestors: node_ancestors,\n\t    descendants: node_descendants,\n\t    leaves: node_leaves,\n\t    links: node_links,\n\t    copy: node_copy\n\t  };\n\t\n\t  function Node$2(value) {\n\t    this._ = value;\n\t    this.next = null;\n\t  }\n\t\n\t  function shuffle$1(array) {\n\t    var i,\n\t        n = (array = array.slice()).length,\n\t        head = null,\n\t        node = head;\n\t\n\t    while (n) {\n\t      var next = new Node$2(array[n - 1]);\n\t      if (node) node = node.next = next;\n\t      else node = head = next;\n\t      array[i] = array[--n];\n\t    }\n\t\n\t    return {\n\t      head: head,\n\t      tail: node\n\t    };\n\t  }\n\t\n\t  function enclose(circles) {\n\t    return encloseN(shuffle$1(circles), []);\n\t  }\n\t\n\t  function encloses(a, b) {\n\t    var dx = b.x - a.x,\n\t        dy = b.y - a.y,\n\t        dr = a.r - b.r;\n\t    return dr * dr + 1e-6 > dx * dx + dy * dy;\n\t  }\n\t\n\t  // Returns the smallest circle that contains circles L and intersects circles B.\n\t  function encloseN(L, B) {\n\t    var circle,\n\t        l0 = null,\n\t        l1 = L.head,\n\t        l2,\n\t        p1;\n\t\n\t    switch (B.length) {\n\t      case 1: circle = enclose1(B[0]); break;\n\t      case 2: circle = enclose2(B[0], B[1]); break;\n\t      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n\t    }\n\t\n\t    while (l1) {\n\t      p1 = l1._, l2 = l1.next;\n\t      if (!circle || !encloses(circle, p1)) {\n\t\n\t        // Temporarily truncate L before l1.\n\t        if (l0) L.tail = l0, l0.next = null;\n\t        else L.head = L.tail = null;\n\t\n\t        B.push(p1);\n\t        circle = encloseN(L, B); // Note: reorders L!\n\t        B.pop();\n\t\n\t        // Move l1 to the front of L and reconnect the truncated list L.\n\t        if (L.head) l1.next = L.head, L.head = l1;\n\t        else l1.next = null, L.head = L.tail = l1;\n\t        l0 = L.tail, l0.next = l2;\n\t\n\t      } else {\n\t        l0 = l1;\n\t      }\n\t      l1 = l2;\n\t    }\n\t\n\t    L.tail = l0;\n\t    return circle;\n\t  }\n\t\n\t  function enclose1(a) {\n\t    return {\n\t      x: a.x,\n\t      y: a.y,\n\t      r: a.r\n\t    };\n\t  }\n\t\n\t  function enclose2(a, b) {\n\t    var x1 = a.x, y1 = a.y, r1 = a.r,\n\t        x2 = b.x, y2 = b.y, r2 = b.r,\n\t        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n\t        l = Math.sqrt(x21 * x21 + y21 * y21);\n\t    return {\n\t      x: (x1 + x2 + x21 / l * r21) / 2,\n\t      y: (y1 + y2 + y21 / l * r21) / 2,\n\t      r: (l + r1 + r2) / 2\n\t    };\n\t  }\n\t\n\t  function enclose3(a, b, c) {\n\t    var x1 = a.x, y1 = a.y, r1 = a.r,\n\t        x2 = b.x, y2 = b.y, r2 = b.r,\n\t        x3 = c.x, y3 = c.y, r3 = c.r,\n\t        a2 = 2 * (x1 - x2),\n\t        b2 = 2 * (y1 - y2),\n\t        c2 = 2 * (r2 - r1),\n\t        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n\t        a3 = 2 * (x1 - x3),\n\t        b3 = 2 * (y1 - y3),\n\t        c3 = 2 * (r3 - r1),\n\t        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n\t        ab = a3 * b2 - a2 * b3,\n\t        xa = (b2 * d3 - b3 * d2) / ab - x1,\n\t        xb = (b3 * c2 - b2 * c3) / ab,\n\t        ya = (a3 * d2 - a2 * d3) / ab - y1,\n\t        yb = (a2 * c3 - a3 * c2) / ab,\n\t        A = xb * xb + yb * yb - 1,\n\t        B = 2 * (xa * xb + ya * yb + r1),\n\t        C = xa * xa + ya * ya - r1 * r1,\n\t        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n\t    return {\n\t      x: xa + xb * r + x1,\n\t      y: ya + yb * r + y1,\n\t      r: r\n\t    };\n\t  }\n\t\n\t  function place(a, b, c) {\n\t    var ax = a.x,\n\t        ay = a.y,\n\t        da = b.r + c.r,\n\t        db = a.r + c.r,\n\t        dx = b.x - ax,\n\t        dy = b.y - ay,\n\t        dc = dx * dx + dy * dy;\n\t    if (dc) {\n\t      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n\t          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = ax + x * dx + y * dy;\n\t      c.y = ay + x * dy - y * dx;\n\t    } else {\n\t      c.x = ax + db;\n\t      c.y = ay;\n\t    }\n\t  }\n\t\n\t  function intersects(a, b) {\n\t    var dx = b.x - a.x,\n\t        dy = b.y - a.y,\n\t        dr = a.r + b.r;\n\t    return dr * dr > dx * dx + dy * dy;\n\t  }\n\t\n\t  function distance2(circle, x, y) {\n\t    var dx = circle.x - x,\n\t        dy = circle.y - y;\n\t    return dx * dx + dy * dy;\n\t  }\n\t\n\t  function Node$1(circle) {\n\t    this._ = circle;\n\t    this.next = null;\n\t    this.previous = null;\n\t  }\n\t\n\t  function packEnclose(circles) {\n\t    if (!(n = circles.length)) return 0;\n\t\n\t    var a, b, c, n;\n\t\n\t    // Place the first circle.\n\t    a = circles[0], a.x = 0, a.y = 0;\n\t    if (!(n > 1)) return a.r;\n\t\n\t    // Place the second circle.\n\t    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n\t    if (!(n > 2)) return a.r + b.r;\n\t\n\t    // Place the third circle.\n\t    place(b, a, c = circles[2]);\n\t\n\t    // Initialize the weighted centroid.\n\t    var aa = a.r * a.r,\n\t        ba = b.r * b.r,\n\t        ca = c.r * c.r,\n\t        oa = aa + ba + ca,\n\t        ox = aa * a.x + ba * b.x + ca * c.x,\n\t        oy = aa * a.y + ba * b.y + ca * c.y,\n\t        cx, cy, i, j, k, sj, sk;\n\t\n\t    // Initialize the front-chain using the first three circles a, b and c.\n\t    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n\t    a.next = c.previous = b;\n\t    b.next = a.previous = c;\n\t    c.next = b.previous = a;\n\t\n\t    // Attempt to place each remaining circle…\n\t    pack: for (i = 3; i < n; ++i) {\n\t      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\t\n\t      // If there are only three elements in the front-chain…\n\t      if ((k = a.previous) === (j = b.next)) {\n\t        // If the new circle intersects the third circle,\n\t        // rotate the front chain to try the next position.\n\t        if (intersects(j._, c._)) {\n\t          a = b, b = j, --i;\n\t          continue pack;\n\t        }\n\t      }\n\t\n\t      // Find the closest intersecting circle on the front-chain, if any.\n\t      else {\n\t        sj = j._.r, sk = k._.r;\n\t        do {\n\t          if (sj <= sk) {\n\t            if (intersects(j._, c._)) {\n\t              b = j, a.next = b, b.previous = a, --i;\n\t              continue pack;\n\t            }\n\t            j = j.next, sj += j._.r;\n\t          } else {\n\t            if (intersects(k._, c._)) {\n\t              a = k, a.next = b, b.previous = a, --i;\n\t              continue pack;\n\t            }\n\t            k = k.previous, sk += k._.r;\n\t          }\n\t        } while (j !== k.next);\n\t      }\n\t\n\t      // Success! Insert the new circle c between a and b.\n\t      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\t\n\t      // Update the weighted centroid.\n\t      oa += ca = c._.r * c._.r;\n\t      ox += ca * c._.x;\n\t      oy += ca * c._.y;\n\t\n\t      // Compute the new closest circle a to centroid.\n\t      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n\t      while ((c = c.next) !== b) {\n\t        if ((ca = distance2(c._, cx, cy)) < aa) {\n\t          a = c, aa = ca;\n\t        }\n\t      }\n\t      b = a.next;\n\t    }\n\t\n\t    // Compute the enclosing circle of the front chain.\n\t    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\t\n\t    // Translate the circles to put the enclosing circle around the origin.\n\t    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\t\n\t    return c.r;\n\t  }\n\t\n\t  function siblings(circles) {\n\t    packEnclose(circles);\n\t    return circles;\n\t  }\n\t\n\t  function optional(f) {\n\t    return f == null ? null : required(f);\n\t  }\n\t\n\t  function required(f) {\n\t    if (typeof f !== \"function\") throw new Error;\n\t    return f;\n\t  }\n\t\n\t  function constantZero() {\n\t    return 0;\n\t  }\n\t\n\t  function constant$5(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function defaultRadius(d) {\n\t    return Math.sqrt(d.value);\n\t  }\n\t\n\t  function index() {\n\t    var radius = null,\n\t        dx = 1,\n\t        dy = 1,\n\t        padding = constantZero;\n\t\n\t    function pack(root) {\n\t      root.x = dx / 2, root.y = dy / 2;\n\t      if (radius) {\n\t        root.eachBefore(radiusLeaf(radius))\n\t            .eachAfter(packChildren(padding, 0.5))\n\t            .eachBefore(translateChild(1));\n\t      } else {\n\t        root.eachBefore(radiusLeaf(defaultRadius))\n\t            .eachAfter(packChildren(constantZero, 1))\n\t            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n\t            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n\t      }\n\t      return root;\n\t    }\n\t\n\t    pack.radius = function(x) {\n\t      return arguments.length ? (radius = optional(x), pack) : radius;\n\t    };\n\t\n\t    pack.size = function(x) {\n\t      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n\t    };\n\t\n\t    pack.padding = function(x) {\n\t      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$5(+x), pack) : padding;\n\t    };\n\t\n\t    return pack;\n\t  }\n\t\n\t  function radiusLeaf(radius) {\n\t    return function(node) {\n\t      if (!node.children) {\n\t        node.r = Math.max(0, +radius(node) || 0);\n\t      }\n\t    };\n\t  }\n\t\n\t  function packChildren(padding, k) {\n\t    return function(node) {\n\t      if (children = node.children) {\n\t        var children,\n\t            i,\n\t            n = children.length,\n\t            r = padding(node) * k || 0,\n\t            e;\n\t\n\t        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n\t        e = packEnclose(children);\n\t        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n\t        node.r = e + r;\n\t      }\n\t    };\n\t  }\n\t\n\t  function translateChild(k) {\n\t    return function(node) {\n\t      var parent = node.parent;\n\t      node.r *= k;\n\t      if (parent) {\n\t        node.x = parent.x + k * node.x;\n\t        node.y = parent.y + k * node.y;\n\t      }\n\t    };\n\t  }\n\t\n\t  function roundNode(node) {\n\t    node.x0 = Math.round(node.x0);\n\t    node.y0 = Math.round(node.y0);\n\t    node.x1 = Math.round(node.x1);\n\t    node.y1 = Math.round(node.y1);\n\t  }\n\t\n\t  function treemapDice(parent, x0, y0, x1, y1) {\n\t    var nodes = parent.children,\n\t        node,\n\t        i = -1,\n\t        n = nodes.length,\n\t        k = parent.value && (x1 - x0) / parent.value;\n\t\n\t    while (++i < n) {\n\t      node = nodes[i], node.y0 = y0, node.y1 = y1;\n\t      node.x0 = x0, node.x1 = x0 += node.value * k;\n\t    }\n\t  }\n\t\n\t  function partition() {\n\t    var dx = 1,\n\t        dy = 1,\n\t        padding = 0,\n\t        round = false;\n\t\n\t    function partition(root) {\n\t      var n = root.height + 1;\n\t      root.x0 =\n\t      root.y0 = padding;\n\t      root.x1 = dx;\n\t      root.y1 = dy / n;\n\t      root.eachBefore(positionNode(dy, n));\n\t      if (round) root.eachBefore(roundNode);\n\t      return root;\n\t    }\n\t\n\t    function positionNode(dy, n) {\n\t      return function(node) {\n\t        if (node.children) {\n\t          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n\t        }\n\t        var x0 = node.x0,\n\t            y0 = node.y0,\n\t            x1 = node.x1 - padding,\n\t            y1 = node.y1 - padding;\n\t        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t        node.x0 = x0;\n\t        node.y0 = y0;\n\t        node.x1 = x1;\n\t        node.y1 = y1;\n\t      };\n\t    }\n\t\n\t    partition.round = function(x) {\n\t      return arguments.length ? (round = !!x, partition) : round;\n\t    };\n\t\n\t    partition.size = function(x) {\n\t      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n\t    };\n\t\n\t    partition.padding = function(x) {\n\t      return arguments.length ? (padding = +x, partition) : padding;\n\t    };\n\t\n\t    return partition;\n\t  }\n\t\n\tvar   keyPrefix$1 = \"$\";\n\t  var preroot = {depth: -1};\n\t  var ambiguous = {};\n\t  function defaultId(d) {\n\t    return d.id;\n\t  }\n\t\n\t  function defaultParentId(d) {\n\t    return d.parentId;\n\t  }\n\t\n\t  function stratify() {\n\t    var id = defaultId,\n\t        parentId = defaultParentId;\n\t\n\t    function stratify(data) {\n\t      var d,\n\t          i,\n\t          n = data.length,\n\t          root,\n\t          parent,\n\t          node,\n\t          nodes = new Array(n),\n\t          nodeId,\n\t          nodeKey,\n\t          nodeByKey = {};\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        d = data[i], node = nodes[i] = new Node(d);\n\t        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n\t          nodeKey = keyPrefix$1 + (node.id = nodeId);\n\t          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n\t        }\n\t      }\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i], nodeId = parentId(data[i], i, data);\n\t        if (nodeId == null || !(nodeId += \"\")) {\n\t          if (root) throw new Error(\"multiple roots\");\n\t          root = node;\n\t        } else {\n\t          parent = nodeByKey[keyPrefix$1 + nodeId];\n\t          if (!parent) throw new Error(\"missing: \" + nodeId);\n\t          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n\t          if (parent.children) parent.children.push(node);\n\t          else parent.children = [node];\n\t          node.parent = parent;\n\t        }\n\t      }\n\t\n\t      if (!root) throw new Error(\"no root\");\n\t      root.parent = preroot;\n\t      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n\t      root.parent = null;\n\t      if (n > 0) throw new Error(\"cycle\");\n\t\n\t      return root;\n\t    }\n\t\n\t    stratify.id = function(x) {\n\t      return arguments.length ? (id = required(x), stratify) : id;\n\t    };\n\t\n\t    stratify.parentId = function(x) {\n\t      return arguments.length ? (parentId = required(x), stratify) : parentId;\n\t    };\n\t\n\t    return stratify;\n\t  }\n\t\n\t  function defaultSeparation$1(a, b) {\n\t    return a.parent === b.parent ? 1 : 2;\n\t  }\n\t\n\t  // function radialSeparation(a, b) {\n\t  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n\t  // }\n\t\n\t  // This function is used to traverse the left contour of a subtree (or\n\t  // subforest). It returns the successor of v on this contour. This successor is\n\t  // either given by the leftmost child of v or by the thread of v. The function\n\t  // returns null if and only if v is on the highest level of its subtree.\n\t  function nextLeft(v) {\n\t    var children = v.children;\n\t    return children ? children[0] : v.t;\n\t  }\n\t\n\t  // This function works analogously to nextLeft.\n\t  function nextRight(v) {\n\t    var children = v.children;\n\t    return children ? children[children.length - 1] : v.t;\n\t  }\n\t\n\t  // Shifts the current subtree rooted at w+. This is done by increasing\n\t  // prelim(w+) and mod(w+) by shift.\n\t  function moveSubtree(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t\n\t  // All other shifts, applied to the smaller subtrees between w- and w+, are\n\t  // performed by this function. To prepare the shifts, we have to adjust\n\t  // change(w+), shift(w+), and change(w-).\n\t  function executeShifts(v) {\n\t    var shift = 0,\n\t        change = 0,\n\t        children = v.children,\n\t        i = children.length,\n\t        w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t\n\t  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n\t  // returns the specified (default) ancestor.\n\t  function nextAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t\n\t  function TreeNode(node, i) {\n\t    this._ = node;\n\t    this.parent = null;\n\t    this.children = null;\n\t    this.A = null; // default ancestor\n\t    this.a = this; // ancestor\n\t    this.z = 0; // prelim\n\t    this.m = 0; // mod\n\t    this.c = 0; // change\n\t    this.s = 0; // shift\n\t    this.t = null; // thread\n\t    this.i = i; // number\n\t  }\n\t\n\t  TreeNode.prototype = Object.create(Node.prototype);\n\t\n\t  function treeRoot(root) {\n\t    var tree = new TreeNode(root, 0),\n\t        node,\n\t        nodes = [tree],\n\t        child,\n\t        children,\n\t        i,\n\t        n;\n\t\n\t    while (node = nodes.pop()) {\n\t      if (children = node._.children) {\n\t        node.children = new Array(n = children.length);\n\t        for (i = n - 1; i >= 0; --i) {\n\t          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n\t          child.parent = node;\n\t        }\n\t      }\n\t    }\n\t\n\t    (tree.parent = new TreeNode(null, 0)).children = [tree];\n\t    return tree;\n\t  }\n\t\n\t  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n\t  function tree() {\n\t    var separation = defaultSeparation$1,\n\t        dx = 1,\n\t        dy = 1,\n\t        nodeSize = null;\n\t\n\t    function tree(root) {\n\t      var t = treeRoot(root);\n\t\n\t      // Compute the layout using Buchheim et al.’s algorithm.\n\t      t.eachAfter(firstWalk), t.parent.m = -t.z;\n\t      t.eachBefore(secondWalk);\n\t\n\t      // If a fixed node size is specified, scale x and y.\n\t      if (nodeSize) root.eachBefore(sizeNode);\n\t\n\t      // If a fixed tree size is specified, scale x and y based on the extent.\n\t      // Compute the left-most, right-most, and depth-most nodes for extents.\n\t      else {\n\t        var left = root,\n\t            right = root,\n\t            bottom = root;\n\t        root.eachBefore(function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var s = left === right ? 1 : separation(left, right) / 2,\n\t            tx = s - left.x,\n\t            kx = dx / (right.x + s + tx),\n\t            ky = dy / (bottom.depth || 1);\n\t        root.eachBefore(function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t\n\t      return root;\n\t    }\n\t\n\t    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n\t    // applied recursively to the children of v, as well as the function\n\t    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n\t    // node v is placed to the midpoint of its outermost children.\n\t    function firstWalk(v) {\n\t      var children = v.children,\n\t          siblings = v.parent.children,\n\t          w = v.i ? siblings[v.i - 1] : null;\n\t      if (children) {\n\t        executeShifts(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t\n\t    // Computes all real x-coordinates by summing up the modifiers recursively.\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t\n\t    // The core of the algorithm. Here, a new subtree is combined with the\n\t    // previous subtrees. Threads are used to traverse the inside and outside\n\t    // contours of the left and right subtree up to the highest common level. The\n\t    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n\t    // superscript o means outside and i means inside, the subscript - means left\n\t    // subtree and + means right subtree. For summing up the modifiers along the\n\t    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n\t    // nodes of the inside contours conflict, we compute the left one of the\n\t    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n\t    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n\t    // Finally, we add a new thread (if necessary).\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v,\n\t            vop = v,\n\t            vim = w,\n\t            vom = vip.parent.children[0],\n\t            sip = vip.m,\n\t            sop = vop.m,\n\t            sim = vim.m,\n\t            som = vom.m,\n\t            shift;\n\t        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n\t          vom = nextLeft(vom);\n\t          vop = nextRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !nextRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !nextLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t\n\t    function sizeNode(node) {\n\t      node.x *= dx;\n\t      node.y = node.depth * dy;\n\t    }\n\t\n\t    tree.separation = function(x) {\n\t      return arguments.length ? (separation = x, tree) : separation;\n\t    };\n\t\n\t    tree.size = function(x) {\n\t      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n\t    };\n\t\n\t    tree.nodeSize = function(x) {\n\t      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n\t    };\n\t\n\t    return tree;\n\t  }\n\t\n\t  function treemapSlice(parent, x0, y0, x1, y1) {\n\t    var nodes = parent.children,\n\t        node,\n\t        i = -1,\n\t        n = nodes.length,\n\t        k = parent.value && (y1 - y0) / parent.value;\n\t\n\t    while (++i < n) {\n\t      node = nodes[i], node.x0 = x0, node.x1 = x1;\n\t      node.y0 = y0, node.y1 = y0 += node.value * k;\n\t    }\n\t  }\n\t\n\t  var phi = (1 + Math.sqrt(5)) / 2;\n\t\n\t  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n\t    var rows = [],\n\t        nodes = parent.children,\n\t        row,\n\t        nodeValue,\n\t        i0 = 0,\n\t        i1,\n\t        n = nodes.length,\n\t        dx, dy,\n\t        value = parent.value,\n\t        sumValue,\n\t        minValue,\n\t        maxValue,\n\t        newRatio,\n\t        minRatio,\n\t        alpha,\n\t        beta;\n\t\n\t    while (i0 < n) {\n\t      dx = x1 - x0, dy = y1 - y0;\n\t      minValue = maxValue = sumValue = nodes[i0].value;\n\t      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n\t      beta = sumValue * sumValue * alpha;\n\t      minRatio = Math.max(maxValue / beta, beta / minValue);\n\t\n\t      // Keep adding nodes while the aspect ratio maintains or improves.\n\t      for (i1 = i0 + 1; i1 < n; ++i1) {\n\t        sumValue += nodeValue = nodes[i1].value;\n\t        if (nodeValue < minValue) minValue = nodeValue;\n\t        if (nodeValue > maxValue) maxValue = nodeValue;\n\t        beta = sumValue * sumValue * alpha;\n\t        newRatio = Math.max(maxValue / beta, beta / minValue);\n\t        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n\t        minRatio = newRatio;\n\t      }\n\t\n\t      // Position and record the row orientation.\n\t      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n\t      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n\t      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n\t      value -= sumValue, i0 = i1;\n\t    }\n\t\n\t    return rows;\n\t  }\n\t\n\t  var squarify = (function custom(ratio) {\n\t\n\t    function squarify(parent, x0, y0, x1, y1) {\n\t      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t    }\n\t\n\t    squarify.ratio = function(x) {\n\t      return custom((x = +x) > 1 ? x : 1);\n\t    };\n\t\n\t    return squarify;\n\t  })(phi);\n\t\n\t  function index$1() {\n\t    var tile = squarify,\n\t        round = false,\n\t        dx = 1,\n\t        dy = 1,\n\t        paddingStack = [0],\n\t        paddingInner = constantZero,\n\t        paddingTop = constantZero,\n\t        paddingRight = constantZero,\n\t        paddingBottom = constantZero,\n\t        paddingLeft = constantZero;\n\t\n\t    function treemap(root) {\n\t      root.x0 =\n\t      root.y0 = 0;\n\t      root.x1 = dx;\n\t      root.y1 = dy;\n\t      root.eachBefore(positionNode);\n\t      paddingStack = [0];\n\t      if (round) root.eachBefore(roundNode);\n\t      return root;\n\t    }\n\t\n\t    function positionNode(node) {\n\t      var p = paddingStack[node.depth],\n\t          x0 = node.x0 + p,\n\t          y0 = node.y0 + p,\n\t          x1 = node.x1 - p,\n\t          y1 = node.y1 - p;\n\t      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t      node.x0 = x0;\n\t      node.y0 = y0;\n\t      node.x1 = x1;\n\t      node.y1 = y1;\n\t      if (node.children) {\n\t        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n\t        x0 += paddingLeft(node) - p;\n\t        y0 += paddingTop(node) - p;\n\t        x1 -= paddingRight(node) - p;\n\t        y1 -= paddingBottom(node) - p;\n\t        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n\t        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n\t        tile(node, x0, y0, x1, y1);\n\t      }\n\t    }\n\t\n\t    treemap.round = function(x) {\n\t      return arguments.length ? (round = !!x, treemap) : round;\n\t    };\n\t\n\t    treemap.size = function(x) {\n\t      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n\t    };\n\t\n\t    treemap.tile = function(x) {\n\t      return arguments.length ? (tile = required(x), treemap) : tile;\n\t    };\n\t\n\t    treemap.padding = function(x) {\n\t      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n\t    };\n\t\n\t    treemap.paddingInner = function(x) {\n\t      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingInner;\n\t    };\n\t\n\t    treemap.paddingOuter = function(x) {\n\t      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n\t    };\n\t\n\t    treemap.paddingTop = function(x) {\n\t      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingTop;\n\t    };\n\t\n\t    treemap.paddingRight = function(x) {\n\t      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingRight;\n\t    };\n\t\n\t    treemap.paddingBottom = function(x) {\n\t      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingBottom;\n\t    };\n\t\n\t    treemap.paddingLeft = function(x) {\n\t      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingLeft;\n\t    };\n\t\n\t    return treemap;\n\t  }\n\t\n\t  function binary(parent, x0, y0, x1, y1) {\n\t    var nodes = parent.children,\n\t        i, n = nodes.length,\n\t        sum, sums = new Array(n + 1);\n\t\n\t    for (sums[0] = sum = i = 0; i < n; ++i) {\n\t      sums[i + 1] = sum += nodes[i].value;\n\t    }\n\t\n\t    partition(0, n, parent.value, x0, y0, x1, y1);\n\t\n\t    function partition(i, j, value, x0, y0, x1, y1) {\n\t      if (i >= j - 1) {\n\t        var node = nodes[i];\n\t        node.x0 = x0, node.y0 = y0;\n\t        node.x1 = x1, node.y1 = y1;\n\t        return;\n\t      }\n\t\n\t      var valueOffset = sums[i],\n\t          valueTarget = (value / 2) + valueOffset,\n\t          k = i + 1,\n\t          hi = j - 1;\n\t\n\t      while (k < hi) {\n\t        var mid = k + hi >>> 1;\n\t        if (sums[mid] < valueTarget) k = mid + 1;\n\t        else hi = mid;\n\t      }\n\t\n\t      var valueLeft = sums[k] - valueOffset,\n\t          valueRight = value - valueLeft;\n\t\n\t      if ((y1 - y0) > (x1 - x0)) {\n\t        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n\t        partition(i, k, valueLeft, x0, y0, x1, yk);\n\t        partition(k, j, valueRight, x0, yk, x1, y1);\n\t      } else {\n\t        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n\t        partition(i, k, valueLeft, x0, y0, xk, y1);\n\t        partition(k, j, valueRight, xk, y0, x1, y1);\n\t      }\n\t    }\n\t  }\n\t\n\t  function sliceDice(parent, x0, y0, x1, y1) {\n\t    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n\t  }\n\t\n\t  var resquarify = (function custom(ratio) {\n\t\n\t    function resquarify(parent, x0, y0, x1, y1) {\n\t      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n\t        var rows,\n\t            row,\n\t            nodes,\n\t            i,\n\t            j = -1,\n\t            n,\n\t            m = rows.length,\n\t            value = parent.value;\n\t\n\t        while (++j < m) {\n\t          row = rows[j], nodes = row.children;\n\t          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n\t          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n\t          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n\t          value -= row.value;\n\t        }\n\t      } else {\n\t        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n\t        rows.ratio = ratio;\n\t      }\n\t    }\n\t\n\t    resquarify.ratio = function(x) {\n\t      return custom((x = +x) > 1 ? x : 1);\n\t    };\n\t\n\t    return resquarify;\n\t  })(phi);\n\t\n\t  function center$1(x, y) {\n\t    var nodes;\n\t\n\t    if (x == null) x = 0;\n\t    if (y == null) y = 0;\n\t\n\t    function force() {\n\t      var i,\n\t          n = nodes.length,\n\t          node,\n\t          sx = 0,\n\t          sy = 0;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i], sx += node.x, sy += node.y;\n\t      }\n\t\n\t      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n\t        node = nodes[i], node.x -= sx, node.y -= sy;\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t    };\n\t\n\t    force.x = function(_) {\n\t      return arguments.length ? (x = +_, force) : x;\n\t    };\n\t\n\t    force.y = function(_) {\n\t      return arguments.length ? (y = +_, force) : y;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function constant$6(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function jiggle() {\n\t    return (Math.random() - 0.5) * 1e-6;\n\t  }\n\t\n\t  function x$1(d) {\n\t    return d.x + d.vx;\n\t  }\n\t\n\t  function y$1(d) {\n\t    return d.y + d.vy;\n\t  }\n\t\n\t  function collide(radius) {\n\t    var nodes,\n\t        radii,\n\t        strength = 1,\n\t        iterations = 1;\n\t\n\t    if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\t\n\t    function force() {\n\t      var i, n = nodes.length,\n\t          tree,\n\t          node,\n\t          xi,\n\t          yi,\n\t          ri,\n\t          ri2;\n\t\n\t      for (var k = 0; k < iterations; ++k) {\n\t        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n\t        for (i = 0; i < n; ++i) {\n\t          node = nodes[i];\n\t          ri = radii[i], ri2 = ri * ri;\n\t          xi = node.x + node.vx;\n\t          yi = node.y + node.vy;\n\t          tree.visit(apply);\n\t        }\n\t      }\n\t\n\t      function apply(quad, x0, y0, x1, y1) {\n\t        var data = quad.data, rj = quad.r, r = ri + rj;\n\t        if (data) {\n\t          if (data.index > i) {\n\t            var x = xi - data.x - data.vx,\n\t                y = yi - data.y - data.vy,\n\t                l = x * x + y * y;\n\t            if (l < r * r) {\n\t              if (x === 0) x = jiggle(), l += x * x;\n\t              if (y === 0) y = jiggle(), l += y * y;\n\t              l = (r - (l = Math.sqrt(l))) / l * strength;\n\t              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n\t              node.vy += (y *= l) * r;\n\t              data.vx -= x * (r = 1 - r);\n\t              data.vy -= y * r;\n\t            }\n\t          }\n\t          return;\n\t        }\n\t        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n\t      }\n\t    }\n\t\n\t    function prepare(quad) {\n\t      if (quad.data) return quad.r = radii[quad.data.index];\n\t      for (var i = quad.r = 0; i < 4; ++i) {\n\t        if (quad[i] && quad[i].r > quad.r) {\n\t          quad.r = quad[i].r;\n\t        }\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      var i, n = (nodes = _).length; radii = new Array(n);\n\t      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n\t    };\n\t\n\t    force.iterations = function(_) {\n\t      return arguments.length ? (iterations = +_, force) : iterations;\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = +_, force) : strength;\n\t    };\n\t\n\t    force.radius = function(_) {\n\t      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), force) : radius;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function index$2(d, i) {\n\t    return i;\n\t  }\n\t\n\t  function link(links) {\n\t    var id = index$2,\n\t        strength = defaultStrength,\n\t        strengths,\n\t        distance = constant$6(30),\n\t        distances,\n\t        nodes,\n\t        count,\n\t        bias,\n\t        iterations = 1;\n\t\n\t    if (links == null) links = [];\n\t\n\t    function defaultStrength(link) {\n\t      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n\t    }\n\t\n\t    function force(alpha) {\n\t      for (var k = 0, n = links.length; k < iterations; ++k) {\n\t        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n\t          link = links[i], source = link.source, target = link.target;\n\t          x = target.x + target.vx - source.x - source.vx || jiggle();\n\t          y = target.y + target.vy - source.y - source.vy || jiggle();\n\t          l = Math.sqrt(x * x + y * y);\n\t          l = (l - distances[i]) / l * alpha * strengths[i];\n\t          x *= l, y *= l;\n\t          target.vx -= x * (b = bias[i]);\n\t          target.vy -= y * b;\n\t          source.vx += x * (b = 1 - b);\n\t          source.vy += y * b;\n\t        }\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t\n\t      var i,\n\t          n = nodes.length,\n\t          m = links.length,\n\t          nodeById = map$1(nodes, id),\n\t          link;\n\t\n\t      for (i = 0, count = new Array(n); i < n; ++i) {\n\t        count[i] = 0;\n\t      }\n\t\n\t      for (i = 0; i < m; ++i) {\n\t        link = links[i], link.index = i;\n\t        if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n\t        if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n\t        ++count[link.source.index], ++count[link.target.index];\n\t      }\n\t\n\t      for (i = 0, bias = new Array(m); i < m; ++i) {\n\t        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n\t      }\n\t\n\t      strengths = new Array(m), initializeStrength();\n\t      distances = new Array(m), initializeDistance();\n\t    }\n\t\n\t    function initializeStrength() {\n\t      if (!nodes) return;\n\t\n\t      for (var i = 0, n = links.length; i < n; ++i) {\n\t        strengths[i] = +strength(links[i], i, links);\n\t      }\n\t    }\n\t\n\t    function initializeDistance() {\n\t      if (!nodes) return;\n\t\n\t      for (var i = 0, n = links.length; i < n; ++i) {\n\t        distances[i] = +distance(links[i], i, links);\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.links = function(_) {\n\t      return arguments.length ? (links = _, initialize(), force) : links;\n\t    };\n\t\n\t    force.id = function(_) {\n\t      return arguments.length ? (id = _, force) : id;\n\t    };\n\t\n\t    force.iterations = function(_) {\n\t      return arguments.length ? (iterations = +_, force) : iterations;\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n\t    };\n\t\n\t    force.distance = function(_) {\n\t      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function x$2(d) {\n\t    return d.x;\n\t  }\n\t\n\t  function y$2(d) {\n\t    return d.y;\n\t  }\n\t\n\t  var initialRadius = 10;\n\t  var initialAngle = Math.PI * (3 - Math.sqrt(5));\n\t  function simulation(nodes) {\n\t    var simulation,\n\t        alpha = 1,\n\t        alphaMin = 0.001,\n\t        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n\t        alphaTarget = 0,\n\t        velocityDecay = 0.6,\n\t        forces = map$1(),\n\t        stepper = timer(step),\n\t        event = dispatch(\"tick\", \"end\");\n\t\n\t    if (nodes == null) nodes = [];\n\t\n\t    function step() {\n\t      tick();\n\t      event.call(\"tick\", simulation);\n\t      if (alpha < alphaMin) {\n\t        stepper.stop();\n\t        event.call(\"end\", simulation);\n\t      }\n\t    }\n\t\n\t    function tick() {\n\t      var i, n = nodes.length, node;\n\t\n\t      alpha += (alphaTarget - alpha) * alphaDecay;\n\t\n\t      forces.each(function(force) {\n\t        force(alpha);\n\t      });\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        node = nodes[i];\n\t        if (node.fx == null) node.x += node.vx *= velocityDecay;\n\t        else node.x = node.fx, node.vx = 0;\n\t        if (node.fy == null) node.y += node.vy *= velocityDecay;\n\t        else node.y = node.fy, node.vy = 0;\n\t      }\n\t    }\n\t\n\t    function initializeNodes() {\n\t      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t        node = nodes[i], node.index = i;\n\t        if (isNaN(node.x) || isNaN(node.y)) {\n\t          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n\t          node.x = radius * Math.cos(angle);\n\t          node.y = radius * Math.sin(angle);\n\t        }\n\t        if (isNaN(node.vx) || isNaN(node.vy)) {\n\t          node.vx = node.vy = 0;\n\t        }\n\t      }\n\t    }\n\t\n\t    function initializeForce(force) {\n\t      if (force.initialize) force.initialize(nodes);\n\t      return force;\n\t    }\n\t\n\t    initializeNodes();\n\t\n\t    return simulation = {\n\t      tick: tick,\n\t\n\t      restart: function() {\n\t        return stepper.restart(step), simulation;\n\t      },\n\t\n\t      stop: function() {\n\t        return stepper.stop(), simulation;\n\t      },\n\t\n\t      nodes: function(_) {\n\t        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n\t      },\n\t\n\t      alpha: function(_) {\n\t        return arguments.length ? (alpha = +_, simulation) : alpha;\n\t      },\n\t\n\t      alphaMin: function(_) {\n\t        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n\t      },\n\t\n\t      alphaDecay: function(_) {\n\t        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n\t      },\n\t\n\t      alphaTarget: function(_) {\n\t        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n\t      },\n\t\n\t      velocityDecay: function(_) {\n\t        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n\t      },\n\t\n\t      force: function(name, _) {\n\t        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n\t      },\n\t\n\t      find: function(x, y, radius) {\n\t        var i = 0,\n\t            n = nodes.length,\n\t            dx,\n\t            dy,\n\t            d2,\n\t            node,\n\t            closest;\n\t\n\t        if (radius == null) radius = Infinity;\n\t        else radius *= radius;\n\t\n\t        for (i = 0; i < n; ++i) {\n\t          node = nodes[i];\n\t          dx = x - node.x;\n\t          dy = y - node.y;\n\t          d2 = dx * dx + dy * dy;\n\t          if (d2 < radius) closest = node, radius = d2;\n\t        }\n\t\n\t        return closest;\n\t      },\n\t\n\t      on: function(name, _) {\n\t        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n\t      }\n\t    };\n\t  }\n\t\n\t  function manyBody() {\n\t    var nodes,\n\t        node,\n\t        alpha,\n\t        strength = constant$6(-30),\n\t        strengths,\n\t        distanceMin2 = 1,\n\t        distanceMax2 = Infinity,\n\t        theta2 = 0.81;\n\t\n\t    function force(_) {\n\t      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n\t      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t      var i, n = nodes.length;\n\t      strengths = new Array(n);\n\t      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n\t    }\n\t\n\t    function accumulate(quad) {\n\t      var strength = 0, q, c, x, y, i;\n\t\n\t      // For internal nodes, accumulate forces from child quadrants.\n\t      if (quad.length) {\n\t        for (x = y = i = 0; i < 4; ++i) {\n\t          if ((q = quad[i]) && (c = q.value)) {\n\t            strength += c, x += c * q.x, y += c * q.y;\n\t          }\n\t        }\n\t        quad.x = x / strength;\n\t        quad.y = y / strength;\n\t      }\n\t\n\t      // For leaf nodes, accumulate forces from coincident quadrants.\n\t      else {\n\t        q = quad;\n\t        q.x = q.data.x;\n\t        q.y = q.data.y;\n\t        do strength += strengths[q.data.index];\n\t        while (q = q.next);\n\t      }\n\t\n\t      quad.value = strength;\n\t    }\n\t\n\t    function apply(quad, x1, _, x2) {\n\t      if (!quad.value) return true;\n\t\n\t      var x = quad.x - node.x,\n\t          y = quad.y - node.y,\n\t          w = x2 - x1,\n\t          l = x * x + y * y;\n\t\n\t      // Apply the Barnes-Hut approximation if possible.\n\t      // Limit forces for very close nodes; randomize direction if coincident.\n\t      if (w * w / theta2 < l) {\n\t        if (l < distanceMax2) {\n\t          if (x === 0) x = jiggle(), l += x * x;\n\t          if (y === 0) y = jiggle(), l += y * y;\n\t          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t          node.vx += x * quad.value * alpha / l;\n\t          node.vy += y * quad.value * alpha / l;\n\t        }\n\t        return true;\n\t      }\n\t\n\t      // Otherwise, process points directly.\n\t      else if (quad.length || l >= distanceMax2) return;\n\t\n\t      // Limit forces for very close nodes; randomize direction if coincident.\n\t      if (quad.data !== node || quad.next) {\n\t        if (x === 0) x = jiggle(), l += x * x;\n\t        if (y === 0) y = jiggle(), l += y * y;\n\t        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n\t      }\n\t\n\t      do if (quad.data !== node) {\n\t        w = strengths[quad.data.index] * alpha / l;\n\t        node.vx += x * w;\n\t        node.vy += y * w;\n\t      } while (quad = quad.next);\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t    };\n\t\n\t    force.distanceMin = function(_) {\n\t      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n\t    };\n\t\n\t    force.distanceMax = function(_) {\n\t      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n\t    };\n\t\n\t    force.theta = function(_) {\n\t      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function x$3(x) {\n\t    var strength = constant$6(0.1),\n\t        nodes,\n\t        strengths,\n\t        xz;\n\t\n\t    if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\t\n\t    function force(alpha) {\n\t      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t      var i, n = nodes.length;\n\t      strengths = new Array(n);\n\t      xz = new Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t    };\n\t\n\t    force.x = function(_) {\n\t      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function y$3(y) {\n\t    var strength = constant$6(0.1),\n\t        nodes,\n\t        strengths,\n\t        yz;\n\t\n\t    if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\t\n\t    function force(alpha) {\n\t      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n\t        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      if (!nodes) return;\n\t      var i, n = nodes.length;\n\t      strengths = new Array(n);\n\t      yz = new Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n\t      }\n\t    }\n\t\n\t    force.initialize = function(_) {\n\t      nodes = _;\n\t      initialize();\n\t    };\n\t\n\t    force.strength = function(_) {\n\t      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n\t    };\n\t\n\t    force.y = function(_) {\n\t      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n\t    };\n\t\n\t    return force;\n\t  }\n\t\n\t  function nopropagation() {\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function noevent() {\n\t    exports.event.preventDefault();\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function dragDisable(view) {\n\t    var root = view.document.documentElement,\n\t        selection = select(view).on(\"dragstart.drag\", noevent, true);\n\t    if (\"onselectstart\" in root) {\n\t      selection.on(\"selectstart.drag\", noevent, true);\n\t    } else {\n\t      root.__noselect = root.style.MozUserSelect;\n\t      root.style.MozUserSelect = \"none\";\n\t    }\n\t  }\n\t\n\t  function dragEnable(view, noclick) {\n\t    var root = view.document.documentElement,\n\t        selection = select(view).on(\"dragstart.drag\", null);\n\t    if (noclick) {\n\t      selection.on(\"click.drag\", noevent, true);\n\t      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n\t    }\n\t    if (\"onselectstart\" in root) {\n\t      selection.on(\"selectstart.drag\", null);\n\t    } else {\n\t      root.style.MozUserSelect = root.__noselect;\n\t      delete root.__noselect;\n\t    }\n\t  }\n\t\n\t  function constant$7(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n\t    this.target = target;\n\t    this.type = type;\n\t    this.subject = subject;\n\t    this.identifier = id;\n\t    this.active = active;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.dx = dx;\n\t    this.dy = dy;\n\t    this._ = dispatch;\n\t  }\n\t\n\t  DragEvent.prototype.on = function() {\n\t    var value = this._.on.apply(this._, arguments);\n\t    return value === this._ ? this : value;\n\t  };\n\t\n\t  // Ignore right-click, since that should open the context menu.\n\t  function defaultFilter() {\n\t    return !exports.event.button;\n\t  }\n\t\n\t  function defaultContainer() {\n\t    return this.parentNode;\n\t  }\n\t\n\t  function defaultSubject(d) {\n\t    return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n\t  }\n\t\n\t  function drag() {\n\t    var filter = defaultFilter,\n\t        container = defaultContainer,\n\t        subject = defaultSubject,\n\t        gestures = {},\n\t        listeners = dispatch(\"start\", \"drag\", \"end\"),\n\t        active = 0,\n\t        mousemoving,\n\t        touchending;\n\t\n\t    function drag(selection) {\n\t      selection\n\t          .on(\"mousedown.drag\", mousedowned)\n\t          .on(\"touchstart.drag\", touchstarted)\n\t          .on(\"touchmove.drag\", touchmoved)\n\t          .on(\"touchend.drag touchcancel.drag\", touchended)\n\t          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n\t    }\n\t\n\t    function mousedowned() {\n\t      if (touchending || !filter.apply(this, arguments)) return;\n\t      var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n\t      if (!gesture) return;\n\t      select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n\t      dragDisable(exports.event.view);\n\t      nopropagation();\n\t      mousemoving = false;\n\t      gesture(\"start\");\n\t    }\n\t\n\t    function mousemoved() {\n\t      noevent();\n\t      mousemoving = true;\n\t      gestures.mouse(\"drag\");\n\t    }\n\t\n\t    function mouseupped() {\n\t      select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n\t      dragEnable(exports.event.view, mousemoving);\n\t      noevent();\n\t      gestures.mouse(\"end\");\n\t    }\n\t\n\t    function touchstarted() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var touches = exports.event.changedTouches,\n\t          c = container.apply(this, arguments),\n\t          n = touches.length, i, gesture;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n\t          nopropagation();\n\t          gesture(\"start\");\n\t        }\n\t      }\n\t    }\n\t\n\t    function touchmoved() {\n\t      var touches = exports.event.changedTouches,\n\t          n = touches.length, i, gesture;\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (gesture = gestures[touches[i].identifier]) {\n\t          noevent();\n\t          gesture(\"drag\");\n\t        }\n\t      }\n\t    }\n\t\n\t    function touchended() {\n\t      var touches = exports.event.changedTouches,\n\t          n = touches.length, i, gesture;\n\t\n\t      if (touchending) clearTimeout(touchending);\n\t      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t      for (i = 0; i < n; ++i) {\n\t        if (gesture = gestures[touches[i].identifier]) {\n\t          nopropagation();\n\t          gesture(\"end\");\n\t        }\n\t      }\n\t    }\n\t\n\t    function beforestart(id, container, point, that, args) {\n\t      var p = point(container, id), s, dx, dy,\n\t          sublisteners = listeners.copy();\n\t\n\t      if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n\t        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n\t        dx = s.x - p[0] || 0;\n\t        dy = s.y - p[1] || 0;\n\t        return true;\n\t      })) return;\n\t\n\t      return function gesture(type) {\n\t        var p0 = p, n;\n\t        switch (type) {\n\t          case \"start\": gestures[id] = gesture, n = active++; break;\n\t          case \"end\": delete gestures[id], --active; // nobreak\n\t          case \"drag\": p = point(container, id), n = active; break;\n\t        }\n\t        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n\t      };\n\t    }\n\t\n\t    drag.filter = function(_) {\n\t      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), drag) : filter;\n\t    };\n\t\n\t    drag.container = function(_) {\n\t      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$7(_), drag) : container;\n\t    };\n\t\n\t    drag.subject = function(_) {\n\t      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$7(_), drag) : subject;\n\t    };\n\t\n\t    drag.on = function() {\n\t      var value = listeners.on.apply(listeners, arguments);\n\t      return value === listeners ? drag : value;\n\t    };\n\t\n\t    return drag;\n\t  }\n\t\n\t  function constant$8(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function x$4(d) {\n\t    return d[0];\n\t  }\n\t\n\t  function y$4(d) {\n\t    return d[1];\n\t  }\n\t\n\t  function RedBlackTree() {\n\t    this._ = null; // root node\n\t  }\n\t\n\t  function RedBlackNode(node) {\n\t    node.U = // parent node\n\t    node.C = // color - true for red, false for black\n\t    node.L = // left node\n\t    node.R = // right node\n\t    node.P = // previous node\n\t    node.N = null; // next node\n\t  }\n\t\n\t  RedBlackTree.prototype = {\n\t    constructor: RedBlackTree,\n\t\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = RedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              RedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            RedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              RedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            RedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t\n\t      var parent = node.U,\n\t          sibling,\n\t          left = node.L,\n\t          right = node.R,\n\t          next,\n\t          red;\n\t\n\t      if (!left) next = right;\n\t      else if (!right) next = left;\n\t      else next = RedBlackFirst(right);\n\t\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next;\n\t        else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) { node.C = false; return; }\n\t\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            RedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if ((sibling.L && sibling.L.C)\n\t              || (sibling.R && sibling.R.C)) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              RedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            RedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            RedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if ((sibling.L && sibling.L.C)\n\t            || (sibling.R && sibling.R.C)) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              RedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            RedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t\n\t  function RedBlackRotateLeft(tree, node) {\n\t    var p = node,\n\t        q = node.R,\n\t        parent = p.U;\n\t\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q;\n\t      else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t\n\t  function RedBlackRotateRight(tree, node) {\n\t    var p = node,\n\t        q = node.L,\n\t        parent = p.U;\n\t\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q;\n\t      else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t\n\t  function RedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t\n\t  function createEdge(left, right, v0, v1) {\n\t    var edge = [null, null],\n\t        index = edges.push(edge) - 1;\n\t    edge.left = left;\n\t    edge.right = right;\n\t    if (v0) setEdgeEnd(edge, left, right, v0);\n\t    if (v1) setEdgeEnd(edge, right, left, v1);\n\t    cells[left.index].halfedges.push(index);\n\t    cells[right.index].halfedges.push(index);\n\t    return edge;\n\t  }\n\t\n\t  function createBorderEdge(left, v0, v1) {\n\t    var edge = [v0, v1];\n\t    edge.left = left;\n\t    return edge;\n\t  }\n\t\n\t  function setEdgeEnd(edge, left, right, vertex) {\n\t    if (!edge[0] && !edge[1]) {\n\t      edge[0] = vertex;\n\t      edge.left = left;\n\t      edge.right = right;\n\t    } else if (edge.left === right) {\n\t      edge[1] = vertex;\n\t    } else {\n\t      edge[0] = vertex;\n\t    }\n\t  }\n\t\n\t  // Liang–Barsky line clipping.\n\t  function clipEdge(edge, x0, y0, x1, y1) {\n\t    var a = edge[0],\n\t        b = edge[1],\n\t        ax = a[0],\n\t        ay = a[1],\n\t        bx = b[0],\n\t        by = b[1],\n\t        t0 = 0,\n\t        t1 = 1,\n\t        dx = bx - ax,\n\t        dy = by - ay,\n\t        r;\n\t\n\t    r = x0 - ax;\n\t    if (!dx && r > 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dx > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = x1 - ax;\n\t    if (!dx && r < 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dx > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    r = y0 - ay;\n\t    if (!dy && r > 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dy > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = y1 - ay;\n\t    if (!dy && r < 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dy > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\t\n\t    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n\t    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n\t    return true;\n\t  }\n\t\n\t  function connectEdge(edge, x0, y0, x1, y1) {\n\t    var v1 = edge[1];\n\t    if (v1) return true;\n\t\n\t    var v0 = edge[0],\n\t        left = edge.left,\n\t        right = edge.right,\n\t        lx = left[0],\n\t        ly = left[1],\n\t        rx = right[0],\n\t        ry = right[1],\n\t        fx = (lx + rx) / 2,\n\t        fy = (ly + ry) / 2,\n\t        fm,\n\t        fb;\n\t\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!v0) v0 = [fx, y0];\n\t        else if (v0[1] >= y1) return;\n\t        v1 = [fx, y1];\n\t      } else {\n\t        if (!v0) v0 = [fx, y1];\n\t        else if (v0[1] < y0) return;\n\t        v1 = [fx, y0];\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!v0) v0 = [(y0 - fb) / fm, y0];\n\t          else if (v0[1] >= y1) return;\n\t          v1 = [(y1 - fb) / fm, y1];\n\t        } else {\n\t          if (!v0) v0 = [(y1 - fb) / fm, y1];\n\t          else if (v0[1] < y0) return;\n\t          v1 = [(y0 - fb) / fm, y0];\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!v0) v0 = [x0, fm * x0 + fb];\n\t          else if (v0[0] >= x1) return;\n\t          v1 = [x1, fm * x1 + fb];\n\t        } else {\n\t          if (!v0) v0 = [x1, fm * x1 + fb];\n\t          else if (v0[0] < x0) return;\n\t          v1 = [x0, fm * x0 + fb];\n\t        }\n\t      }\n\t    }\n\t\n\t    edge[0] = v0;\n\t    edge[1] = v1;\n\t    return true;\n\t  }\n\t\n\t  function clipEdges(x0, y0, x1, y1) {\n\t    var i = edges.length,\n\t        edge;\n\t\n\t    while (i--) {\n\t      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n\t          || !clipEdge(edge, x0, y0, x1, y1)\n\t          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n\t              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n\t        delete edges[i];\n\t      }\n\t    }\n\t  }\n\t\n\t  function createCell(site) {\n\t    return cells[site.index] = {\n\t      site: site,\n\t      halfedges: []\n\t    };\n\t  }\n\t\n\t  function cellHalfedgeAngle(cell, edge) {\n\t    var site = cell.site,\n\t        va = edge.left,\n\t        vb = edge.right;\n\t    if (site === vb) vb = va, va = site;\n\t    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n\t    if (site === va) va = edge[1], vb = edge[0];\n\t    else va = edge[0], vb = edge[1];\n\t    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n\t  }\n\t\n\t  function cellHalfedgeStart(cell, edge) {\n\t    return edge[+(edge.left !== cell.site)];\n\t  }\n\t\n\t  function cellHalfedgeEnd(cell, edge) {\n\t    return edge[+(edge.left === cell.site)];\n\t  }\n\t\n\t  function sortCellHalfedges() {\n\t    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n\t      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n\t        var index = new Array(m),\n\t            array = new Array(m);\n\t        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n\t        index.sort(function(i, j) { return array[j] - array[i]; });\n\t        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n\t        for (j = 0; j < m; ++j) halfedges[j] = array[j];\n\t      }\n\t    }\n\t  }\n\t\n\t  function clipCells(x0, y0, x1, y1) {\n\t    var nCells = cells.length,\n\t        iCell,\n\t        cell,\n\t        site,\n\t        iHalfedge,\n\t        halfedges,\n\t        nHalfedges,\n\t        start,\n\t        startX,\n\t        startY,\n\t        end,\n\t        endX,\n\t        endY,\n\t        cover = true;\n\t\n\t    for (iCell = 0; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        site = cell.site;\n\t        halfedges = cell.halfedges;\n\t        iHalfedge = halfedges.length;\n\t\n\t        // Remove any dangling clipped edges.\n\t        while (iHalfedge--) {\n\t          if (!edges[halfedges[iHalfedge]]) {\n\t            halfedges.splice(iHalfedge, 1);\n\t          }\n\t        }\n\t\n\t        // Insert any border edges as necessary.\n\t        iHalfedge = 0, nHalfedges = halfedges.length;\n\t        while (iHalfedge < nHalfedges) {\n\t          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n\t          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n\t          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n\t            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n\t                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n\t                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n\t                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n\t                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n\t                : null)) - 1);\n\t            ++nHalfedges;\n\t          }\n\t        }\n\t\n\t        if (nHalfedges) cover = false;\n\t      }\n\t    }\n\t\n\t    // If there weren’t any edges, have the closest site cover the extent.\n\t    // It doesn’t matter which corner of the extent we measure!\n\t    if (cover) {\n\t      var dx, dy, d2, dc = Infinity;\n\t\n\t      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n\t        if (cell = cells[iCell]) {\n\t          site = cell.site;\n\t          dx = site[0] - x0;\n\t          dy = site[1] - y0;\n\t          d2 = dx * dx + dy * dy;\n\t          if (d2 < dc) dc = d2, cover = cell;\n\t        }\n\t      }\n\t\n\t      if (cover) {\n\t        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n\t        cover.halfedges.push(\n\t          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n\t          edges.push(createBorderEdge(site, v01, v11)) - 1,\n\t          edges.push(createBorderEdge(site, v11, v10)) - 1,\n\t          edges.push(createBorderEdge(site, v10, v00)) - 1\n\t        );\n\t      }\n\t    }\n\t\n\t    // Lastly delete any cells with no edges; these were entirely clipped.\n\t    for (iCell = 0; iCell < nCells; ++iCell) {\n\t      if (cell = cells[iCell]) {\n\t        if (!cell.halfedges.length) {\n\t          delete cells[iCell];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  var circlePool = [];\n\t\n\t  var firstCircle;\n\t\n\t  function Circle() {\n\t    RedBlackNode(this);\n\t    this.x =\n\t    this.y =\n\t    this.arc =\n\t    this.site =\n\t    this.cy = null;\n\t  }\n\t\n\t  function attachCircle(arc) {\n\t    var lArc = arc.P,\n\t        rArc = arc.N;\n\t\n\t    if (!lArc || !rArc) return;\n\t\n\t    var lSite = lArc.site,\n\t        cSite = arc.site,\n\t        rSite = rArc.site;\n\t\n\t    if (lSite === rSite) return;\n\t\n\t    var bx = cSite[0],\n\t        by = cSite[1],\n\t        ax = lSite[0] - bx,\n\t        ay = lSite[1] - by,\n\t        cx = rSite[0] - bx,\n\t        cy = rSite[1] - by;\n\t\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -epsilon2$1) return;\n\t\n\t    var ha = ax * ax + ay * ay,\n\t        hc = cx * cx + cy * cy,\n\t        x = (cy * ha - ay * hc) / d,\n\t        y = (ax * hc - cx * ha) / d;\n\t\n\t    var circle = circlePool.pop() || new Circle;\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\t\n\t    arc.circle = circle;\n\t\n\t    var before = null,\n\t        node = circles._;\n\t\n\t    while (node) {\n\t      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n\t        if (node.L) node = node.L;\n\t        else { before = node.P; break; }\n\t      } else {\n\t        if (node.R) node = node.R;\n\t        else { before = node; break; }\n\t      }\n\t    }\n\t\n\t    circles.insert(before, circle);\n\t    if (!before) firstCircle = circle;\n\t  }\n\t\n\t  function detachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) firstCircle = circle.N;\n\t      circles.remove(circle);\n\t      circlePool.push(circle);\n\t      RedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t\n\t  var beachPool = [];\n\t\n\t  function Beach() {\n\t    RedBlackNode(this);\n\t    this.edge =\n\t    this.site =\n\t    this.circle = null;\n\t  }\n\t\n\t  function createBeach(site) {\n\t    var beach = beachPool.pop() || new Beach;\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t\n\t  function detachBeach(beach) {\n\t    detachCircle(beach);\n\t    beaches.remove(beach);\n\t    beachPool.push(beach);\n\t    RedBlackNode(beach);\n\t  }\n\t\n\t  function removeBeach(beach) {\n\t    var circle = beach.circle,\n\t        x = circle.x,\n\t        y = circle.cy,\n\t        vertex = [x, y],\n\t        previous = beach.P,\n\t        next = beach.N,\n\t        disappearing = [beach];\n\t\n\t    detachBeach(beach);\n\t\n\t    var lArc = previous;\n\t    while (lArc.circle\n\t        && Math.abs(x - lArc.circle.x) < epsilon$3\n\t        && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      detachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t\n\t    disappearing.unshift(lArc);\n\t    detachCircle(lArc);\n\t\n\t    var rArc = next;\n\t    while (rArc.circle\n\t        && Math.abs(x - rArc.circle.x) < epsilon$3\n\t        && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      detachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t\n\t    disappearing.push(rArc);\n\t    detachCircle(rArc);\n\t\n\t    var nArcs = disappearing.length,\n\t        iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\t\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t  }\n\t\n\t  function addBeach(site) {\n\t    var x = site[0],\n\t        directrix = site[1],\n\t        lArc,\n\t        rArc,\n\t        dxl,\n\t        dxr,\n\t        node = beaches._;\n\t\n\t    while (node) {\n\t      dxl = leftBreakPoint(node, directrix) - x;\n\t      if (dxl > epsilon$3) node = node.L; else {\n\t        dxr = x - rightBreakPoint(node, directrix);\n\t        if (dxr > epsilon$3) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -epsilon$3) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -epsilon$3) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t\n\t    createCell(site);\n\t    var newArc = createBeach(site);\n\t    beaches.insert(lArc, newArc);\n\t\n\t    if (!lArc && !rArc) return;\n\t\n\t    if (lArc === rArc) {\n\t      detachCircle(lArc);\n\t      rArc = createBeach(lArc.site);\n\t      beaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n\t      attachCircle(lArc);\n\t      attachCircle(rArc);\n\t      return;\n\t    }\n\t\n\t    if (!rArc) { // && lArc\n\t      newArc.edge = createEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t\n\t    // else lArc !== rArc\n\t    detachCircle(lArc);\n\t    detachCircle(rArc);\n\t\n\t    var lSite = lArc.site,\n\t        ax = lSite[0],\n\t        ay = lSite[1],\n\t        bx = site[0] - ax,\n\t        by = site[1] - ay,\n\t        rSite = rArc.site,\n\t        cx = rSite[0] - ax,\n\t        cy = rSite[1] - ay,\n\t        d = 2 * (bx * cy - by * cx),\n\t        hb = bx * bx + by * by,\n\t        hc = cx * cx + cy * cy,\n\t        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\t\n\t    setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = createEdge(lSite, site, null, vertex);\n\t    rArc.edge = createEdge(site, rSite, null, vertex);\n\t    attachCircle(lArc);\n\t    attachCircle(rArc);\n\t  }\n\t\n\t  function leftBreakPoint(arc, directrix) {\n\t    var site = arc.site,\n\t        rfocx = site[0],\n\t        rfocy = site[1],\n\t        pby2 = rfocy - directrix;\n\t\n\t    if (!pby2) return rfocx;\n\t\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t\n\t    site = lArc.site;\n\t    var lfocx = site[0],\n\t        lfocy = site[1],\n\t        plby2 = lfocy - directrix;\n\t\n\t    if (!plby2) return lfocx;\n\t\n\t    var hl = lfocx - rfocx,\n\t        aby2 = 1 / pby2 - 1 / plby2,\n\t        b = hl / plby2;\n\t\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t\n\t  function rightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return leftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site[1] === directrix ? site[0] : Infinity;\n\t  }\n\t\n\t  var epsilon$3 = 1e-6;\n\t  var epsilon2$1 = 1e-12;\n\t  var beaches;\n\t  var cells;\n\t  var circles;\n\t  var edges;\n\t\n\t  function triangleArea(a, b, c) {\n\t    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n\t  }\n\t\n\t  function lexicographic(a, b) {\n\t    return b[1] - a[1]\n\t        || b[0] - a[0];\n\t  }\n\t\n\t  function Diagram(sites, extent) {\n\t    var site = sites.sort(lexicographic).pop(),\n\t        x,\n\t        y,\n\t        circle;\n\t\n\t    edges = [];\n\t    cells = new Array(sites.length);\n\t    beaches = new RedBlackTree;\n\t    circles = new RedBlackTree;\n\t\n\t    while (true) {\n\t      circle = firstCircle;\n\t      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n\t        if (site[0] !== x || site[1] !== y) {\n\t          addBeach(site);\n\t          x = site[0], y = site[1];\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        removeBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t\n\t    sortCellHalfedges();\n\t\n\t    if (extent) {\n\t      var x0 = +extent[0][0],\n\t          y0 = +extent[0][1],\n\t          x1 = +extent[1][0],\n\t          y1 = +extent[1][1];\n\t      clipEdges(x0, y0, x1, y1);\n\t      clipCells(x0, y0, x1, y1);\n\t    }\n\t\n\t    this.edges = edges;\n\t    this.cells = cells;\n\t\n\t    beaches =\n\t    circles =\n\t    edges =\n\t    cells = null;\n\t  }\n\t\n\t  Diagram.prototype = {\n\t    constructor: Diagram,\n\t\n\t    polygons: function() {\n\t      var edges = this.edges;\n\t\n\t      return this.cells.map(function(cell) {\n\t        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n\t        polygon.data = cell.site.data;\n\t        return polygon;\n\t      });\n\t    },\n\t\n\t    triangles: function() {\n\t      var triangles = [],\n\t          edges = this.edges;\n\t\n\t      this.cells.forEach(function(cell, i) {\n\t        var site = cell.site,\n\t            halfedges = cell.halfedges,\n\t            j = -1,\n\t            m = halfedges.length,\n\t            s0,\n\t            e1 = edges[halfedges[m - 1]],\n\t            s1 = e1.left === site ? e1.right : e1.left;\n\t\n\t        while (++j < m) {\n\t          s0 = s1;\n\t          e1 = edges[halfedges[j]];\n\t          s1 = e1.left === site ? e1.right : e1.left;\n\t          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n\t            triangles.push([site.data, s0.data, s1.data]);\n\t          }\n\t        }\n\t      });\n\t\n\t      return triangles;\n\t    },\n\t\n\t    links: function() {\n\t      return this.edges.filter(function(edge) {\n\t        return edge.right;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: edge.left.data,\n\t          target: edge.right.data\n\t        };\n\t      });\n\t    }\n\t  }\n\t\n\t  function voronoi() {\n\t    var x = x$4,\n\t        y = y$4,\n\t        extent = null;\n\t\n\t    function voronoi(data) {\n\t      return new Diagram(data.map(function(d, i) {\n\t        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];\n\t        s.index = i;\n\t        s.data = d;\n\t        return s;\n\t      }), extent);\n\t    }\n\t\n\t    voronoi.polygons = function(data) {\n\t      return voronoi(data).polygons();\n\t    };\n\t\n\t    voronoi.links = function(data) {\n\t      return voronoi(data).links();\n\t    };\n\t\n\t    voronoi.triangles = function(data) {\n\t      return voronoi(data).triangles();\n\t    };\n\t\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : x;\n\t    };\n\t\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : y;\n\t    };\n\t\n\t    voronoi.extent = function(_) {\n\t      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n\t    };\n\t\n\t    voronoi.size = function(_) {\n\t      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n\t    };\n\t\n\t    return voronoi;\n\t  }\n\t\n\t  function constant$9(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function ZoomEvent(target, type, transform) {\n\t    this.target = target;\n\t    this.type = type;\n\t    this.transform = transform;\n\t  }\n\t\n\t  function Transform(k, x, y) {\n\t    this.k = k;\n\t    this.x = x;\n\t    this.y = y;\n\t  }\n\t\n\t  Transform.prototype = {\n\t    constructor: Transform,\n\t    scale: function(k) {\n\t      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n\t    },\n\t    translate: function(x, y) {\n\t      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n\t    },\n\t    apply: function(point) {\n\t      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n\t    },\n\t    applyX: function(x) {\n\t      return x * this.k + this.x;\n\t    },\n\t    applyY: function(y) {\n\t      return y * this.k + this.y;\n\t    },\n\t    invert: function(location) {\n\t      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n\t    },\n\t    invertX: function(x) {\n\t      return (x - this.x) / this.k;\n\t    },\n\t    invertY: function(y) {\n\t      return (y - this.y) / this.k;\n\t    },\n\t    rescaleX: function(x) {\n\t      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n\t    },\n\t    rescaleY: function(y) {\n\t      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n\t    },\n\t    toString: function() {\n\t      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n\t    }\n\t  };\n\t\n\t  var identity$6 = new Transform(1, 0, 0);\n\t\n\t  transform.prototype = Transform.prototype;\n\t\n\t  function transform(node) {\n\t    return node.__zoom || identity$6;\n\t  }\n\t\n\t  function nopropagation$1() {\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function noevent$1() {\n\t    exports.event.preventDefault();\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  // Ignore right-click, since that should open the context menu.\n\t  function defaultFilter$1() {\n\t    return !exports.event.button;\n\t  }\n\t\n\t  function defaultExtent() {\n\t    var e = this, w, h;\n\t    if (e instanceof SVGElement) {\n\t      e = e.ownerSVGElement || e;\n\t      w = e.width.baseVal.value;\n\t      h = e.height.baseVal.value;\n\t    } else {\n\t      w = e.clientWidth;\n\t      h = e.clientHeight;\n\t    }\n\t    return [[0, 0], [w, h]];\n\t  }\n\t\n\t  function defaultTransform() {\n\t    return this.__zoom || identity$6;\n\t  }\n\t\n\t  function zoom() {\n\t    var filter = defaultFilter$1,\n\t        extent = defaultExtent,\n\t        k0 = 0,\n\t        k1 = Infinity,\n\t        x0 = -k1,\n\t        x1 = k1,\n\t        y0 = x0,\n\t        y1 = x1,\n\t        duration = 250,\n\t        gestures = [],\n\t        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n\t        touchstarting,\n\t        touchending,\n\t        touchDelay = 500,\n\t        wheelDelay = 150;\n\t\n\t    function zoom(selection) {\n\t      selection\n\t          .on(\"wheel.zoom\", wheeled)\n\t          .on(\"mousedown.zoom\", mousedowned)\n\t          .on(\"dblclick.zoom\", dblclicked)\n\t          .on(\"touchstart.zoom\", touchstarted)\n\t          .on(\"touchmove.zoom\", touchmoved)\n\t          .on(\"touchend.zoom touchcancel.zoom\", touchended)\n\t          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t          .property(\"__zoom\", defaultTransform);\n\t    }\n\t\n\t    zoom.transform = function(collection, transform) {\n\t      var selection = collection.selection ? collection.selection() : collection;\n\t      selection.property(\"__zoom\", defaultTransform);\n\t      if (collection !== selection) {\n\t        schedule(collection, transform);\n\t      } else {\n\t        selection.interrupt().each(function() {\n\t          gesture(this, arguments)\n\t              .start()\n\t              .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n\t              .end();\n\t        });\n\t      }\n\t    };\n\t\n\t    zoom.scaleBy = function(selection, k) {\n\t      zoom.scaleTo(selection, function() {\n\t        var k0 = this.__zoom.k,\n\t            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t        return k0 * k1;\n\t      });\n\t    };\n\t\n\t    zoom.scaleTo = function(selection, k) {\n\t      zoom.transform(selection, function() {\n\t        var e = extent.apply(this, arguments),\n\t            t0 = this.__zoom,\n\t            p0 = centroid(e),\n\t            p1 = t0.invert(p0),\n\t            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n\t        return constrain(translate(scale(t0, k1), p0, p1), e);\n\t      });\n\t    };\n\t\n\t    zoom.translateBy = function(selection, x, y) {\n\t      zoom.transform(selection, function() {\n\t        return constrain(this.__zoom.translate(\n\t          typeof x === \"function\" ? x.apply(this, arguments) : x,\n\t          typeof y === \"function\" ? y.apply(this, arguments) : y\n\t        ), extent.apply(this, arguments));\n\t      });\n\t    };\n\t\n\t    function scale(transform, k) {\n\t      k = Math.max(k0, Math.min(k1, k));\n\t      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n\t    }\n\t\n\t    function translate(transform, p0, p1) {\n\t      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n\t      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n\t    }\n\t\n\t    function constrain(transform, extent) {\n\t      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n\t          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n\t      return dx || dy ? transform.translate(dx, dy) : transform;\n\t    }\n\t\n\t    function centroid(extent) {\n\t      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n\t    }\n\t\n\t    function schedule(transition, transform, center) {\n\t      transition\n\t          .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n\t          .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n\t          .tween(\"zoom\", function() {\n\t            var that = this,\n\t                args = arguments,\n\t                g = gesture(that, args),\n\t                e = extent.apply(that, args),\n\t                p = center || centroid(e),\n\t                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n\t                a = that.__zoom,\n\t                b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n\t                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n\t            return function(t) {\n\t              if (t === 1) t = b; // Avoid rounding error on end.\n\t              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n\t              g.zoom(null, t);\n\t            };\n\t          });\n\t    }\n\t\n\t    function gesture(that, args) {\n\t      for (var i = 0, n = gestures.length, g; i < n; ++i) {\n\t        if ((g = gestures[i]).that === that) {\n\t          return g;\n\t        }\n\t      }\n\t      return new Gesture(that, args);\n\t    }\n\t\n\t    function Gesture(that, args) {\n\t      this.that = that;\n\t      this.args = args;\n\t      this.index = -1;\n\t      this.active = 0;\n\t      this.extent = extent.apply(that, args);\n\t    }\n\t\n\t    Gesture.prototype = {\n\t      start: function() {\n\t        if (++this.active === 1) {\n\t          this.index = gestures.push(this) - 1;\n\t          this.emit(\"start\");\n\t        }\n\t        return this;\n\t      },\n\t      zoom: function(key, transform) {\n\t        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n\t        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n\t        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n\t        this.that.__zoom = transform;\n\t        this.emit(\"zoom\");\n\t        return this;\n\t      },\n\t      end: function() {\n\t        if (--this.active === 0) {\n\t          gestures.splice(this.index, 1);\n\t          this.index = -1;\n\t          this.emit(\"end\");\n\t        }\n\t        return this;\n\t      },\n\t      emit: function(type) {\n\t        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n\t      }\n\t    };\n\t\n\t    function wheeled() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var g = gesture(this, arguments),\n\t          t = this.__zoom,\n\t          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n\t          p = mouse(this);\n\t\n\t      // If the mouse is in the same location as before, reuse it.\n\t      // If there were recent wheel events, reset the wheel idle timeout.\n\t      if (g.wheel) {\n\t        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n\t          g.mouse[1] = t.invert(g.mouse[0] = p);\n\t        }\n\t        clearTimeout(g.wheel);\n\t      }\n\t\n\t      // If this wheel event won’t trigger a transform change, ignore it.\n\t      else if (t.k === k) return;\n\t\n\t      // Otherwise, capture the mouse point and location at the start.\n\t      else {\n\t        g.mouse = [p, t.invert(p)];\n\t        interrupt(this);\n\t        g.start();\n\t      }\n\t\n\t      noevent$1();\n\t      g.wheel = setTimeout(wheelidled, wheelDelay);\n\t      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\t\n\t      function wheelidled() {\n\t        g.wheel = null;\n\t        g.end();\n\t      }\n\t    }\n\t\n\t    function mousedowned() {\n\t      if (touchending || !filter.apply(this, arguments)) return;\n\t      var g = gesture(this, arguments),\n\t          v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n\t          p = mouse(this);\n\t\n\t      dragDisable(exports.event.view);\n\t      nopropagation$1();\n\t      g.mouse = [p, this.__zoom.invert(p)];\n\t      interrupt(this);\n\t      g.start();\n\t\n\t      function mousemoved() {\n\t        noevent$1();\n\t        g.moved = true;\n\t        g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n\t      }\n\t\n\t      function mouseupped() {\n\t        v.on(\"mousemove.zoom mouseup.zoom\", null);\n\t        dragEnable(exports.event.view, g.moved);\n\t        noevent$1();\n\t        g.end();\n\t      }\n\t    }\n\t\n\t    function dblclicked() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var t0 = this.__zoom,\n\t          p0 = mouse(this),\n\t          p1 = t0.invert(p0),\n\t          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n\t          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\t\n\t      noevent$1();\n\t      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n\t      else select(this).call(zoom.transform, t1);\n\t    }\n\t\n\t    function touchstarted() {\n\t      if (!filter.apply(this, arguments)) return;\n\t      var g = gesture(this, arguments),\n\t          touches = exports.event.changedTouches,\n\t          n = touches.length, i, t, p;\n\t\n\t      nopropagation$1();\n\t      for (i = 0; i < n; ++i) {\n\t        t = touches[i], p = touch(this, touches, t.identifier);\n\t        p = [p, this.__zoom.invert(p), t.identifier];\n\t        if (!g.touch0) g.touch0 = p;\n\t        else if (!g.touch1) g.touch1 = p;\n\t      }\n\t      if (touchstarting) {\n\t        touchstarting = clearTimeout(touchstarting);\n\t        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n\t      }\n\t      if (exports.event.touches.length === n) {\n\t        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n\t        interrupt(this);\n\t        g.start();\n\t      }\n\t    }\n\t\n\t    function touchmoved() {\n\t      var g = gesture(this, arguments),\n\t          touches = exports.event.changedTouches,\n\t          n = touches.length, i, t, p, l;\n\t\n\t      noevent$1();\n\t      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\t      for (i = 0; i < n; ++i) {\n\t        t = touches[i], p = touch(this, touches, t.identifier);\n\t        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n\t        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n\t      }\n\t      t = g.that.__zoom;\n\t      if (g.touch1) {\n\t        var p0 = g.touch0[0], l0 = g.touch0[1],\n\t            p1 = g.touch1[0], l1 = g.touch1[1],\n\t            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n\t            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n\t        t = scale(t, Math.sqrt(dp / dl));\n\t        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n\t        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n\t      }\n\t      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n\t      else return;\n\t      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n\t    }\n\t\n\t    function touchended() {\n\t      var g = gesture(this, arguments),\n\t          touches = exports.event.changedTouches,\n\t          n = touches.length, i, t;\n\t\n\t      nopropagation$1();\n\t      if (touchending) clearTimeout(touchending);\n\t      touchending = setTimeout(function() { touchending = null; }, touchDelay);\n\t      for (i = 0; i < n; ++i) {\n\t        t = touches[i];\n\t        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n\t        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n\t      }\n\t      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n\t      if (!g.touch0) g.end();\n\t    }\n\t\n\t    zoom.filter = function(_) {\n\t      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), zoom) : filter;\n\t    };\n\t\n\t    zoom.extent = function(_) {\n\t      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n\t    };\n\t\n\t    zoom.scaleExtent = function(_) {\n\t      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n\t    };\n\t\n\t    zoom.translateExtent = function(_) {\n\t      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n\t    };\n\t\n\t    zoom.duration = function(_) {\n\t      return arguments.length ? (duration = +_, zoom) : duration;\n\t    };\n\t\n\t    zoom.on = function() {\n\t      var value = listeners.on.apply(listeners, arguments);\n\t      return value === listeners ? zoom : value;\n\t    };\n\t\n\t    return zoom;\n\t  }\n\t\n\t  function constant$10(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function BrushEvent(target, type, selection) {\n\t    this.target = target;\n\t    this.type = type;\n\t    this.selection = selection;\n\t  }\n\t\n\t  function nopropagation$2() {\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  function noevent$2() {\n\t    exports.event.preventDefault();\n\t    exports.event.stopImmediatePropagation();\n\t  }\n\t\n\t  var MODE_DRAG = {name: \"drag\"};\n\t  var MODE_SPACE = {name: \"space\"};\n\t  var MODE_HANDLE = {name: \"handle\"};\n\t  var MODE_CENTER = {name: \"center\"};\n\t  var X = {\n\t    name: \"x\",\n\t    handles: [\"e\", \"w\"].map(type$1),\n\t    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n\t    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n\t  };\n\t\n\t  var Y = {\n\t    name: \"y\",\n\t    handles: [\"n\", \"s\"].map(type$1),\n\t    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n\t    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n\t  };\n\t\n\t  var XY = {\n\t    name: \"xy\",\n\t    handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n\t    input: function(xy) { return xy; },\n\t    output: function(xy) { return xy; }\n\t  };\n\t\n\t  var cursors = {\n\t    overlay: \"crosshair\",\n\t    selection: \"move\",\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t\n\t  var flipX = {\n\t    e: \"w\",\n\t    w: \"e\",\n\t    nw: \"ne\",\n\t    ne: \"nw\",\n\t    se: \"sw\",\n\t    sw: \"se\"\n\t  };\n\t\n\t  var flipY = {\n\t    n: \"s\",\n\t    s: \"n\",\n\t    nw: \"sw\",\n\t    ne: \"se\",\n\t    se: \"ne\",\n\t    sw: \"nw\"\n\t  };\n\t\n\t  var signsX = {\n\t    overlay: +1,\n\t    selection: +1,\n\t    n: null,\n\t    e: +1,\n\t    s: null,\n\t    w: -1,\n\t    nw: -1,\n\t    ne: +1,\n\t    se: +1,\n\t    sw: -1\n\t  };\n\t\n\t  var signsY = {\n\t    overlay: +1,\n\t    selection: +1,\n\t    n: -1,\n\t    e: null,\n\t    s: +1,\n\t    w: null,\n\t    nw: -1,\n\t    ne: -1,\n\t    se: +1,\n\t    sw: +1\n\t  };\n\t\n\t  function type$1(t) {\n\t    return {type: t};\n\t  }\n\t\n\t  // Ignore right-click, since that should open the context menu.\n\t  function defaultFilter$2() {\n\t    return !exports.event.button;\n\t  }\n\t\n\t  function defaultExtent$1() {\n\t    var svg = this.ownerSVGElement || this;\n\t    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n\t  }\n\t\n\t  // Like d3.local, but with the name “__brush” rather than auto-generated.\n\t  function local$1(node) {\n\t    while (!node.__brush) if (!(node = node.parentNode)) return;\n\t    return node.__brush;\n\t  }\n\t\n\t  function empty$1(extent) {\n\t    return extent[0][0] === extent[1][0]\n\t        || extent[0][1] === extent[1][1];\n\t  }\n\t\n\t  function brushSelection(node) {\n\t    var state = node.__brush;\n\t    return state ? state.dim.output(state.selection) : null;\n\t  }\n\t\n\t  function brushX() {\n\t    return brush$1(X);\n\t  }\n\t\n\t  function brushY() {\n\t    return brush$1(Y);\n\t  }\n\t\n\t  function brush() {\n\t    return brush$1(XY);\n\t  }\n\t\n\t  function brush$1(dim) {\n\t    var extent = defaultExtent$1,\n\t        filter = defaultFilter$2,\n\t        listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n\t        handleSize = 6,\n\t        touchending;\n\t\n\t    function brush(group) {\n\t      var overlay = group\n\t          .property(\"__brush\", initialize)\n\t        .selectAll(\".overlay\")\n\t        .data([type$1(\"overlay\")]);\n\t\n\t      overlay.enter().append(\"rect\")\n\t          .attr(\"class\", \"overlay\")\n\t          .attr(\"pointer-events\", \"all\")\n\t          .attr(\"cursor\", cursors.overlay)\n\t        .merge(overlay)\n\t          .each(function() {\n\t            var extent = local$1(this).extent;\n\t            select(this)\n\t                .attr(\"x\", extent[0][0])\n\t                .attr(\"y\", extent[0][1])\n\t                .attr(\"width\", extent[1][0] - extent[0][0])\n\t                .attr(\"height\", extent[1][1] - extent[0][1]);\n\t          });\n\t\n\t      group.selectAll(\".selection\")\n\t        .data([type$1(\"selection\")])\n\t        .enter().append(\"rect\")\n\t          .attr(\"class\", \"selection\")\n\t          .attr(\"cursor\", cursors.selection)\n\t          .attr(\"fill\", \"#777\")\n\t          .attr(\"fill-opacity\", 0.3)\n\t          .attr(\"stroke\", \"#fff\")\n\t          .attr(\"shape-rendering\", \"crispEdges\");\n\t\n\t      var handle = group.selectAll(\".handle\")\n\t        .data(dim.handles, function(d) { return d.type; });\n\t\n\t      handle.exit().remove();\n\t\n\t      handle.enter().append(\"rect\")\n\t          .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n\t          .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\t\n\t      group\n\t          .each(redraw)\n\t          .attr(\"fill\", \"none\")\n\t          .attr(\"pointer-events\", \"all\")\n\t          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n\t          .on(\"mousedown.brush touchstart.brush\", started);\n\t    }\n\t\n\t    brush.move = function(group, selection) {\n\t      if (group.selection) {\n\t        group\n\t            .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n\t            .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n\t            .tween(\"brush\", function() {\n\t              var that = this,\n\t                  state = that.__brush,\n\t                  emit = emitter(that, arguments),\n\t                  selection0 = state.selection,\n\t                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n\t                  i = interpolate(selection0, selection1);\n\t\n\t              function tween(t) {\n\t                state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n\t                redraw.call(that);\n\t                emit.brush();\n\t              }\n\t\n\t              return selection0 && selection1 ? tween : tween(1);\n\t            });\n\t      } else {\n\t        group\n\t            .each(function() {\n\t              var that = this,\n\t                  args = arguments,\n\t                  state = that.__brush,\n\t                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n\t                  emit = emitter(that, args).beforestart();\n\t\n\t              interrupt(that);\n\t              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n\t              redraw.call(that);\n\t              emit.start().brush().end();\n\t            });\n\t      }\n\t    };\n\t\n\t    function redraw() {\n\t      var group = select(this),\n\t          selection = local$1(this).selection;\n\t\n\t      if (selection) {\n\t        group.selectAll(\".selection\")\n\t            .style(\"display\", null)\n\t            .attr(\"x\", selection[0][0])\n\t            .attr(\"y\", selection[0][1])\n\t            .attr(\"width\", selection[1][0] - selection[0][0])\n\t            .attr(\"height\", selection[1][1] - selection[0][1]);\n\t\n\t        group.selectAll(\".handle\")\n\t            .style(\"display\", null)\n\t            .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n\t            .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n\t            .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n\t            .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n\t      }\n\t\n\t      else {\n\t        group.selectAll(\".selection,.handle\")\n\t            .style(\"display\", \"none\")\n\t            .attr(\"x\", null)\n\t            .attr(\"y\", null)\n\t            .attr(\"width\", null)\n\t            .attr(\"height\", null);\n\t      }\n\t    }\n\t\n\t    function emitter(that, args) {\n\t      return that.__brush.emitter || new Emitter(that, args);\n\t    }\n\t\n\t    function Emitter(that, args) {\n\t      this.that = that;\n\t      this.args = args;\n\t      this.state = that.__brush;\n\t      this.active = 0;\n\t    }\n\t\n\t    Emitter.prototype = {\n\t      beforestart: function() {\n\t        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n\t        return this;\n\t      },\n\t      start: function() {\n\t        if (this.starting) this.starting = false, this.emit(\"start\");\n\t        return this;\n\t      },\n\t      brush: function() {\n\t        this.emit(\"brush\");\n\t        return this;\n\t      },\n\t      end: function() {\n\t        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n\t        return this;\n\t      },\n\t      emit: function(type) {\n\t        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n\t      }\n\t    };\n\t\n\t    function started() {\n\t      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n\t      else if (touchending) return;\n\t      if (!filter.apply(this, arguments)) return;\n\t\n\t      var that = this,\n\t          type = exports.event.target.__data__.type,\n\t          mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n\t          signX = dim === Y ? null : signsX[type],\n\t          signY = dim === X ? null : signsY[type],\n\t          state = local$1(that),\n\t          extent = state.extent,\n\t          selection = state.selection,\n\t          W = extent[0][0], w0, w1,\n\t          N = extent[0][1], n0, n1,\n\t          E = extent[1][0], e0, e1,\n\t          S = extent[1][1], s0, s1,\n\t          dx,\n\t          dy,\n\t          moving,\n\t          shifting = signX && signY && exports.event.shiftKey,\n\t          lockX,\n\t          lockY,\n\t          point0 = mouse(that),\n\t          point = point0,\n\t          emit = emitter(that, arguments).beforestart();\n\t\n\t      if (type === \"overlay\") {\n\t        state.selection = selection = [\n\t          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n\t          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n\t        ];\n\t      } else {\n\t        w0 = selection[0][0];\n\t        n0 = selection[0][1];\n\t        e0 = selection[1][0];\n\t        s0 = selection[1][1];\n\t      }\n\t\n\t      w1 = w0;\n\t      n1 = n0;\n\t      e1 = e0;\n\t      s1 = s0;\n\t\n\t      var group = select(that)\n\t          .attr(\"pointer-events\", \"none\");\n\t\n\t      var overlay = group.selectAll(\".overlay\")\n\t          .attr(\"cursor\", cursors[type]);\n\t\n\t      if (exports.event.touches) {\n\t        group\n\t            .on(\"touchmove.brush\", moved, true)\n\t            .on(\"touchend.brush touchcancel.brush\", ended, true);\n\t      } else {\n\t        var view = select(exports.event.view)\n\t            .on(\"keydown.brush\", keydowned, true)\n\t            .on(\"keyup.brush\", keyupped, true)\n\t            .on(\"mousemove.brush\", moved, true)\n\t            .on(\"mouseup.brush\", ended, true);\n\t\n\t        dragDisable(exports.event.view);\n\t      }\n\t\n\t      nopropagation$2();\n\t      interrupt(that);\n\t      redraw.call(that);\n\t      emit.start();\n\t\n\t      function moved() {\n\t        var point1 = mouse(that);\n\t        if (shifting && !lockX && !lockY) {\n\t          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n\t          else lockX = true;\n\t        }\n\t        point = point1;\n\t        moving = true;\n\t        noevent$2();\n\t        move();\n\t      }\n\t\n\t      function move() {\n\t        var t;\n\t\n\t        dx = point[0] - point0[0];\n\t        dy = point[1] - point0[1];\n\t\n\t        switch (mode) {\n\t          case MODE_SPACE:\n\t          case MODE_DRAG: {\n\t            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n\t            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n\t            break;\n\t          }\n\t          case MODE_HANDLE: {\n\t            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n\t            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n\t            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n\t            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n\t            break;\n\t          }\n\t          case MODE_CENTER: {\n\t            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n\t            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n\t            break;\n\t          }\n\t        }\n\t\n\t        if (e1 < w1) {\n\t          signX *= -1;\n\t          t = w0, w0 = e0, e0 = t;\n\t          t = w1, w1 = e1, e1 = t;\n\t          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n\t        }\n\t\n\t        if (s1 < n1) {\n\t          signY *= -1;\n\t          t = n0, n0 = s0, s0 = t;\n\t          t = n1, n1 = s1, s1 = t;\n\t          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n\t        }\n\t\n\t        selection = state.selection; // May be set by brush.move!\n\t\n\t        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n\t        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\t\n\t        if (selection[0][0] !== w1\n\t            || selection[0][1] !== n1\n\t            || selection[1][0] !== e1\n\t            || selection[1][1] !== s1) {\n\t          state.selection = [[w1, n1], [e1, s1]];\n\t          redraw.call(that);\n\t          emit.brush();\n\t        }\n\t      }\n\t\n\t      function ended() {\n\t        nopropagation$2();\n\t        if (exports.event.touches) {\n\t          if (exports.event.touches.length) return;\n\t          if (touchending) clearTimeout(touchending);\n\t          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n\t          group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n\t        } else {\n\t          dragEnable(exports.event.view, moving);\n\t          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n\t        }\n\t        group.attr(\"pointer-events\", \"all\");\n\t        overlay.attr(\"cursor\", cursors.overlay);\n\t        if (empty$1(selection)) state.selection = null, redraw.call(that);\n\t        emit.end();\n\t      }\n\t\n\t      function keydowned() {\n\t        switch (exports.event.keyCode) {\n\t          case 16: { // SHIFT\n\t            shifting = signX && signY;\n\t            break;\n\t          }\n\t          case 18: { // ALT\n\t            if (mode === MODE_HANDLE) {\n\t              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t              mode = MODE_CENTER;\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          case 32: { // SPACE; takes priority over ALT\n\t            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n\t              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n\t              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n\t              mode = MODE_SPACE;\n\t              overlay.attr(\"cursor\", cursors.selection);\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          default: return;\n\t        }\n\t        noevent$2();\n\t      }\n\t\n\t      function keyupped() {\n\t        switch (exports.event.keyCode) {\n\t          case 16: { // SHIFT\n\t            if (shifting) {\n\t              lockX = lockY = shifting = false;\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          case 18: { // ALT\n\t            if (mode === MODE_CENTER) {\n\t              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t              mode = MODE_HANDLE;\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          case 32: { // SPACE\n\t            if (mode === MODE_SPACE) {\n\t              if (exports.event.altKey) {\n\t                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n\t                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n\t                mode = MODE_CENTER;\n\t              } else {\n\t                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n\t                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n\t                mode = MODE_HANDLE;\n\t              }\n\t              overlay.attr(\"cursor\", cursors[type]);\n\t              move();\n\t            }\n\t            break;\n\t          }\n\t          default: return;\n\t        }\n\t        noevent$2();\n\t      }\n\t    }\n\t\n\t    function initialize() {\n\t      var state = this.__brush || {selection: null};\n\t      state.extent = extent.apply(this, arguments);\n\t      state.dim = dim;\n\t      return state;\n\t    }\n\t\n\t    brush.extent = function(_) {\n\t      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n\t    };\n\t\n\t    brush.filter = function(_) {\n\t      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), brush) : filter;\n\t    };\n\t\n\t    brush.handleSize = function(_) {\n\t      return arguments.length ? (handleSize = +_, brush) : handleSize;\n\t    };\n\t\n\t    brush.on = function() {\n\t      var value = listeners.on.apply(listeners, arguments);\n\t      return value === listeners ? brush : value;\n\t    };\n\t\n\t    return brush;\n\t  }\n\t\n\t  var cos = Math.cos;\n\t  var sin = Math.sin;\n\t  var pi$3 = Math.PI;\n\t  var halfPi$2 = pi$3 / 2;\n\t  var tau$3 = pi$3 * 2;\n\t  var max$1 = Math.max;\n\t\n\t  function compareValue(compare) {\n\t    return function(a, b) {\n\t      return compare(\n\t        a.source.value + a.target.value,\n\t        b.source.value + b.target.value\n\t      );\n\t    };\n\t  }\n\t\n\t  function chord() {\n\t    var padAngle = 0,\n\t        sortGroups = null,\n\t        sortSubgroups = null,\n\t        sortChords = null;\n\t\n\t    function chord(matrix) {\n\t      var n = matrix.length,\n\t          groupSums = [],\n\t          groupIndex = range(n),\n\t          subgroupIndex = [],\n\t          chords = [],\n\t          groups = chords.groups = new Array(n),\n\t          subgroups = new Array(n * n),\n\t          k,\n\t          x,\n\t          x0,\n\t          dx,\n\t          i,\n\t          j;\n\t\n\t      // Compute the sum.\n\t      k = 0, i = -1; while (++i < n) {\n\t        x = 0, j = -1; while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(range(n));\n\t        k += x;\n\t      }\n\t\n\t      // Sort groups…\n\t      if (sortGroups) groupIndex.sort(function(a, b) {\n\t        return sortGroups(groupSums[a], groupSums[b]);\n\t      });\n\t\n\t      // Sort subgroups…\n\t      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n\t        d.sort(function(a, b) {\n\t          return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t        });\n\t      });\n\t\n\t      // Convert the sum to scaling factor for [0, 2pi].\n\t      // TODO Allow start and end angle to be specified?\n\t      // TODO Allow padding to be specified as percentage?\n\t      k = max$1(0, tau$3 - padAngle * n) / k;\n\t      dx = k ? padAngle : tau$3 / n;\n\t\n\t      // Compute the start and end angle for each group and subgroup.\n\t      // Note: Opera has a bug reordering object literal properties!\n\t      x = 0, i = -1; while (++i < n) {\n\t        x0 = x, j = -1; while (++j < n) {\n\t          var di = groupIndex[i],\n\t              dj = subgroupIndex[di][j],\n\t              v = matrix[di][dj],\n\t              a0 = x,\n\t              a1 = x += v * k;\n\t          subgroups[dj * n + di] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: groupSums[di]\n\t        };\n\t        x += dx;\n\t      }\n\t\n\t      // Generate chords for each (non-empty) subgroup-subgroup link.\n\t      i = -1; while (++i < n) {\n\t        j = i - 1; while (++j < n) {\n\t          var source = subgroups[j * n + i],\n\t              target = subgroups[i * n + j];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value\n\t                ? {source: target, target: source}\n\t                : {source: source, target: target});\n\t          }\n\t        }\n\t      }\n\t\n\t      return sortChords ? chords.sort(sortChords) : chords;\n\t    }\n\t\n\t    chord.padAngle = function(_) {\n\t      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n\t    };\n\t\n\t    chord.sortGroups = function(_) {\n\t      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n\t    };\n\t\n\t    chord.sortSubgroups = function(_) {\n\t      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n\t    };\n\t\n\t    chord.sortChords = function(_) {\n\t      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n\t    };\n\t\n\t    return chord;\n\t  }\n\t\n\t  var slice$5 = Array.prototype.slice;\n\t\n\t  function constant$11(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function defaultSource(d) {\n\t    return d.source;\n\t  }\n\t\n\t  function defaultTarget(d) {\n\t    return d.target;\n\t  }\n\t\n\t  function defaultRadius$1(d) {\n\t    return d.radius;\n\t  }\n\t\n\t  function defaultStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t\n\t  function defaultEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t\n\t  function ribbon() {\n\t    var source = defaultSource,\n\t        target = defaultTarget,\n\t        radius = defaultRadius$1,\n\t        startAngle = defaultStartAngle,\n\t        endAngle = defaultEndAngle,\n\t        context = null;\n\t\n\t    function ribbon() {\n\t      var buffer,\n\t          argv = slice$5.call(arguments),\n\t          s = source.apply(this, argv),\n\t          t = target.apply(this, argv),\n\t          sr = +radius.apply(this, (argv[0] = s, argv)),\n\t          sa0 = startAngle.apply(this, argv) - halfPi$2,\n\t          sa1 = endAngle.apply(this, argv) - halfPi$2,\n\t          sx0 = sr * cos(sa0),\n\t          sy0 = sr * sin(sa0),\n\t          tr = +radius.apply(this, (argv[0] = t, argv)),\n\t          ta0 = startAngle.apply(this, argv) - halfPi$2,\n\t          ta1 = endAngle.apply(this, argv) - halfPi$2;\n\t\n\t      if (!context) context = buffer = path();\n\t\n\t      context.moveTo(sx0, sy0);\n\t      context.arc(0, 0, sr, sa0, sa1);\n\t      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n\t        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n\t        context.arc(0, 0, tr, ta0, ta1);\n\t      }\n\t      context.quadraticCurveTo(0, 0, sx0, sy0);\n\t      context.closePath();\n\t\n\t      if (buffer) return context = null, buffer + \"\" || null;\n\t    }\n\t\n\t    ribbon.radius = function(_) {\n\t      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : radius;\n\t    };\n\t\n\t    ribbon.startAngle = function(_) {\n\t      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : startAngle;\n\t    };\n\t\n\t    ribbon.endAngle = function(_) {\n\t      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : endAngle;\n\t    };\n\t\n\t    ribbon.source = function(_) {\n\t      return arguments.length ? (source = _, ribbon) : source;\n\t    };\n\t\n\t    ribbon.target = function(_) {\n\t      return arguments.length ? (target = _, ribbon) : target;\n\t    };\n\t\n\t    ribbon.context = function(_) {\n\t      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n\t    };\n\t\n\t    return ribbon;\n\t  }\n\t\n\t  // Adds floating point numbers with twice the normal precision.\n\t  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n\t  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n\t  // 305–363 (1997).\n\t  // Code adapted from GeographicLib by Charles F. F. Karney,\n\t  // http://geographiclib.sourceforge.net/\n\t\n\t  function adder() {\n\t    return new Adder;\n\t  }\n\t\n\t  function Adder() {\n\t    this.reset();\n\t  }\n\t\n\t  Adder.prototype = {\n\t    constructor: Adder,\n\t    reset: function() {\n\t      this.s = // rounded value\n\t      this.t = 0; // exact error\n\t    },\n\t    add: function(y) {\n\t      add$1(temp, y, this.t);\n\t      add$1(this, temp.s, this.s);\n\t      if (this.s) this.t += temp.t;\n\t      else this.s = temp.t;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t\n\t  var temp = new Adder;\n\t\n\t  function add$1(adder, a, b) {\n\t    var x = adder.s = a + b,\n\t        bv = x - a,\n\t        av = x - bv;\n\t    adder.t = (a - av) + (b - bv);\n\t  }\n\t\n\t  var epsilon$4 = 1e-6;\n\t  var epsilon2$2 = 1e-12;\n\t  var pi$4 = Math.PI;\n\t  var halfPi$3 = pi$4 / 2;\n\t  var quarterPi = pi$4 / 4;\n\t  var tau$4 = pi$4 * 2;\n\t\n\t  var degrees$1 = 180 / pi$4;\n\t  var radians = pi$4 / 180;\n\t\n\t  var abs = Math.abs;\n\t  var atan = Math.atan;\n\t  var atan2 = Math.atan2;\n\t  var cos$1 = Math.cos;\n\t  var ceil = Math.ceil;\n\t  var exp = Math.exp;\n\t  var log$1 = Math.log;\n\t  var pow$1 = Math.pow;\n\t  var sin$1 = Math.sin;\n\t  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n\t  var sqrt$1 = Math.sqrt;\n\t  var tan = Math.tan;\n\t\n\t  function acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n\t  }\n\t\n\t  function asin$1(x) {\n\t    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n\t  }\n\t\n\t  function haversin(x) {\n\t    return (x = sin$1(x / 2)) * x;\n\t  }\n\t\n\t  function noop$2() {}\n\t\n\t  function streamGeometry(geometry, stream) {\n\t    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      streamGeometryType[geometry.type](geometry, stream);\n\t    }\n\t  }\n\t\n\t  var streamObjectType = {\n\t    Feature: function(feature, stream) {\n\t      streamGeometry(feature.geometry, stream);\n\t    },\n\t    FeatureCollection: function(object, stream) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) streamGeometry(features[i].geometry, stream);\n\t    }\n\t  };\n\t\n\t  var streamGeometryType = {\n\t    Sphere: function(object, stream) {\n\t      stream.sphere();\n\t    },\n\t    Point: function(object, stream) {\n\t      object = object.coordinates;\n\t      stream.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, stream) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, stream) {\n\t      streamLine(object.coordinates, stream, 0);\n\t    },\n\t    MultiLineString: function(object, stream) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) streamLine(coordinates[i], stream, 0);\n\t    },\n\t    Polygon: function(object, stream) {\n\t      streamPolygon(object.coordinates, stream);\n\t    },\n\t    MultiPolygon: function(object, stream) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) streamPolygon(coordinates[i], stream);\n\t    },\n\t    GeometryCollection: function(object, stream) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) streamGeometry(geometries[i], stream);\n\t    }\n\t  };\n\t\n\t  function streamLine(coordinates, stream, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    stream.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    stream.lineEnd();\n\t  }\n\t\n\t  function streamPolygon(coordinates, stream) {\n\t    var i = -1, n = coordinates.length;\n\t    stream.polygonStart();\n\t    while (++i < n) streamLine(coordinates[i], stream, 1);\n\t    stream.polygonEnd();\n\t  }\n\t\n\t  function geoStream(object, stream) {\n\t    if (object && streamObjectType.hasOwnProperty(object.type)) {\n\t      streamObjectType[object.type](object, stream);\n\t    } else {\n\t      streamGeometry(object, stream);\n\t    }\n\t  }\n\t\n\t  var areaRingSum = adder();\n\t\n\t  var areaSum = adder();\n\t  var lambda00;\n\t  var phi00;\n\t  var lambda0;\n\t  var cosPhi0;\n\t  var sinPhi0;\n\t  var areaStream = {\n\t    point: noop$2,\n\t    lineStart: noop$2,\n\t    lineEnd: noop$2,\n\t    polygonStart: function() {\n\t      areaRingSum.reset();\n\t      areaStream.lineStart = areaRingStart;\n\t      areaStream.lineEnd = areaRingEnd;\n\t    },\n\t    polygonEnd: function() {\n\t      var areaRing = +areaRingSum;\n\t      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n\t      this.lineStart = this.lineEnd = this.point = noop$2;\n\t    },\n\t    sphere: function() {\n\t      areaSum.add(tau$4);\n\t    }\n\t  };\n\t\n\t  function areaRingStart() {\n\t    areaStream.point = areaPointFirst;\n\t  }\n\t\n\t  function areaRingEnd() {\n\t    areaPoint(lambda00, phi00);\n\t  }\n\t\n\t  function areaPointFirst(lambda, phi) {\n\t    areaStream.point = areaPoint;\n\t    lambda00 = lambda, phi00 = phi;\n\t    lambda *= radians, phi *= radians;\n\t    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n\t  }\n\t\n\t  function areaPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\t\n\t    // Spherical excess E for a spherical triangle with vertices: south pole,\n\t    // previous point, current point.  Uses a formula derived from Cagnoli’s\n\t    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n\t    var dLambda = lambda - lambda0,\n\t        sdLambda = dLambda >= 0 ? 1 : -1,\n\t        adLambda = sdLambda * dLambda,\n\t        cosPhi = cos$1(phi),\n\t        sinPhi = sin$1(phi),\n\t        k = sinPhi0 * sinPhi,\n\t        u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n\t        v = k * sdLambda * sin$1(adLambda);\n\t    areaRingSum.add(atan2(v, u));\n\t\n\t    // Advance the previous points.\n\t    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n\t  }\n\t\n\t  function area$2(object) {\n\t    areaSum.reset();\n\t    geoStream(object, areaStream);\n\t    return areaSum * 2;\n\t  }\n\t\n\t  function spherical(cartesian) {\n\t    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n\t  }\n\t\n\t  function cartesian(spherical) {\n\t    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n\t    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n\t  }\n\t\n\t  function cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t\n\t  function cartesianCross(a, b) {\n\t    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n\t  }\n\t\n\t  // TODO return a\n\t  function cartesianAddInPlace(a, b) {\n\t    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n\t  }\n\t\n\t  function cartesianScale(vector, k) {\n\t    return [vector[0] * k, vector[1] * k, vector[2] * k];\n\t  }\n\t\n\t  // TODO return d\n\t  function cartesianNormalizeInPlace(d) {\n\t    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l, d[1] /= l, d[2] /= l;\n\t  }\n\t\n\tvar   lambda0$1;\n\t  var phi0;\n\t  var lambda1;\n\t  var phi1;\n\t  var lambda2;\n\tvar   lambda00$1;\n\tvar   phi00$1;\n\t  var p0;\n\t  var deltaSum = adder();\n\t  var ranges;\n\tvar   range$1;\n\t  var boundsStream = {\n\t    point: boundsPoint,\n\t    lineStart: boundsLineStart,\n\t    lineEnd: boundsLineEnd,\n\t    polygonStart: function() {\n\t      boundsStream.point = boundsRingPoint;\n\t      boundsStream.lineStart = boundsRingStart;\n\t      boundsStream.lineEnd = boundsRingEnd;\n\t      deltaSum.reset();\n\t      areaStream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      areaStream.polygonEnd();\n\t      boundsStream.point = boundsPoint;\n\t      boundsStream.lineStart = boundsLineStart;\n\t      boundsStream.lineEnd = boundsLineEnd;\n\t      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n\t      else if (deltaSum > epsilon$4) phi1 = 90;\n\t      else if (deltaSum < -epsilon$4) phi0 = -90;\n\t      range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t    }\n\t  };\n\t\n\t  function boundsPoint(lambda, phi) {\n\t    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n\t    if (phi < phi0) phi0 = phi;\n\t    if (phi > phi1) phi1 = phi;\n\t  }\n\t\n\t  function linePoint(lambda, phi) {\n\t    var p = cartesian([lambda * radians, phi * radians]);\n\t    if (p0) {\n\t      var normal = cartesianCross(p0, p),\n\t          equatorial = [normal[1], -normal[0], 0],\n\t          inflection = cartesianCross(equatorial, normal);\n\t      cartesianNormalizeInPlace(inflection);\n\t      inflection = spherical(inflection);\n\t      var delta = lambda - lambda2,\n\t          sign = delta > 0 ? 1 : -1,\n\t          lambdai = inflection[0] * degrees$1 * sign,\n\t          phii,\n\t          antimeridian = abs(delta) > 180;\n\t      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n\t        phii = inflection[1] * degrees$1;\n\t        if (phii > phi1) phi1 = phii;\n\t      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n\t        phii = -inflection[1] * degrees$1;\n\t        if (phii < phi0) phi0 = phii;\n\t      } else {\n\t        if (phi < phi0) phi0 = phi;\n\t        if (phi > phi1) phi1 = phi;\n\t      }\n\t      if (antimeridian) {\n\t        if (lambda < lambda2) {\n\t          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t        } else {\n\t          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t        }\n\t      } else {\n\t        if (lambda1 >= lambda0$1) {\n\t          if (lambda < lambda0$1) lambda0$1 = lambda;\n\t          if (lambda > lambda1) lambda1 = lambda;\n\t        } else {\n\t          if (lambda > lambda2) {\n\t            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n\t          } else {\n\t            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t      boundsPoint(lambda, phi);\n\t    }\n\t    p0 = p, lambda2 = lambda;\n\t  }\n\t\n\t  function boundsLineStart() {\n\t    boundsStream.point = linePoint;\n\t  }\n\t\n\t  function boundsLineEnd() {\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t    boundsStream.point = boundsPoint;\n\t    p0 = null;\n\t  }\n\t\n\t  function boundsRingPoint(lambda, phi) {\n\t    if (p0) {\n\t      var delta = lambda - lambda2;\n\t      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n\t    } else {\n\t      lambda00$1 = lambda, phi00$1 = phi;\n\t    }\n\t    areaStream.point(lambda, phi);\n\t    linePoint(lambda, phi);\n\t  }\n\t\n\t  function boundsRingStart() {\n\t    areaStream.lineStart();\n\t  }\n\t\n\t  function boundsRingEnd() {\n\t    boundsRingPoint(lambda00$1, phi00$1);\n\t    areaStream.lineEnd();\n\t    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n\t    range$1[0] = lambda0$1, range$1[1] = lambda1;\n\t    p0 = null;\n\t  }\n\t\n\t  // Finds the left-right distance between two longitudes.\n\t  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n\t  // the distance between ±180° to be 360°.\n\t  function angle(lambda0, lambda1) {\n\t    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n\t  }\n\t\n\t  function rangeCompare(a, b) {\n\t    return a[0] - b[0];\n\t  }\n\t\n\t  function rangeContains(range, x) {\n\t    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t  }\n\t\n\t  function bounds(feature) {\n\t    var i, n, a, b, merged, deltaMax, delta;\n\t\n\t    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n\t    ranges = [];\n\t    geoStream(feature, boundsStream);\n\t\n\t    // First, sort ranges by their minimum longitudes.\n\t    if (n = ranges.length) {\n\t      ranges.sort(rangeCompare);\n\t\n\t      // Then, merge any ranges that overlap.\n\t      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n\t        b = ranges[i];\n\t        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n\t          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t        } else {\n\t          merged.push(a = b);\n\t        }\n\t      }\n\t\n\t      // Finally, find the largest gap between the merged ranges.\n\t      // The final bounding box will be the inverse of this gap.\n\t      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n\t        b = merged[i];\n\t        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n\t      }\n\t    }\n\t\n\t    ranges = range$1 = null;\n\t\n\t    return lambda0$1 === Infinity || phi0 === Infinity\n\t        ? [[NaN, NaN], [NaN, NaN]]\n\t        : [[lambda0$1, phi0], [lambda1, phi1]];\n\t  }\n\t\n\t  var W0;\n\t  var W1;\n\t  var X0;\n\t  var Y0;\n\t  var Z0;\n\t  var X1;\n\t  var Y1;\n\t  var Z1;\n\t  var X2;\n\t  var Y2;\n\t  var Z2;\n\tvar   lambda00$2;\n\tvar   phi00$2;\n\t  var x0;\n\t  var y0;\n\t  var z0;\n\t  // previous point\n\t\n\t  var centroidStream = {\n\t    sphere: noop$2,\n\t    point: centroidPoint,\n\t    lineStart: centroidLineStart,\n\t    lineEnd: centroidLineEnd,\n\t    polygonStart: function() {\n\t      centroidStream.lineStart = centroidRingStart;\n\t      centroidStream.lineEnd = centroidRingEnd;\n\t    },\n\t    polygonEnd: function() {\n\t      centroidStream.lineStart = centroidLineStart;\n\t      centroidStream.lineEnd = centroidLineEnd;\n\t    }\n\t  };\n\t\n\t  // Arithmetic mean of Cartesian vectors.\n\t  function centroidPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi);\n\t    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n\t  }\n\t\n\t  function centroidPointCartesian(x, y, z) {\n\t    ++W0;\n\t    X0 += (x - X0) / W0;\n\t    Y0 += (y - Y0) / W0;\n\t    Z0 += (z - Z0) / W0;\n\t  }\n\t\n\t  function centroidLineStart() {\n\t    centroidStream.point = centroidLinePointFirst;\n\t  }\n\t\n\t  function centroidLinePointFirst(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi);\n\t    x0 = cosPhi * cos$1(lambda);\n\t    y0 = cosPhi * sin$1(lambda);\n\t    z0 = sin$1(phi);\n\t    centroidStream.point = centroidLinePoint;\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroidLinePoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi),\n\t        x = cosPhi * cos$1(lambda),\n\t        y = cosPhi * sin$1(lambda),\n\t        z = sin$1(phi),\n\t        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t    W1 += w;\n\t    X1 += w * (x0 + (x0 = x));\n\t    Y1 += w * (y0 + (y0 = y));\n\t    Z1 += w * (z0 + (z0 = z));\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroidLineEnd() {\n\t    centroidStream.point = centroidPoint;\n\t  }\n\t\n\t  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n\t  // J. Applied Mechanics 42, 239 (1975).\n\t  function centroidRingStart() {\n\t    centroidStream.point = centroidRingPointFirst;\n\t  }\n\t\n\t  function centroidRingEnd() {\n\t    centroidRingPoint(lambda00$2, phi00$2);\n\t    centroidStream.point = centroidPoint;\n\t  }\n\t\n\t  function centroidRingPointFirst(lambda, phi) {\n\t    lambda00$2 = lambda, phi00$2 = phi;\n\t    lambda *= radians, phi *= radians;\n\t    centroidStream.point = centroidRingPoint;\n\t    var cosPhi = cos$1(phi);\n\t    x0 = cosPhi * cos$1(lambda);\n\t    y0 = cosPhi * sin$1(lambda);\n\t    z0 = sin$1(phi);\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroidRingPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var cosPhi = cos$1(phi),\n\t        x = cosPhi * cos$1(lambda),\n\t        y = cosPhi * sin$1(lambda),\n\t        z = sin$1(phi),\n\t        cx = y0 * z - z0 * y,\n\t        cy = z0 * x - x0 * z,\n\t        cz = x0 * y - y0 * x,\n\t        m = sqrt$1(cx * cx + cy * cy + cz * cz),\n\t        u = x0 * x + y0 * y + z0 * z,\n\t        v = m && -acos(u) / m, // area weight\n\t        w = atan2(m, u); // line weight\n\t    X2 += v * cx;\n\t    Y2 += v * cy;\n\t    Z2 += v * cz;\n\t    W1 += w;\n\t    X1 += w * (x0 + (x0 = x));\n\t    Y1 += w * (y0 + (y0 = y));\n\t    Z1 += w * (z0 + (z0 = z));\n\t    centroidPointCartesian(x0, y0, z0);\n\t  }\n\t\n\t  function centroid$1(object) {\n\t    W0 = W1 =\n\t    X0 = Y0 = Z0 =\n\t    X1 = Y1 = Z1 =\n\t    X2 = Y2 = Z2 = 0;\n\t    geoStream(object, centroidStream);\n\t\n\t    var x = X2,\n\t        y = Y2,\n\t        z = Z2,\n\t        m = x * x + y * y + z * z;\n\t\n\t    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n\t    if (m < epsilon2$2) {\n\t      x = X1, y = Y1, z = Z1;\n\t      // If the feature has zero length, fall back to arithmetic mean of point vectors.\n\t      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n\t      m = x * x + y * y + z * z;\n\t      // If the feature still has an undefined ccentroid, then return.\n\t      if (m < epsilon2$2) return [NaN, NaN];\n\t    }\n\t\n\t    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n\t  }\n\t\n\t  function constant$12(x) {\n\t    return function() {\n\t      return x;\n\t    };\n\t  }\n\t\n\t  function compose(a, b) {\n\t\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t\n\t    return compose;\n\t  }\n\t\n\t  function rotationIdentity(lambda, phi) {\n\t    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t  }\n\t\n\t  rotationIdentity.invert = rotationIdentity;\n\t\n\t  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n\t    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n\t      : rotationLambda(deltaLambda))\n\t      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n\t      : rotationIdentity);\n\t  }\n\t\n\t  function forwardRotationLambda(deltaLambda) {\n\t    return function(lambda, phi) {\n\t      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n\t    };\n\t  }\n\t\n\t  function rotationLambda(deltaLambda) {\n\t    var rotation = forwardRotationLambda(deltaLambda);\n\t    rotation.invert = forwardRotationLambda(-deltaLambda);\n\t    return rotation;\n\t  }\n\t\n\t  function rotationPhiGamma(deltaPhi, deltaGamma) {\n\t    var cosDeltaPhi = cos$1(deltaPhi),\n\t        sinDeltaPhi = sin$1(deltaPhi),\n\t        cosDeltaGamma = cos$1(deltaGamma),\n\t        sinDeltaGamma = sin$1(deltaGamma);\n\t\n\t    function rotation(lambda, phi) {\n\t      var cosPhi = cos$1(phi),\n\t          x = cos$1(lambda) * cosPhi,\n\t          y = sin$1(lambda) * cosPhi,\n\t          z = sin$1(phi),\n\t          k = z * cosDeltaPhi + x * sinDeltaPhi;\n\t      return [\n\t        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n\t        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n\t      ];\n\t    }\n\t\n\t    rotation.invert = function(lambda, phi) {\n\t      var cosPhi = cos$1(phi),\n\t          x = cos$1(lambda) * cosPhi,\n\t          y = sin$1(lambda) * cosPhi,\n\t          z = sin$1(phi),\n\t          k = z * cosDeltaGamma - y * sinDeltaGamma;\n\t      return [\n\t        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n\t        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n\t      ];\n\t    };\n\t\n\t    return rotation;\n\t  }\n\t\n\t  function rotation(rotate) {\n\t    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\t\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n\t      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t    }\n\t\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n\t      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n\t    };\n\t\n\t    return forward;\n\t  }\n\t\n\t  // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\t  function circleStream(stream, radius, delta, direction, t0, t1) {\n\t    if (!delta) return;\n\t    var cosRadius = cos$1(radius),\n\t        sinRadius = sin$1(radius),\n\t        step = direction * delta;\n\t    if (t0 == null) {\n\t      t0 = radius + direction * tau$4;\n\t      t1 = radius - step / 2;\n\t    } else {\n\t      t0 = circleRadius(cosRadius, t0);\n\t      t1 = circleRadius(cosRadius, t1);\n\t      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n\t    }\n\t    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n\t      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n\t      stream.point(point[0], point[1]);\n\t    }\n\t  }\n\t\n\t  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\t  function circleRadius(cosRadius, point) {\n\t    point = cartesian(point), point[0] -= cosRadius;\n\t    cartesianNormalizeInPlace(point);\n\t    var radius = acos(-point[1]);\n\t    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n\t  }\n\t\n\t  function circle$1() {\n\t    var center = constant$12([0, 0]),\n\t        radius = constant$12(90),\n\t        precision = constant$12(6),\n\t        ring,\n\t        rotate,\n\t        stream = {point: point};\n\t\n\t    function point(x, y) {\n\t      ring.push(x = rotate(x, y));\n\t      x[0] *= degrees$1, x[1] *= degrees$1;\n\t    }\n\t\n\t    function circle() {\n\t      var c = center.apply(this, arguments),\n\t          r = radius.apply(this, arguments) * radians,\n\t          p = precision.apply(this, arguments) * radians;\n\t      ring = [];\n\t      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n\t      circleStream(stream, r, p, 1);\n\t      c = {type: \"Polygon\", coordinates: [ring]};\n\t      ring = rotate = null;\n\t      return c;\n\t    }\n\t\n\t    circle.center = function(_) {\n\t      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$12([+_[0], +_[1]]), circle) : center;\n\t    };\n\t\n\t    circle.radius = function(_) {\n\t      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), circle) : radius;\n\t    };\n\t\n\t    circle.precision = function(_) {\n\t      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$12(+_), circle) : precision;\n\t    };\n\t\n\t    return circle;\n\t  }\n\t\n\t  function clipBuffer() {\n\t    var lines = [],\n\t        line;\n\t    return {\n\t      point: function(x, y) {\n\t        line.push([x, y]);\n\t      },\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      lineEnd: noop$2,\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      },\n\t      result: function() {\n\t        var result = lines;\n\t        lines = [];\n\t        line = null;\n\t        return result;\n\t      }\n\t    };\n\t  }\n\t\n\t  function clipLine(a, b, x0, y0, x1, y1) {\n\t    var ax = a[0],\n\t        ay = a[1],\n\t        bx = b[0],\n\t        by = b[1],\n\t        t0 = 0,\n\t        t1 = 1,\n\t        dx = bx - ax,\n\t        dy = by - ay,\n\t        r;\n\t\n\t    r = x0 - ax;\n\t    if (!dx && r > 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dx > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = x1 - ax;\n\t    if (!dx && r < 0) return;\n\t    r /= dx;\n\t    if (dx < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dx > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    r = y0 - ay;\n\t    if (!dy && r > 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    } else if (dy > 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    }\n\t\n\t    r = y1 - ay;\n\t    if (!dy && r < 0) return;\n\t    r /= dy;\n\t    if (dy < 0) {\n\t      if (r > t1) return;\n\t      if (r > t0) t0 = r;\n\t    } else if (dy > 0) {\n\t      if (r < t0) return;\n\t      if (r < t1) t1 = r;\n\t    }\n\t\n\t    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n\t    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n\t    return true;\n\t  }\n\t\n\t  function pointEqual(a, b) {\n\t    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n\t  }\n\t\n\t  function Intersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other; // another intersection\n\t    this.e = entry; // is an entry?\n\t    this.v = false; // visited\n\t    this.n = this.p = null; // next & previous\n\t  }\n\t\n\t  // A generalized polygon clipping algorithm: given a polygon that has been cut\n\t  // into its visible line segments, and rejoins the segments by interpolating\n\t  // along the clip edge.\n\t  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {\n\t    var subject = [],\n\t        clip = [],\n\t        i,\n\t        n;\n\t\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n], x;\n\t\n\t      // If the first and last points of a segment are coincident, then treat as a\n\t      // closed ring. TODO if all rings are closed, then the winding order of the\n\t      // exterior ring should be checked.\n\t      if (pointEqual(p0, p1)) {\n\t        stream.lineStart();\n\t        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n\t        stream.lineEnd();\n\t        return;\n\t      }\n\t\n\t      subject.push(x = new Intersection(p0, segment, null, true));\n\t      clip.push(x.o = new Intersection(p0, null, x, false));\n\t      subject.push(x = new Intersection(p1, segment, null, false));\n\t      clip.push(x.o = new Intersection(p1, null, x, true));\n\t    });\n\t\n\t    if (!subject.length) return;\n\t\n\t    clip.sort(compareIntersection);\n\t    link$1(subject);\n\t    link$1(clip);\n\t\n\t    for (i = 0, n = clip.length; i < n; ++i) {\n\t      clip[i].e = startInside = !startInside;\n\t    }\n\t\n\t    var start = subject[0],\n\t        points,\n\t        point;\n\t\n\t    while (1) {\n\t      // Find first unvisited intersection.\n\t      var current = start,\n\t          isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      stream.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, stream);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, stream);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      stream.lineEnd();\n\t    }\n\t  }\n\t\n\t  function link$1(array) {\n\t    if (!(n = array.length)) return;\n\t    var n,\n\t        i = 0,\n\t        a = array[0],\n\t        b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t\n\t  var clipMax = 1e9;\n\t  var clipMin = -clipMax;\n\t  // TODO Use d3-polygon’s polygonContains here for the ring check?\n\t  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\t\n\t  function clipExtent(x0, y0, x1, y1) {\n\t\n\t    function visible(x, y) {\n\t      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t    }\n\t\n\t    function interpolate(from, to, direction, stream) {\n\t      var a = 0, a1 = 0;\n\t      if (from == null\n\t          || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n\t          || comparePoint(from, to) < 0 ^ direction > 0) {\n\t        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t        while ((a = (a + direction + 4) % 4) !== a1);\n\t      } else {\n\t        stream.point(to[0], to[1]);\n\t      }\n\t    }\n\t\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n\t          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n\t          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n\t          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n\t    }\n\t\n\t    function compareIntersection(a, b) {\n\t      return comparePoint(a.x, b.x);\n\t    }\n\t\n\t    function comparePoint(a, b) {\n\t      var ca = corner(a, 1),\n\t          cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb\n\t          : ca === 0 ? b[1] - a[1]\n\t          : ca === 1 ? a[0] - b[0]\n\t          : ca === 2 ? a[1] - b[1]\n\t          : b[0] - a[0];\n\t    }\n\t\n\t    return function(stream) {\n\t      var activeStream = stream,\n\t          bufferStream = clipBuffer(),\n\t          segments,\n\t          polygon,\n\t          ring,\n\t          x__, y__, v__, // first point\n\t          x_, y_, v_, // previous point\n\t          first,\n\t          clean;\n\t\n\t      var clipStream = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: polygonStart,\n\t        polygonEnd: polygonEnd\n\t      };\n\t\n\t      function point(x, y) {\n\t        if (visible(x, y)) activeStream.point(x, y);\n\t      }\n\t\n\t      function polygonInside() {\n\t        var winding = 0;\n\t\n\t        for (var i = 0, n = polygon.length; i < n; ++i) {\n\t          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n\t            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\t            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n\t            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n\t          }\n\t        }\n\t\n\t        return winding;\n\t      }\n\t\n\t      // Buffer geometry within a polygon and then clip it en masse.\n\t      function polygonStart() {\n\t        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n\t      }\n\t\n\t      function polygonEnd() {\n\t        var startInside = polygonInside(),\n\t            cleanInside = clean && startInside,\n\t            visible = (segments = merge(segments)).length;\n\t        if (cleanInside || visible) {\n\t          stream.polygonStart();\n\t          if (cleanInside) {\n\t            stream.lineStart();\n\t            interpolate(null, null, 1, stream);\n\t            stream.lineEnd();\n\t          }\n\t          if (visible) {\n\t            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n\t          }\n\t          stream.polygonEnd();\n\t        }\n\t        activeStream = stream, segments = polygon = ring = null;\n\t      }\n\t\n\t      function lineStart() {\n\t        clipStream.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t\n\t      // TODO rather than special-case polygons, simply handle them separately.\n\t      // Ideally, coincident intersection points should be jittered to avoid\n\t      // clipping issues.\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferStream.rejoin();\n\t          segments.push(bufferStream.result());\n\t        }\n\t        clipStream.point = point;\n\t        if (v_) activeStream.lineEnd();\n\t      }\n\t\n\t      function linePoint(x, y) {\n\t        var v = visible(x, y);\n\t        if (polygon) ring.push([x, y]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            activeStream.lineStart();\n\t            activeStream.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) activeStream.point(x, y);\n\t          else {\n\t            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n\t                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\t            if (clipLine(a, b, x0, y0, x1, y1)) {\n\t              if (!v_) {\n\t                activeStream.lineStart();\n\t                activeStream.point(a[0], a[1]);\n\t              }\n\t              activeStream.point(b[0], b[1]);\n\t              if (!v) activeStream.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              activeStream.lineStart();\n\t              activeStream.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t\n\t      return clipStream;\n\t    };\n\t  }\n\t\n\t  function extent$1() {\n\t    var x0 = 0,\n\t        y0 = 0,\n\t        x1 = 960,\n\t        y1 = 500,\n\t        cache,\n\t        cacheStream,\n\t        clip;\n\t\n\t    return clip = {\n\t      stream: function(stream) {\n\t        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n\t      },\n\t      extent: function(_) {\n\t        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n\t      }\n\t    };\n\t  }\n\t\n\t  var lengthSum = adder();\n\tvar   lambda0$2;\n\tvar   sinPhi0$1;\n\tvar   cosPhi0$1;\n\t  var lengthStream = {\n\t    sphere: noop$2,\n\t    point: noop$2,\n\t    lineStart: lengthLineStart,\n\t    lineEnd: noop$2,\n\t    polygonStart: noop$2,\n\t    polygonEnd: noop$2\n\t  };\n\t\n\t  function lengthLineStart() {\n\t    lengthStream.point = lengthPointFirst;\n\t    lengthStream.lineEnd = lengthLineEnd;\n\t  }\n\t\n\t  function lengthLineEnd() {\n\t    lengthStream.point = lengthStream.lineEnd = noop$2;\n\t  }\n\t\n\t  function lengthPointFirst(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n\t    lengthStream.point = lengthPoint;\n\t  }\n\t\n\t  function lengthPoint(lambda, phi) {\n\t    lambda *= radians, phi *= radians;\n\t    var sinPhi = sin$1(phi),\n\t        cosPhi = cos$1(phi),\n\t        delta = abs(lambda - lambda0$2),\n\t        cosDelta = cos$1(delta),\n\t        sinDelta = sin$1(delta),\n\t        x = cosPhi * sinDelta,\n\t        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n\t        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n\t    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n\t    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n\t  }\n\t\n\t  function length$2(object) {\n\t    lengthSum.reset();\n\t    geoStream(object, lengthStream);\n\t    return +lengthSum;\n\t  }\n\t\n\t  var coordinates = [null, null];\n\tvar   object$1 = {type: \"LineString\", coordinates: coordinates};\n\t  function distance(a, b) {\n\t    coordinates[0] = a;\n\t    coordinates[1] = b;\n\t    return length$2(object$1);\n\t  }\n\t\n\t  function graticuleX(y0, y1, dy) {\n\t    var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n\t    return function(x) { return y.map(function(y) { return [x, y]; }); };\n\t  }\n\t\n\t  function graticuleY(x0, x1, dx) {\n\t    var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n\t    return function(y) { return x.map(function(x) { return [x, y]; }); };\n\t  }\n\t\n\t  function graticule() {\n\t    var x1, x0, X1, X0,\n\t        y1, y0, Y1, Y0,\n\t        dx = 10, dy = dx, DX = 90, DY = 360,\n\t        x, y, X, Y,\n\t        precision = 2.5;\n\t\n\t    function graticule() {\n\t      return {type: \"MultiLineString\", coordinates: lines()};\n\t    }\n\t\n\t    function lines() {\n\t      return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n\t          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n\t          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n\t          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n\t    }\n\t\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n\t    };\n\t\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [\n\t          X(X0).concat(\n\t          Y(Y1).slice(1),\n\t          X(X1).reverse().slice(1),\n\t          Y(Y0).reverse().slice(1))\n\t        ]\n\t      };\n\t    };\n\t\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.extentMinor();\n\t      return graticule.extentMajor(_).extentMinor(_);\n\t    };\n\t\n\t    graticule.extentMajor = function(_) {\n\t      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t\n\t    graticule.extentMinor = function(_) {\n\t      if (!arguments.length) return [[x0, y0], [x1, y1]];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.stepMinor();\n\t      return graticule.stepMajor(_).stepMinor(_);\n\t    };\n\t\n\t    graticule.stepMajor = function(_) {\n\t      if (!arguments.length) return [DX, DY];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t\n\t    graticule.stepMinor = function(_) {\n\t      if (!arguments.length) return [dx, dy];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = graticuleX(y0, y1, 90);\n\t      y = graticuleY(x0, x1, precision);\n\t      X = graticuleX(Y0, Y1, 90);\n\t      Y = graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t\n\t    return graticule\n\t        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n\t        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n\t  }\n\t\n\t  function interpolate$2(a, b) {\n\t    var x0 = a[0] * radians,\n\t        y0 = a[1] * radians,\n\t        x1 = b[0] * radians,\n\t        y1 = b[1] * radians,\n\t        cy0 = cos$1(y0),\n\t        sy0 = sin$1(y0),\n\t        cy1 = cos$1(y1),\n\t        sy1 = sin$1(y1),\n\t        kx0 = cy0 * cos$1(x0),\n\t        ky0 = cy0 * sin$1(x0),\n\t        kx1 = cy1 * cos$1(x1),\n\t        ky1 = cy1 * sin$1(x1),\n\t        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n\t        k = sin$1(d);\n\t\n\t    var interpolate = d ? function(t) {\n\t      var B = sin$1(t *= d) / k,\n\t          A = sin$1(d - t) / k,\n\t          x = A * kx0 + B * kx1,\n\t          y = A * ky0 + B * ky1,\n\t          z = A * sy0 + B * sy1;\n\t      return [\n\t        atan2(y, x) * degrees$1,\n\t        atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n\t      ];\n\t    } : function() {\n\t      return [x0 * degrees$1, y0 * degrees$1];\n\t    };\n\t\n\t    interpolate.distance = d;\n\t\n\t    return interpolate;\n\t  }\n\t\n\t  function identity$7(x) {\n\t    return x;\n\t  }\n\t\n\tvar   areaSum$1 = adder();\n\tvar   areaRingSum$1 = adder();\n\t  var x00;\n\t  var y00;\n\tvar   x0$1;\n\tvar   y0$1;\n\t  var areaStream$1 = {\n\t    point: noop$2,\n\t    lineStart: noop$2,\n\t    lineEnd: noop$2,\n\t    polygonStart: function() {\n\t      areaStream$1.lineStart = areaRingStart$1;\n\t      areaStream$1.lineEnd = areaRingEnd$1;\n\t    },\n\t    polygonEnd: function() {\n\t      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n\t      areaSum$1.add(abs(areaRingSum$1));\n\t      areaRingSum$1.reset();\n\t    },\n\t    result: function() {\n\t      var area = areaSum$1 / 2;\n\t      areaSum$1.reset();\n\t      return area;\n\t    }\n\t  };\n\t\n\t  function areaRingStart$1() {\n\t    areaStream$1.point = areaPointFirst$1;\n\t  }\n\t\n\t  function areaPointFirst$1(x, y) {\n\t    areaStream$1.point = areaPoint$1;\n\t    x00 = x0$1 = x, y00 = y0$1 = y;\n\t  }\n\t\n\t  function areaPoint$1(x, y) {\n\t    areaRingSum$1.add(y0$1 * x - x0$1 * y);\n\t    x0$1 = x, y0$1 = y;\n\t  }\n\t\n\t  function areaRingEnd$1() {\n\t    areaPoint$1(x00, y00);\n\t  }\n\t\n\tvar   x0$2 = Infinity;\n\tvar   y0$2 = x0$2;\n\t  var x1 = -x0$2;\n\t  var y1 = x1;\n\t  var boundsStream$1 = {\n\t    point: boundsPoint$1,\n\t    lineStart: noop$2,\n\t    lineEnd: noop$2,\n\t    polygonStart: noop$2,\n\t    polygonEnd: noop$2,\n\t    result: function() {\n\t      var bounds = [[x0$2, y0$2], [x1, y1]];\n\t      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n\t      return bounds;\n\t    }\n\t  };\n\t\n\t  function boundsPoint$1(x, y) {\n\t    if (x < x0$2) x0$2 = x;\n\t    if (x > x1) x1 = x;\n\t    if (y < y0$2) y0$2 = y;\n\t    if (y > y1) y1 = y;\n\t  }\n\t\n\tvar   X0$1 = 0;\n\tvar   Y0$1 = 0;\n\tvar   Z0$1 = 0;\n\tvar   X1$1 = 0;\n\tvar   Y1$1 = 0;\n\tvar   Z1$1 = 0;\n\tvar   X2$1 = 0;\n\tvar   Y2$1 = 0;\n\tvar   Z2$1 = 0;\n\tvar   x00$1;\n\tvar   y00$1;\n\tvar   x0$3;\n\tvar   y0$3;\n\t  var centroidStream$1 = {\n\t    point: centroidPoint$1,\n\t    lineStart: centroidLineStart$1,\n\t    lineEnd: centroidLineEnd$1,\n\t    polygonStart: function() {\n\t      centroidStream$1.lineStart = centroidRingStart$1;\n\t      centroidStream$1.lineEnd = centroidRingEnd$1;\n\t    },\n\t    polygonEnd: function() {\n\t      centroidStream$1.point = centroidPoint$1;\n\t      centroidStream$1.lineStart = centroidLineStart$1;\n\t      centroidStream$1.lineEnd = centroidLineEnd$1;\n\t    },\n\t    result: function() {\n\t      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n\t          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n\t          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n\t          : [NaN, NaN];\n\t      X0$1 = Y0$1 = Z0$1 =\n\t      X1$1 = Y1$1 = Z1$1 =\n\t      X2$1 = Y2$1 = Z2$1 = 0;\n\t      return centroid;\n\t    }\n\t  };\n\t\n\t  function centroidPoint$1(x, y) {\n\t    X0$1 += x;\n\t    Y0$1 += y;\n\t    ++Z0$1;\n\t  }\n\t\n\t  function centroidLineStart$1() {\n\t    centroidStream$1.point = centroidPointFirstLine;\n\t  }\n\t\n\t  function centroidPointFirstLine(x, y) {\n\t    centroidStream$1.point = centroidPointLine;\n\t    centroidPoint$1(x0$3 = x, y0$3 = y);\n\t  }\n\t\n\t  function centroidPointLine(x, y) {\n\t    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n\t    X1$1 += z * (x0$3 + x) / 2;\n\t    Y1$1 += z * (y0$3 + y) / 2;\n\t    Z1$1 += z;\n\t    centroidPoint$1(x0$3 = x, y0$3 = y);\n\t  }\n\t\n\t  function centroidLineEnd$1() {\n\t    centroidStream$1.point = centroidPoint$1;\n\t  }\n\t\n\t  function centroidRingStart$1() {\n\t    centroidStream$1.point = centroidPointFirstRing;\n\t  }\n\t\n\t  function centroidRingEnd$1() {\n\t    centroidPointRing(x00$1, y00$1);\n\t  }\n\t\n\t  function centroidPointFirstRing(x, y) {\n\t    centroidStream$1.point = centroidPointRing;\n\t    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n\t  }\n\t\n\t  function centroidPointRing(x, y) {\n\t    var dx = x - x0$3,\n\t        dy = y - y0$3,\n\t        z = sqrt$1(dx * dx + dy * dy);\n\t\n\t    X1$1 += z * (x0$3 + x) / 2;\n\t    Y1$1 += z * (y0$3 + y) / 2;\n\t    Z1$1 += z;\n\t\n\t    z = y0$3 * x - x0$3 * y;\n\t    X2$1 += z * (x0$3 + x);\n\t    Y2$1 += z * (y0$3 + y);\n\t    Z2$1 += z * 3;\n\t    centroidPoint$1(x0$3 = x, y0$3 = y);\n\t  }\n\t\n\t  function PathContext(context) {\n\t    var pointRadius = 4.5;\n\t\n\t    var stream = {\n\t      point: point,\n\t\n\t      // While inside a line, override point to moveTo then lineTo.\n\t      lineStart: function() { stream.point = pointLineStart; },\n\t      lineEnd: lineEnd,\n\t\n\t      // While inside a polygon, override lineEnd to closePath.\n\t      polygonStart: function() { stream.lineEnd = lineEndPolygon; },\n\t      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\n\t\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t\n\t      result: noop$2\n\t    };\n\t\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, tau$4);\n\t    }\n\t\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t\n\t    return stream;\n\t  }\n\t\n\t  function PathString() {\n\t    var pointCircle = circle$2(4.5),\n\t        string = [];\n\t\n\t    var stream = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = circle$2(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (string.length) {\n\t          var result = string.join(\"\");\n\t          string = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t\n\t    function point(x, y) {\n\t      string.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t\n\t    function pointLineStart(x, y) {\n\t      string.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t\n\t    function pointLine(x, y) {\n\t      string.push(\"L\", x, \",\", y);\n\t    }\n\t\n\t    function lineStart() {\n\t      stream.point = pointLineStart;\n\t    }\n\t\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t\n\t    function lineEndPolygon() {\n\t      string.push(\"Z\");\n\t    }\n\t\n\t    return stream;\n\t  }\n\t\n\t  function circle$2(radius) {\n\t    return \"m0,\" + radius\n\t        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n\t        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n\t        + \"z\";\n\t  }\n\t\n\t  function index$3() {\n\t    var pointRadius = 4.5,\n\t        projection,\n\t        projectionStream,\n\t        context,\n\t        contextStream;\n\t\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        geoStream(object, projectionStream(contextStream));\n\t      }\n\t      return contextStream.result();\n\t    }\n\t\n\t    path.area = function(object) {\n\t      geoStream(object, projectionStream(areaStream$1));\n\t      return areaStream$1.result();\n\t    };\n\t\n\t    path.bounds = function(object) {\n\t      geoStream(object, projectionStream(boundsStream$1));\n\t      return boundsStream$1.result();\n\t    };\n\t\n\t    path.centroid = function(object) {\n\t      geoStream(object, projectionStream(centroidStream$1));\n\t      return centroidStream$1.result();\n\t    };\n\t\n\t    path.projection = function(_) {\n\t      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n\t    };\n\t\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new PathString : new PathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return path;\n\t    };\n\t\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t\n\t    return path.projection(null).context(null);\n\t  }\n\t\n\t  var sum$2 = adder();\n\t\n\t  function polygonContains(polygon, point) {\n\t    var lambda = point[0],\n\t        phi = point[1],\n\t        normal = [sin$1(lambda), -cos$1(lambda), 0],\n\t        angle = 0,\n\t        winding = 0;\n\t\n\t    sum$2.reset();\n\t\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      if (!(m = (ring = polygon[i]).length)) continue;\n\t      var ring,\n\t          m,\n\t          point0 = ring[m - 1],\n\t          lambda0 = point0[0],\n\t          phi0 = point0[1] / 2 + quarterPi,\n\t          sinPhi0 = sin$1(phi0),\n\t          cosPhi0 = cos$1(phi0);\n\t\n\t      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n\t        var point1 = ring[j],\n\t            lambda1 = point1[0],\n\t            phi1 = point1[1] / 2 + quarterPi,\n\t            sinPhi1 = sin$1(phi1),\n\t            cosPhi1 = cos$1(phi1),\n\t            delta = lambda1 - lambda0,\n\t            sign = delta >= 0 ? 1 : -1,\n\t            absDelta = sign * delta,\n\t            antimeridian = absDelta > pi$4,\n\t            k = sinPhi0 * sinPhi1;\n\t\n\t        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n\t        angle += antimeridian ? delta + sign * tau$4 : delta;\n\t\n\t        // Are the longitudes either side of the point’s meridian (lambda),\n\t        // and are the latitudes smaller than the parallel (phi)?\n\t        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n\t          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n\t          cartesianNormalizeInPlace(arc);\n\t          var intersection = cartesianCross(normal, arc);\n\t          cartesianNormalizeInPlace(intersection);\n\t          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n\t          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // First, determine whether the South pole is inside or outside:\n\t    //\n\t    // It is inside if:\n\t    // * the polygon winds around it in a clockwise direction.\n\t    // * the polygon does not (cumulatively) wind around it, but has a negative\n\t    //   (counter-clockwise) area.\n\t    //\n\t    // Second, count the (signed) number of times a segment crosses a lambda\n\t    // from the point to the South pole.  If it is zero, then the point is the\n\t    // same side as the South pole.\n\t\n\t    return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n\t  }\n\t\n\t  function clip(pointVisible, clipLine, interpolate, start) {\n\t    return function(rotate, sink) {\n\t      var line = clipLine(sink),\n\t          rotatedStart = rotate.invert(start[0], start[1]),\n\t          ringBuffer = clipBuffer(),\n\t          ringSink = clipLine(ringBuffer),\n\t          polygonStarted = false,\n\t          polygon,\n\t          segments,\n\t          ring;\n\t\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = merge(segments);\n\t          var startInside = polygonContains(polygon, rotatedStart);\n\t          if (segments.length) {\n\t            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n\t          } else if (startInside) {\n\t            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t            sink.lineStart();\n\t            interpolate(null, null, 1, sink);\n\t            sink.lineEnd();\n\t          }\n\t          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          sink.polygonStart();\n\t          sink.lineStart();\n\t          interpolate(null, null, 1, sink);\n\t          sink.lineEnd();\n\t          sink.polygonEnd();\n\t        }\n\t      };\n\t\n\t      function point(lambda, phi) {\n\t        var point = rotate(lambda, phi);\n\t        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n\t      }\n\t\n\t      function pointLine(lambda, phi) {\n\t        var point = rotate(lambda, phi);\n\t        line.point(point[0], point[1]);\n\t      }\n\t\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t\n\t      function pointRing(lambda, phi) {\n\t        ring.push([lambda, phi]);\n\t        var point = rotate(lambda, phi);\n\t        ringSink.point(point[0], point[1]);\n\t      }\n\t\n\t      function ringStart() {\n\t        ringSink.lineStart();\n\t        ring = [];\n\t      }\n\t\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringSink.lineEnd();\n\t\n\t        var clean = ringSink.clean(),\n\t            ringSegments = ringBuffer.result(),\n\t            i, n = ringSegments.length, m,\n\t            segment,\n\t            point;\n\t\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t\n\t        if (!n) return;\n\t\n\t        // No intersections.\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          if ((m = segment.length - 1) > 0) {\n\t            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n\t            sink.lineStart();\n\t            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n\t            sink.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t\n\t        // Rejoin connected segments.\n\t        // TODO reuse ringBuffer.rejoin()?\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t\n\t        segments.push(ringSegments.filter(validSegment));\n\t      }\n\t\n\t      return clip;\n\t    };\n\t  }\n\t\n\t  function validSegment(segment) {\n\t    return segment.length > 1;\n\t  }\n\t\n\t  // Intersections are sorted along the clip edge. For both antimeridian cutting\n\t  // and circle clipping, the same comparison is used.\n\t  function compareIntersection(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n\t         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n\t  }\n\t\n\t  var clipAntimeridian = clip(\n\t    function() { return true; },\n\t    clipAntimeridianLine,\n\t    clipAntimeridianInterpolate,\n\t    [-pi$4, -halfPi$3]\n\t  );\n\t\n\t  // Takes a line and cuts into visible segments. Return values: 0 - there were\n\t  // intersections or the line was empty; 1 - no intersections; 2 - there were\n\t  // intersections, and the first and last segments should be rejoined.\n\t  function clipAntimeridianLine(stream) {\n\t    var lambda0 = NaN,\n\t        phi0 = NaN,\n\t        sign0 = NaN,\n\t        clean; // no intersections\n\t\n\t    return {\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(lambda1, phi1) {\n\t        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n\t            delta = abs(lambda1 - lambda0);\n\t        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n\t          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n\t          stream.point(sign0, phi0);\n\t          stream.lineEnd();\n\t          stream.lineStart();\n\t          stream.point(sign1, phi0);\n\t          stream.point(lambda1, phi0);\n\t          clean = 0;\n\t        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n\t          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n\t          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n\t          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n\t          stream.point(sign0, phi0);\n\t          stream.lineEnd();\n\t          stream.lineStart();\n\t          stream.point(sign1, phi0);\n\t          clean = 0;\n\t        }\n\t        stream.point(lambda0 = lambda1, phi0 = phi1);\n\t        sign0 = sign1;\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t        lambda0 = phi0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean; // if intersections, rejoin first and last segments\n\t      }\n\t    };\n\t  }\n\t\n\t  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n\t    var cosPhi0,\n\t        cosPhi1,\n\t        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n\t    return abs(sinLambda0Lambda1) > epsilon$4\n\t        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n\t            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n\t            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n\t        : (phi0 + phi1) / 2;\n\t  }\n\t\n\t  function clipAntimeridianInterpolate(from, to, direction, stream) {\n\t    var phi;\n\t    if (from == null) {\n\t      phi = direction * halfPi$3;\n\t      stream.point(-pi$4, phi);\n\t      stream.point(0, phi);\n\t      stream.point(pi$4, phi);\n\t      stream.point(pi$4, 0);\n\t      stream.point(pi$4, -phi);\n\t      stream.point(0, -phi);\n\t      stream.point(-pi$4, -phi);\n\t      stream.point(-pi$4, 0);\n\t      stream.point(-pi$4, phi);\n\t    } else if (abs(from[0] - to[0]) > epsilon$4) {\n\t      var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n\t      phi = direction * lambda / 2;\n\t      stream.point(-lambda, phi);\n\t      stream.point(0, phi);\n\t      stream.point(lambda, phi);\n\t    } else {\n\t      stream.point(to[0], to[1]);\n\t    }\n\t  }\n\t\n\t  function clipCircle(radius, delta) {\n\t    var cr = cos$1(radius),\n\t        smallRadius = cr > 0,\n\t        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\t\n\t    function interpolate(from, to, direction, stream) {\n\t      circleStream(stream, radius, delta, direction, from, to);\n\t    }\n\t\n\t    function visible(lambda, phi) {\n\t      return cos$1(lambda) * cos$1(phi) > cr;\n\t    }\n\t\n\t    // Takes a line and cuts into visible segments. Return values used for polygon\n\t    // clipping: 0 - there were intersections or the line was empty; 1 - no\n\t    // intersections 2 - there were intersections, and the first and last segments\n\t    // should be rejoined.\n\t    function clipLine(stream) {\n\t      var point0, // previous point\n\t          c0, // code for previous point\n\t          v0, // visibility of previous point\n\t          v00, // visibility of first point\n\t          clean; // no intersections\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(lambda, phi) {\n\t          var point1 = [lambda, phi],\n\t              point2,\n\t              v = visible(lambda, phi),\n\t              c = smallRadius\n\t                ? v ? 0 : code(lambda, phi)\n\t                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n\t          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n\t          // Handle degeneracies.\n\t          // TODO ignore if not clipping polygons.\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n\t              point1[0] += epsilon$4;\n\t              point1[1] += epsilon$4;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              // outside going in\n\t              stream.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              stream.point(point2[0], point2[1]);\n\t            } else {\n\t              // inside going out\n\t              point2 = intersect(point0, point1);\n\t              stream.point(point2[0], point2[1]);\n\t              stream.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            // If the codes for two points are different, or are both zero,\n\t            // and there this segment intersects with the small circle.\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                stream.lineStart();\n\t                stream.point(t[0][0], t[0][1]);\n\t                stream.point(t[1][0], t[1][1]);\n\t                stream.lineEnd();\n\t              } else {\n\t                stream.point(t[1][0], t[1][1]);\n\t                stream.lineEnd();\n\t                stream.lineStart();\n\t                stream.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !pointEqual(point0, point1))) {\n\t            stream.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) stream.lineEnd();\n\t          point0 = null;\n\t        },\n\t        // Rejoin first and last segments if there were intersections and the first\n\t        // and last points were visible.\n\t        clean: function() {\n\t          return clean | ((v00 && v0) << 1);\n\t        }\n\t      };\n\t    }\n\t\n\t    // Intersects the great circle between a and b with the clip circle.\n\t    function intersect(a, b, two) {\n\t      var pa = cartesian(a),\n\t          pb = cartesian(b);\n\t\n\t      // We have two planes, n1.p = d1 and n2.p = d2.\n\t      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\t      var n1 = [1, 0, 0], // normal\n\t          n2 = cartesianCross(pa, pb),\n\t          n2n2 = cartesianDot(n2, n2),\n\t          n1n2 = n2[0], // cartesianDot(n1, n2),\n\t          determinant = n2n2 - n1n2 * n1n2;\n\t\n\t      // Two polar points.\n\t      if (!determinant) return !two && a;\n\t\n\t      var c1 =  cr * n2n2 / determinant,\n\t          c2 = -cr * n1n2 / determinant,\n\t          n1xn2 = cartesianCross(n1, n2),\n\t          A = cartesianScale(n1, c1),\n\t          B = cartesianScale(n2, c2);\n\t      cartesianAddInPlace(A, B);\n\t\n\t      // Solve |p(t)|^2 = 1.\n\t      var u = n1xn2,\n\t          w = cartesianDot(A, u),\n\t          uu = cartesianDot(u, u),\n\t          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\t\n\t      if (t2 < 0) return;\n\t\n\t      var t = sqrt$1(t2),\n\t          q = cartesianScale(u, (-w - t) / uu);\n\t      cartesianAddInPlace(q, A);\n\t      q = spherical(q);\n\t\n\t      if (!two) return q;\n\t\n\t      // Two intersection points.\n\t      var lambda0 = a[0],\n\t          lambda1 = b[0],\n\t          phi0 = a[1],\n\t          phi1 = b[1],\n\t          z;\n\t\n\t      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\t\n\t      var delta = lambda1 - lambda0,\n\t          polar = abs(delta - pi$4) < epsilon$4,\n\t          meridian = polar || delta < epsilon$4;\n\t\n\t      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\t\n\t      // Check that the first point is between a and b.\n\t      if (meridian\n\t          ? polar\n\t            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n\t            : phi0 <= q[1] && q[1] <= phi1\n\t          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n\t        var q1 = cartesianScale(u, (-w + t) / uu);\n\t        cartesianAddInPlace(q1, A);\n\t        return [q, spherical(q1)];\n\t      }\n\t    }\n\t\n\t    // Generates a 4-bit vector representing the location of a point relative to\n\t    // the small circle's bounding box.\n\t    function code(lambda, phi) {\n\t      var r = smallRadius ? radius : pi$4 - radius,\n\t          code = 0;\n\t      if (lambda < -r) code |= 1; // left\n\t      else if (lambda > r) code |= 2; // right\n\t      if (phi < -r) code |= 4; // below\n\t      else if (phi > r) code |= 8; // above\n\t      return code;\n\t    }\n\t\n\t    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n\t  }\n\t\n\t  function transform$1(prototype) {\n\t    return {\n\t      stream: transform$2(prototype)\n\t    };\n\t  }\n\t\n\t  function transform$2(prototype) {\n\t    function T() {}\n\t    var p = T.prototype = Object.create(Transform$1.prototype);\n\t    for (var k in prototype) p[k] = prototype[k];\n\t    return function(stream) {\n\t      var t = new T;\n\t      t.stream = stream;\n\t      return t;\n\t    };\n\t  }\n\t\n\t  function Transform$1() {}\n\t\n\t  Transform$1.prototype = {\n\t    point: function(x, y) { this.stream.point(x, y); },\n\t    sphere: function() { this.stream.sphere(); },\n\t    lineStart: function() { this.stream.lineStart(); },\n\t    lineEnd: function() { this.stream.lineEnd(); },\n\t    polygonStart: function() { this.stream.polygonStart(); },\n\t    polygonEnd: function() { this.stream.polygonEnd(); }\n\t  };\n\t\n\t  function fit(project, extent, object) {\n\t    var w = extent[1][0] - extent[0][0],\n\t        h = extent[1][1] - extent[0][1],\n\t        clip = project.clipExtent && project.clipExtent();\n\t\n\t    project\n\t        .scale(150)\n\t        .translate([0, 0]);\n\t\n\t    if (clip != null) project.clipExtent(null);\n\t\n\t    geoStream(object, project.stream(boundsStream$1));\n\t\n\t    var b = boundsStream$1.result(),\n\t        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n\t        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n\t        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\t\n\t    if (clip != null) project.clipExtent(clip);\n\t\n\t    return project\n\t        .scale(k * 150)\n\t        .translate([x, y]);\n\t  }\n\t\n\t  function fitSize(project) {\n\t    return function(size, object) {\n\t      return fit(project, [[0, 0], size], object);\n\t    };\n\t  }\n\t\n\t  function fitExtent(project) {\n\t    return function(extent, object) {\n\t      return fit(project, extent, object);\n\t    };\n\t  }\n\t\n\t  var maxDepth = 16;\n\t  var cosMinDistance = cos$1(30 * radians);\n\t  // cos(minimum angular distance)\n\t\n\t  function resample(project, delta2) {\n\t    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n\t  }\n\t\n\t  function resampleNone(project) {\n\t    return transform$2({\n\t      point: function(x, y) {\n\t        x = project(x, y);\n\t        this.stream.point(x[0], x[1]);\n\t      }\n\t    });\n\t  }\n\t\n\t  function resample$1(project, delta2) {\n\t\n\t    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0,\n\t          dy = y1 - y0,\n\t          d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * delta2 && depth--) {\n\t        var a = a0 + a1,\n\t            b = b0 + b1,\n\t            c = c0 + c1,\n\t            m = sqrt$1(a * a + b * b + c * c),\n\t            phi2 = asin$1(c /= m),\n\t            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n\t            p = project(lambda2, phi2),\n\t            x2 = p[0],\n\t            y2 = p[1],\n\t            dx2 = x2 - x0,\n\t            dy2 = y2 - y0,\n\t            dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > delta2 // perpendicular projected distance\n\t            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n\t            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n\t          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    return function(stream) {\n\t      var lambda00, x00, y00, a00, b00, c00, // first point\n\t          lambda0, x0, y0, a0, b0, c0; // previous point\n\t\n\t      var resampleStream = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n\t        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n\t      };\n\t\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resampleStream.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t\n\t      function linePoint(lambda, phi) {\n\t        var c = cartesian([lambda, phi]), p = project(lambda, phi);\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t\n\t      function lineEnd() {\n\t        resampleStream.point = point;\n\t        stream.lineEnd();\n\t      }\n\t\n\t      function ringStart() {\n\t        lineStart();\n\t        resampleStream.point = ringPoint;\n\t        resampleStream.lineEnd = ringEnd;\n\t      }\n\t\n\t      function ringPoint(lambda, phi) {\n\t        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resampleStream.point = linePoint;\n\t      }\n\t\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n\t        resampleStream.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t\n\t      return resampleStream;\n\t    };\n\t  }\n\t\n\t  var transformRadians = transform$2({\n\t    point: function(x, y) {\n\t      this.stream.point(x * radians, y * radians);\n\t    }\n\t  });\n\t\n\t  function projection(project) {\n\t    return projectionMutator(function() { return project; })();\n\t  }\n\t\n\t  function projectionMutator(projectAt) {\n\t    var project,\n\t        k = 150, // scale\n\t        x = 480, y = 250, // translate\n\t        dx, dy, lambda = 0, phi = 0, // center\n\t        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n\t        theta = null, preclip = clipAntimeridian, // clip angle\n\t        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n\t        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n\t        cache,\n\t        cacheStream;\n\t\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * radians, point[1] * radians);\n\t      return [point[0] * k + dx, dy - point[1] * k];\n\t    }\n\t\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n\t      return point && [point[0] * degrees$1, point[1] * degrees$1];\n\t    }\n\t\n\t    function projectTransform(x, y) {\n\t      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n\t    }\n\t\n\t    projection.stream = function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n\t    };\n\t\n\t    projection.clipAngle = function(_) {\n\t      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n\t    };\n\t\n\t    projection.clipExtent = function(_) {\n\t      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n\t    };\n\t\n\t    projection.scale = function(_) {\n\t      return arguments.length ? (k = +_, recenter()) : k;\n\t    };\n\t\n\t    projection.translate = function(_) {\n\t      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n\t    };\n\t\n\t    projection.center = function(_) {\n\t      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n\t    };\n\t\n\t    projection.rotate = function(_) {\n\t      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n\t    };\n\t\n\t    projection.precision = function(_) {\n\t      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n\t    };\n\t\n\t    projection.fitExtent = fitExtent(projection);\n\t\n\t    projection.fitSize = fitSize(projection);\n\t\n\t    function recenter() {\n\t      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n\t      var center = project(lambda, phi);\n\t      dx = x - center[0] * k;\n\t      dy = y + center[1] * k;\n\t      return reset();\n\t    }\n\t\n\t    function reset() {\n\t      cache = cacheStream = null;\n\t      return projection;\n\t    }\n\t\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return recenter();\n\t    };\n\t  }\n\t\n\t  function conicProjection(projectAt) {\n\t    var phi0 = 0,\n\t        phi1 = pi$4 / 3,\n\t        m = projectionMutator(projectAt),\n\t        p = m(phi0, phi1);\n\t\n\t    p.parallels = function(_) {\n\t      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n\t    };\n\t\n\t    return p;\n\t  }\n\t\n\t  function conicEqualAreaRaw(y0, y1) {\n\t    var sy0 = sin$1(y0),\n\t        n = (sy0 + sin$1(y1)) / 2,\n\t        c = 1 + sy0 * (2 * n - sy0),\n\t        r0 = sqrt$1(c) / n;\n\t\n\t    function project(x, y) {\n\t      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n\t      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n\t    }\n\t\n\t    project.invert = function(x, y) {\n\t      var r0y = r0 - y;\n\t      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n\t    };\n\t\n\t    return project;\n\t  }\n\t\n\t  function conicEqualArea() {\n\t    return conicProjection(conicEqualAreaRaw)\n\t        .scale(155.424)\n\t        .center([0, 33.6442]);\n\t  }\n\t\n\t  function albers() {\n\t    return conicEqualArea()\n\t        .parallels([29.5, 45.5])\n\t        .scale(1070)\n\t        .translate([480, 250])\n\t        .rotate([96, 0])\n\t        .center([-0.6, 38.7]);\n\t  }\n\t\n\t  // The projections must have mutually exclusive clip regions on the sphere,\n\t  // as this will avoid emitting interleaving lines and polygons.\n\t  function multiplex(streams) {\n\t    var n = streams.length;\n\t    return {\n\t      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n\t      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n\t      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n\t      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n\t      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n\t      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n\t    };\n\t  }\n\t\n\t  // A composite projection for the United States, configured by default for\n\t  // 960×500. The projection also works quite well at 960×600 if you change the\n\t  // scale to 1285 and adjust the translate accordingly. The set of standard\n\t  // parallels for each region comes from USGS, which is published here:\n\t  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n\t  function albersUsa() {\n\t    var cache,\n\t        cacheStream,\n\t        lower48 = albers(), lower48Point,\n\t        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n\t        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n\t        point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\t\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      return point = null,\n\t          (lower48Point.point(x, y), point)\n\t          || (alaskaPoint.point(x, y), point)\n\t          || (hawaiiPoint.point(x, y), point);\n\t    }\n\t\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(),\n\t          t = lower48.translate(),\n\t          x = (coordinates[0] - t[0]) / k,\n\t          y = (coordinates[1] - t[1]) / k;\n\t      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n\t          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n\t          : lower48).invert(coordinates);\n\t    };\n\t\n\t    albersUsa.stream = function(stream) {\n\t      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n\t    };\n\t\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t\n\t      lower48Point = lower48\n\t          .translate(_)\n\t          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n\t          .stream(pointStream);\n\t\n\t      alaskaPoint = alaska\n\t          .translate([x - 0.307 * k, y + 0.201 * k])\n\t          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t          .stream(pointStream);\n\t\n\t      hawaiiPoint = hawaii\n\t          .translate([x - 0.205 * k, y + 0.212 * k])\n\t          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n\t          .stream(pointStream);\n\t\n\t      return albersUsa;\n\t    };\n\t\n\t    albersUsa.fitExtent = fitExtent(albersUsa);\n\t\n\t    albersUsa.fitSize = fitSize(albersUsa);\n\t\n\t    return albersUsa.scale(1070);\n\t  }\n\t\n\t  function azimuthalRaw(scale) {\n\t    return function(x, y) {\n\t      var cx = cos$1(x),\n\t          cy = cos$1(y),\n\t          k = scale(cx * cy);\n\t      return [\n\t        k * cy * sin$1(x),\n\t        k * sin$1(y)\n\t      ];\n\t    }\n\t  }\n\t\n\t  function azimuthalInvert(angle) {\n\t    return function(x, y) {\n\t      var z = sqrt$1(x * x + y * y),\n\t          c = angle(z),\n\t          sc = sin$1(c),\n\t          cc = cos$1(c);\n\t      return [\n\t        atan2(x * sc, z * cc),\n\t        asin$1(z && y * sc / z)\n\t      ];\n\t    }\n\t  }\n\t\n\t  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n\t    return sqrt$1(2 / (1 + cxcy));\n\t  });\n\t\n\t  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n\t    return 2 * asin$1(z / 2);\n\t  });\n\t\n\t  function azimuthalEqualArea() {\n\t    return projection(azimuthalEqualAreaRaw)\n\t        .scale(124.75)\n\t        .clipAngle(180 - 1e-3);\n\t  }\n\t\n\t  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n\t    return (c = acos(c)) && c / sin$1(c);\n\t  });\n\t\n\t  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n\t    return z;\n\t  });\n\t\n\t  function azimuthalEquidistant() {\n\t    return projection(azimuthalEquidistantRaw)\n\t        .scale(79.4188)\n\t        .clipAngle(180 - 1e-3);\n\t  }\n\t\n\t  function mercatorRaw(lambda, phi) {\n\t    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n\t  }\n\t\n\t  mercatorRaw.invert = function(x, y) {\n\t    return [x, 2 * atan(exp(y)) - halfPi$3];\n\t  };\n\t\n\t  function mercator() {\n\t    return mercatorProjection(mercatorRaw)\n\t        .scale(961 / tau$4);\n\t  }\n\t\n\t  function mercatorProjection(project) {\n\t    var m = projection(project),\n\t        scale = m.scale,\n\t        translate = m.translate,\n\t        clipExtent = m.clipExtent,\n\t        clipAuto;\n\t\n\t    m.scale = function(_) {\n\t      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n\t    };\n\t\n\t    m.translate = function(_) {\n\t      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n\t    };\n\t\n\t    m.clipExtent = function(_) {\n\t      if (!arguments.length) return clipAuto ? null : clipExtent();\n\t      if (clipAuto = _ == null) {\n\t        var k = pi$4 * scale(),\n\t            t = translate();\n\t        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n\t      }\n\t      clipExtent(_);\n\t      return m;\n\t    };\n\t\n\t    return m.clipExtent(null);\n\t  }\n\t\n\t  function tany(y) {\n\t    return tan((halfPi$3 + y) / 2);\n\t  }\n\t\n\t  function conicConformalRaw(y0, y1) {\n\t    var cy0 = cos$1(y0),\n\t        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n\t        f = cy0 * pow$1(tany(y0), n) / n;\n\t\n\t    if (!n) return mercatorRaw;\n\t\n\t    function project(x, y) {\n\t      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n\t      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n\t      var r = f / pow$1(tany(y), n);\n\t      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n\t    }\n\t\n\t    project.invert = function(x, y) {\n\t      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n\t      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n\t    };\n\t\n\t    return project;\n\t  }\n\t\n\t  function conicConformal() {\n\t    return conicProjection(conicConformalRaw)\n\t        .scale(109.5)\n\t        .parallels([30, 30]);\n\t  }\n\t\n\t  function equirectangularRaw(lambda, phi) {\n\t    return [lambda, phi];\n\t  }\n\t\n\t  equirectangularRaw.invert = equirectangularRaw;\n\t\n\t  function equirectangular() {\n\t    return projection(equirectangularRaw)\n\t        .scale(152.63);\n\t  }\n\t\n\t  function conicEquidistantRaw(y0, y1) {\n\t    var cy0 = cos$1(y0),\n\t        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n\t        g = cy0 / n + y0;\n\t\n\t    if (abs(n) < epsilon$4) return equirectangularRaw;\n\t\n\t    function project(x, y) {\n\t      var gy = g - y, nx = n * x;\n\t      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n\t    }\n\t\n\t    project.invert = function(x, y) {\n\t      var gy = g - y;\n\t      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n\t    };\n\t\n\t    return project;\n\t  }\n\t\n\t  function conicEquidistant() {\n\t    return conicProjection(conicEquidistantRaw)\n\t        .scale(131.154)\n\t        .center([0, 13.9389]);\n\t  }\n\t\n\t  function gnomonicRaw(x, y) {\n\t    var cy = cos$1(y), k = cos$1(x) * cy;\n\t    return [cy * sin$1(x) / k, sin$1(y) / k];\n\t  }\n\t\n\t  gnomonicRaw.invert = azimuthalInvert(atan);\n\t\n\t  function gnomonic() {\n\t    return projection(gnomonicRaw)\n\t        .scale(144.049)\n\t        .clipAngle(60);\n\t  }\n\t\n\t  function orthographicRaw(x, y) {\n\t    return [cos$1(y) * sin$1(x), sin$1(y)];\n\t  }\n\t\n\t  orthographicRaw.invert = azimuthalInvert(asin$1);\n\t\n\t  function orthographic() {\n\t    return projection(orthographicRaw)\n\t        .scale(249.5)\n\t        .clipAngle(90 + epsilon$4);\n\t  }\n\t\n\t  function stereographicRaw(x, y) {\n\t    var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n\t    return [cy * sin$1(x) / k, sin$1(y) / k];\n\t  }\n\t\n\t  stereographicRaw.invert = azimuthalInvert(function(z) {\n\t    return 2 + atan(z);\n\t  });\n\t\n\t  function stereographic() {\n\t    return projection(stereographicRaw)\n\t        .scale(250)\n\t        .clipAngle(142);\n\t  }\n\t\n\t  function transverseMercatorRaw(lambda, phi) {\n\t    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n\t  }\n\t\n\t  transverseMercatorRaw.invert = function(x, y) {\n\t    return [-y, 2 * atan(exp(x)) - halfPi$3];\n\t  };\n\t\n\t  function transverseMercator() {\n\t    var m = mercatorProjection(transverseMercatorRaw),\n\t        center = m.center,\n\t        rotate = m.rotate;\n\t\n\t    m.center = function(_) {\n\t      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n\t    };\n\t\n\t    m.rotate = function(_) {\n\t      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n\t    };\n\t\n\t    return rotate([0, 0, 90])\n\t        .scale(159.155);\n\t  }\n\t\n\t  exports.version = version;\n\t  exports.bisect = bisectRight;\n\t  exports.bisectRight = bisectRight;\n\t  exports.bisectLeft = bisectLeft;\n\t  exports.ascending = ascending;\n\t  exports.bisector = bisector;\n\t  exports.descending = descending;\n\t  exports.deviation = deviation;\n\t  exports.extent = extent;\n\t  exports.histogram = histogram;\n\t  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n\t  exports.thresholdScott = scott;\n\t  exports.thresholdSturges = sturges;\n\t  exports.max = max;\n\t  exports.mean = mean;\n\t  exports.median = median;\n\t  exports.merge = merge;\n\t  exports.min = min;\n\t  exports.pairs = pairs;\n\t  exports.permute = permute;\n\t  exports.quantile = threshold;\n\t  exports.range = range;\n\t  exports.scan = scan;\n\t  exports.shuffle = shuffle;\n\t  exports.sum = sum;\n\t  exports.ticks = ticks;\n\t  exports.tickStep = tickStep;\n\t  exports.transpose = transpose;\n\t  exports.variance = variance;\n\t  exports.zip = zip;\n\t  exports.entries = entries;\n\t  exports.keys = keys;\n\t  exports.values = values;\n\t  exports.map = map$1;\n\t  exports.set = set;\n\t  exports.nest = nest;\n\t  exports.randomUniform = uniform;\n\t  exports.randomNormal = normal;\n\t  exports.randomLogNormal = logNormal;\n\t  exports.randomBates = bates;\n\t  exports.randomIrwinHall = irwinHall;\n\t  exports.randomExponential = exponential;\n\t  exports.easeLinear = linear;\n\t  exports.easeQuad = quadInOut;\n\t  exports.easeQuadIn = quadIn;\n\t  exports.easeQuadOut = quadOut;\n\t  exports.easeQuadInOut = quadInOut;\n\t  exports.easeCubic = easeCubicInOut;\n\t  exports.easeCubicIn = cubicIn;\n\t  exports.easeCubicOut = cubicOut;\n\t  exports.easeCubicInOut = easeCubicInOut;\n\t  exports.easePoly = polyInOut;\n\t  exports.easePolyIn = polyIn;\n\t  exports.easePolyOut = polyOut;\n\t  exports.easePolyInOut = polyInOut;\n\t  exports.easeSin = sinInOut;\n\t  exports.easeSinIn = sinIn;\n\t  exports.easeSinOut = sinOut;\n\t  exports.easeSinInOut = sinInOut;\n\t  exports.easeExp = expInOut;\n\t  exports.easeExpIn = expIn;\n\t  exports.easeExpOut = expOut;\n\t  exports.easeExpInOut = expInOut;\n\t  exports.easeCircle = circleInOut;\n\t  exports.easeCircleIn = circleIn;\n\t  exports.easeCircleOut = circleOut;\n\t  exports.easeCircleInOut = circleInOut;\n\t  exports.easeBounce = bounceOut;\n\t  exports.easeBounceIn = bounceIn;\n\t  exports.easeBounceOut = bounceOut;\n\t  exports.easeBounceInOut = bounceInOut;\n\t  exports.easeBack = backInOut;\n\t  exports.easeBackIn = backIn;\n\t  exports.easeBackOut = backOut;\n\t  exports.easeBackInOut = backInOut;\n\t  exports.easeElastic = elasticOut;\n\t  exports.easeElasticIn = elasticIn;\n\t  exports.easeElasticOut = elasticOut;\n\t  exports.easeElasticInOut = elasticInOut;\n\t  exports.polygonArea = area;\n\t  exports.polygonCentroid = centroid;\n\t  exports.polygonHull = hull;\n\t  exports.polygonContains = contains;\n\t  exports.polygonLength = length$1;\n\t  exports.path = path;\n\t  exports.quadtree = quadtree;\n\t  exports.queue = queue;\n\t  exports.arc = arc;\n\t  exports.area = area$1;\n\t  exports.line = line;\n\t  exports.pie = pie;\n\t  exports.radialArea = radialArea;\n\t  exports.radialLine = radialLine$1;\n\t  exports.symbol = symbol;\n\t  exports.symbols = symbols;\n\t  exports.symbolCircle = circle;\n\t  exports.symbolCross = cross$1;\n\t  exports.symbolDiamond = diamond;\n\t  exports.symbolSquare = square;\n\t  exports.symbolStar = star;\n\t  exports.symbolTriangle = triangle;\n\t  exports.symbolWye = wye;\n\t  exports.curveBasisClosed = basisClosed;\n\t  exports.curveBasisOpen = basisOpen;\n\t  exports.curveBasis = basis;\n\t  exports.curveBundle = bundle;\n\t  exports.curveCardinalClosed = cardinalClosed;\n\t  exports.curveCardinalOpen = cardinalOpen;\n\t  exports.curveCardinal = cardinal;\n\t  exports.curveCatmullRomClosed = catmullRomClosed;\n\t  exports.curveCatmullRomOpen = catmullRomOpen;\n\t  exports.curveCatmullRom = catmullRom;\n\t  exports.curveLinearClosed = linearClosed;\n\t  exports.curveLinear = curveLinear;\n\t  exports.curveMonotoneX = monotoneX;\n\t  exports.curveMonotoneY = monotoneY;\n\t  exports.curveNatural = natural;\n\t  exports.curveStep = step;\n\t  exports.curveStepAfter = stepAfter;\n\t  exports.curveStepBefore = stepBefore;\n\t  exports.stack = stack;\n\t  exports.stackOffsetExpand = expand;\n\t  exports.stackOffsetNone = none;\n\t  exports.stackOffsetSilhouette = silhouette;\n\t  exports.stackOffsetWiggle = wiggle;\n\t  exports.stackOrderAscending = ascending$1;\n\t  exports.stackOrderDescending = descending$2;\n\t  exports.stackOrderInsideOut = insideOut;\n\t  exports.stackOrderNone = none$1;\n\t  exports.stackOrderReverse = reverse;\n\t  exports.color = color;\n\t  exports.rgb = colorRgb;\n\t  exports.hsl = colorHsl;\n\t  exports.lab = lab;\n\t  exports.hcl = colorHcl;\n\t  exports.cubehelix = cubehelix;\n\t  exports.interpolate = interpolate;\n\t  exports.interpolateArray = array$1;\n\t  exports.interpolateDate = date;\n\t  exports.interpolateNumber = interpolateNumber;\n\t  exports.interpolateObject = object;\n\t  exports.interpolateRound = interpolateRound;\n\t  exports.interpolateString = interpolateString;\n\t  exports.interpolateTransformCss = interpolateTransform$1;\n\t  exports.interpolateTransformSvg = interpolateTransform$2;\n\t  exports.interpolateZoom = interpolateZoom;\n\t  exports.interpolateRgb = interpolateRgb;\n\t  exports.interpolateRgbBasis = rgbBasis;\n\t  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n\t  exports.interpolateHsl = hsl$1;\n\t  exports.interpolateHslLong = hslLong;\n\t  exports.interpolateLab = lab$1;\n\t  exports.interpolateHcl = hcl$1;\n\t  exports.interpolateHclLong = hclLong;\n\t  exports.interpolateCubehelix = cubehelix$2;\n\t  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n\t  exports.interpolateBasis = basis$2;\n\t  exports.interpolateBasisClosed = basisClosed$1;\n\t  exports.quantize = quantize;\n\t  exports.dispatch = dispatch;\n\t  exports.dsvFormat = dsv;\n\t  exports.csvParse = csvParse;\n\t  exports.csvParseRows = csvParseRows;\n\t  exports.csvFormat = csvFormat;\n\t  exports.csvFormatRows = csvFormatRows;\n\t  exports.tsvParse = tsvParse;\n\t  exports.tsvParseRows = tsvParseRows;\n\t  exports.tsvFormat = tsvFormat;\n\t  exports.tsvFormatRows = tsvFormatRows;\n\t  exports.request = request;\n\t  exports.html = html;\n\t  exports.json = json;\n\t  exports.text = text;\n\t  exports.xml = xml;\n\t  exports.csv = csv$1;\n\t  exports.tsv = tsv$1;\n\t  exports.now = now;\n\t  exports.timer = timer;\n\t  exports.timerFlush = timerFlush;\n\t  exports.timeout = timeout$1;\n\t  exports.interval = interval$1;\n\t  exports.timeInterval = newInterval;\n\t  exports.timeMillisecond = millisecond;\n\t  exports.timeMilliseconds = milliseconds;\n\t  exports.timeSecond = second;\n\t  exports.timeSeconds = seconds;\n\t  exports.timeMinute = minute;\n\t  exports.timeMinutes = minutes;\n\t  exports.timeHour = hour;\n\t  exports.timeHours = hours;\n\t  exports.timeDay = day;\n\t  exports.timeDays = days;\n\t  exports.timeWeek = timeWeek;\n\t  exports.timeWeeks = sundays;\n\t  exports.timeSunday = timeWeek;\n\t  exports.timeSundays = sundays;\n\t  exports.timeMonday = timeMonday;\n\t  exports.timeMondays = mondays;\n\t  exports.timeTuesday = tuesday;\n\t  exports.timeTuesdays = tuesdays;\n\t  exports.timeWednesday = wednesday;\n\t  exports.timeWednesdays = wednesdays;\n\t  exports.timeThursday = thursday;\n\t  exports.timeThursdays = thursdays;\n\t  exports.timeFriday = friday;\n\t  exports.timeFridays = fridays;\n\t  exports.timeSaturday = saturday;\n\t  exports.timeSaturdays = saturdays;\n\t  exports.timeMonth = month;\n\t  exports.timeMonths = months;\n\t  exports.timeYear = year;\n\t  exports.timeYears = years;\n\t  exports.utcMillisecond = millisecond;\n\t  exports.utcMilliseconds = milliseconds;\n\t  exports.utcSecond = second;\n\t  exports.utcSeconds = seconds;\n\t  exports.utcMinute = utcMinute;\n\t  exports.utcMinutes = utcMinutes;\n\t  exports.utcHour = utcHour;\n\t  exports.utcHours = utcHours;\n\t  exports.utcDay = utcDay;\n\t  exports.utcDays = utcDays;\n\t  exports.utcWeek = utcWeek;\n\t  exports.utcWeeks = utcSundays;\n\t  exports.utcSunday = utcWeek;\n\t  exports.utcSundays = utcSundays;\n\t  exports.utcMonday = utcMonday;\n\t  exports.utcMondays = utcMondays;\n\t  exports.utcTuesday = utcTuesday;\n\t  exports.utcTuesdays = utcTuesdays;\n\t  exports.utcWednesday = utcWednesday;\n\t  exports.utcWednesdays = utcWednesdays;\n\t  exports.utcThursday = utcThursday;\n\t  exports.utcThursdays = utcThursdays;\n\t  exports.utcFriday = utcFriday;\n\t  exports.utcFridays = utcFridays;\n\t  exports.utcSaturday = utcSaturday;\n\t  exports.utcSaturdays = utcSaturdays;\n\t  exports.utcMonth = utcMonth;\n\t  exports.utcMonths = utcMonths;\n\t  exports.utcYear = utcYear;\n\t  exports.utcYears = utcYears;\n\t  exports.formatLocale = formatLocale;\n\t  exports.formatDefaultLocale = defaultLocale;\n\t  exports.formatSpecifier = formatSpecifier;\n\t  exports.precisionFixed = precisionFixed;\n\t  exports.precisionPrefix = precisionPrefix;\n\t  exports.precisionRound = precisionRound;\n\t  exports.isoFormat = formatIso;\n\t  exports.isoParse = parseIso;\n\t  exports.timeFormatLocale = formatLocale$1;\n\t  exports.timeFormatDefaultLocale = defaultLocale$1;\n\t  exports.scaleBand = band;\n\t  exports.scalePoint = point$4;\n\t  exports.scaleIdentity = identity$4;\n\t  exports.scaleLinear = linear$2;\n\t  exports.scaleLog = log;\n\t  exports.scaleOrdinal = ordinal;\n\t  exports.scaleImplicit = implicit;\n\t  exports.scalePow = pow;\n\t  exports.scaleSqrt = sqrt;\n\t  exports.scaleQuantile = quantile;\n\t  exports.scaleQuantize = quantize$1;\n\t  exports.scaleThreshold = threshold$1;\n\t  exports.scaleTime = time;\n\t  exports.scaleUtc = utcTime;\n\t  exports.schemeCategory10 = category10;\n\t  exports.schemeCategory20b = category20b;\n\t  exports.schemeCategory20c = category20c;\n\t  exports.schemeCategory20 = category20;\n\t  exports.scaleSequential = sequential;\n\t  exports.interpolateCubehelixDefault = cubehelix$3;\n\t  exports.interpolateRainbow = rainbow$1;\n\t  exports.interpolateWarm = warm;\n\t  exports.interpolateCool = cool;\n\t  exports.interpolateViridis = viridis;\n\t  exports.interpolateMagma = magma;\n\t  exports.interpolateInferno = inferno;\n\t  exports.interpolatePlasma = plasma;\n\t  exports.creator = creator;\n\t  exports.customEvent = customEvent;\n\t  exports.local = local;\n\t  exports.matcher = matcher$1;\n\t  exports.mouse = mouse;\n\t  exports.namespace = namespace;\n\t  exports.namespaces = namespaces;\n\t  exports.select = select;\n\t  exports.selectAll = selectAll;\n\t  exports.selection = selection;\n\t  exports.selector = selector;\n\t  exports.selectorAll = selectorAll;\n\t  exports.touch = touch;\n\t  exports.touches = touches;\n\t  exports.window = window;\n\t  exports.active = active;\n\t  exports.interrupt = interrupt;\n\t  exports.transition = transition;\n\t  exports.axisTop = axisTop;\n\t  exports.axisRight = axisRight;\n\t  exports.axisBottom = axisBottom;\n\t  exports.axisLeft = axisLeft;\n\t  exports.cluster = cluster;\n\t  exports.hierarchy = hierarchy;\n\t  exports.pack = index;\n\t  exports.packSiblings = siblings;\n\t  exports.packEnclose = enclose;\n\t  exports.partition = partition;\n\t  exports.stratify = stratify;\n\t  exports.tree = tree;\n\t  exports.treemap = index$1;\n\t  exports.treemapBinary = binary;\n\t  exports.treemapDice = treemapDice;\n\t  exports.treemapSlice = treemapSlice;\n\t  exports.treemapSliceDice = sliceDice;\n\t  exports.treemapSquarify = squarify;\n\t  exports.treemapResquarify = resquarify;\n\t  exports.forceCenter = center$1;\n\t  exports.forceCollide = collide;\n\t  exports.forceLink = link;\n\t  exports.forceManyBody = manyBody;\n\t  exports.forceSimulation = simulation;\n\t  exports.forceX = x$3;\n\t  exports.forceY = y$3;\n\t  exports.drag = drag;\n\t  exports.dragDisable = dragDisable;\n\t  exports.dragEnable = dragEnable;\n\t  exports.voronoi = voronoi;\n\t  exports.zoom = zoom;\n\t  exports.zoomIdentity = identity$6;\n\t  exports.zoomTransform = transform;\n\t  exports.brush = brush;\n\t  exports.brushX = brushX;\n\t  exports.brushY = brushY;\n\t  exports.brushSelection = brushSelection;\n\t  exports.chord = chord;\n\t  exports.ribbon = ribbon;\n\t  exports.geoAlbers = albers;\n\t  exports.geoAlbersUsa = albersUsa;\n\t  exports.geoArea = area$2;\n\t  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n\t  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n\t  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n\t  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n\t  exports.geoBounds = bounds;\n\t  exports.geoCentroid = centroid$1;\n\t  exports.geoCircle = circle$1;\n\t  exports.geoClipExtent = extent$1;\n\t  exports.geoConicConformal = conicConformal;\n\t  exports.geoConicConformalRaw = conicConformalRaw;\n\t  exports.geoConicEqualArea = conicEqualArea;\n\t  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n\t  exports.geoConicEquidistant = conicEquidistant;\n\t  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n\t  exports.geoDistance = distance;\n\t  exports.geoEquirectangular = equirectangular;\n\t  exports.geoEquirectangularRaw = equirectangularRaw;\n\t  exports.geoGnomonic = gnomonic;\n\t  exports.geoGnomonicRaw = gnomonicRaw;\n\t  exports.geoGraticule = graticule;\n\t  exports.geoInterpolate = interpolate$2;\n\t  exports.geoLength = length$2;\n\t  exports.geoMercator = mercator;\n\t  exports.geoMercatorRaw = mercatorRaw;\n\t  exports.geoOrthographic = orthographic;\n\t  exports.geoOrthographicRaw = orthographicRaw;\n\t  exports.geoPath = index$3;\n\t  exports.geoProjection = projection;\n\t  exports.geoProjectionMutator = projectionMutator;\n\t  exports.geoRotation = rotation;\n\t  exports.geoStereographic = stereographic;\n\t  exports.geoStereographicRaw = stereographicRaw;\n\t  exports.geoStream = geoStream;\n\t  exports.geoTransform = transform$1;\n\t  exports.geoTransverseMercator = transverseMercator;\n\t  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\t\n\t  Object.defineProperty(exports, '__esModule', { value: true });\n\t\n\t}));\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tif (typeof Promise === 'undefined') {\n\t  // Rejection tracking prevents a common issue where React gets into an\n\t  // inconsistent state due to an error, but it gets swallowed by a Promise,\n\t  // and the user has no idea what causes React's erratic future behavior.\n\t  __webpack_require__(8).enable();\n\t  window.Promise = __webpack_require__(7);\n\t}\n\t\n\t__webpack_require__(9);\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\tvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d3 = __webpack_require__(3);\n\tvar forceG = __webpack_require__(2);\n\t\n\tvar canvas = document.querySelector('canvas');\n\tvar width = canvas.width;\n\tvar height = canvas.height;\n\t\n\t\n\tvar nodes = d3.range(40).map(function (i) {\n\t\treturn {\n\t\t\tindex: i,\n\t\t\tx: width / 2,\n\t\t\ty: 0,\n\t\t\tr: 5\n\t\t};\n\t});\n\t\n\tvar context = canvas.getContext('2d');\n\tvar tau = 2 * Math.PI;\n\t\n\tvar render = function render() {\n\t\tcontext.clearRect(0, 0, width, height);\n\t\tcontext.save();\n\t\n\t\tcontext.beginPath();\n\t\tnodes.forEach(function (d) {\n\t\t\tcontext.moveTo(d.x + d.r, d.y);\n\t\t\tcontext.arc(d.x, d.y, d.r, 0, tau);\n\t\t});\n\t\tcontext.fillStyle = '#ddd';\n\t\tcontext.fill();\n\t\tcontext.strokeStyle = '#333';\n\t\tcontext.stroke();\n\t\n\t\tcontext.restore();\n\t};\n\t\n\td3.forceSimulation().nodes(nodes).force('g', forceG(width / 2, height / 2).minRadius(50).strength(10000)).force('collide', d3.forceCollide().radius(function () {\n\t\treturn 7;\n\t}).iterations(2)).alphaTarget(0.4).on('tick', render);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(1);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._61);\n\t  p._81 = 1;\n\t  p._65 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._81 === 3) {\n\t            val = val._65;\n\t          }\n\t          if (val._81 === 1) return res(i, val._65);\n\t          if (val._81 === 2) reject(val._65);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\t\n\tvar DEFAULT_WHITELIST = [\n\t  ReferenceError,\n\t  TypeError,\n\t  RangeError\n\t];\n\t\n\tvar enabled = false;\n\texports.disable = disable;\n\tfunction disable() {\n\t  enabled = false;\n\t  Promise._10 = null;\n\t  Promise._97 = null;\n\t}\n\t\n\texports.enable = enable;\n\tfunction enable(options) {\n\t  options = options || {};\n\t  if (enabled) disable();\n\t  enabled = true;\n\t  var id = 0;\n\t  var displayId = 0;\n\t  var rejections = {};\n\t  Promise._10 = function (promise) {\n\t    if (\n\t      promise._81 === 2 && // IS REJECTED\n\t      rejections[promise._72]\n\t    ) {\n\t      if (rejections[promise._72].logged) {\n\t        onHandled(promise._72);\n\t      } else {\n\t        clearTimeout(rejections[promise._72].timeout);\n\t      }\n\t      delete rejections[promise._72];\n\t    }\n\t  };\n\t  Promise._97 = function (promise, err) {\n\t    if (promise._45 === 0) { // not yet handled\n\t      promise._72 = id++;\n\t      rejections[promise._72] = {\n\t        displayId: null,\n\t        error: err,\n\t        timeout: setTimeout(\n\t          onUnhandled.bind(null, promise._72),\n\t          // For reference errors and type errors, this almost always\n\t          // means the programmer made a mistake, so log them after just\n\t          // 100ms\n\t          // otherwise, wait 2 seconds to see if they get handled\n\t          matchWhitelist(err, DEFAULT_WHITELIST)\n\t            ? 100\n\t            : 2000\n\t        ),\n\t        logged: false\n\t      };\n\t    }\n\t  };\n\t  function onUnhandled(id) {\n\t    if (\n\t      options.allRejections ||\n\t      matchWhitelist(\n\t        rejections[id].error,\n\t        options.whitelist || DEFAULT_WHITELIST\n\t      )\n\t    ) {\n\t      rejections[id].displayId = displayId++;\n\t      if (options.onUnhandled) {\n\t        rejections[id].logged = true;\n\t        options.onUnhandled(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      } else {\n\t        rejections[id].logged = true;\n\t        logError(\n\t          rejections[id].displayId,\n\t          rejections[id].error\n\t        );\n\t      }\n\t    }\n\t  }\n\t  function onHandled(id) {\n\t    if (rejections[id].logged) {\n\t      if (options.onHandled) {\n\t        options.onHandled(rejections[id].displayId, rejections[id].error);\n\t      } else if (!rejections[id].onUnhandled) {\n\t        console.warn(\n\t          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n\t        );\n\t        console.warn(\n\t          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n\t          rejections[id].displayId + '.'\n\t        );\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction logError(id, error) {\n\t  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n\t  var errStr = (error && (error.stack || error)) + '';\n\t  errStr.split('\\n').forEach(function (line) {\n\t    console.warn('  ' + line);\n\t  });\n\t}\n\t\n\tfunction matchWhitelist(error, list) {\n\t  return list.some(function (cls) {\n\t    return error instanceof cls;\n\t  });\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var list = this.map[name]\n\t    if (!list) {\n\t      list = []\n\t      this.map[name] = list\n\t    }\n\t    list.push(value)\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    var values = this.map[normalizeName(name)]\n\t    return values ? values[0] : null\n\t  }\n\t\n\t  Headers.prototype.getAll = function(name) {\n\t    return this.map[normalizeName(name)] || []\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = [normalizeValue(value)]\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n\t      this.map[name].forEach(function(value) {\n\t        callback.call(thisArg, value, name, this)\n\t      }, this)\n\t    }, this)\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsArrayBuffer(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    reader.readAsText(blob)\n\t    return fileReaderReady(reader)\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (!body) {\n\t        this._bodyText = ''\n\t      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n\t        // Only support ArrayBuffers for POST method.\n\t        // Receiving ArrayBuffers happens via Blobs, instead.\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        return this.blob().then(readBlobAsArrayBuffer)\n\t      }\n\t\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return readBlobAsText(this._bodyBlob)\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as text')\n\t        } else {\n\t          return Promise.resolve(this._bodyText)\n\t        }\n\t      }\n\t    } else {\n\t      this.text = function() {\n\t        var rejected = consumed(this)\n\t        return rejected ? rejected : Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t    if (Request.prototype.isPrototypeOf(input)) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = input\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this)\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function headers(xhr) {\n\t    var head = new Headers()\n\t    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n\t    pairs.forEach(function(header) {\n\t      var split = header.trim().split(':')\n\t      var key = split.shift().trim()\n\t      var value = split.join(':').trim()\n\t      head.append(key, value)\n\t    })\n\t    return head\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = options.status\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = options.statusText\n\t    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request\n\t      if (Request.prototype.isPrototypeOf(input) && !init) {\n\t        request = input\n\t      } else {\n\t        request = new Request(input, init)\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      function responseURL() {\n\t        if ('responseURL' in xhr) {\n\t          return xhr.responseURL\n\t        }\n\t\n\t        // Avoid security warnings on getResponseHeader when not allowed by CORS\n\t        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n\t          return xhr.getResponseHeader('X-Request-URL')\n\t        }\n\t\n\t        return\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: headers(xhr),\n\t          url: responseURL()\n\t        }\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/main.84ba1d98.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/d3-force-gravity__demo/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d0a75847f0ac33b3997a\n **/","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/core.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nvar assertNumber = function assertNumber(name, n) {\n\tif (typeof n !== 'number') {\n\t\tthrow new TypeError(name + ' has to be a number');\n\t}\n};\n\nvar ForceGravity = function ForceGravity() {\n\tvar x = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\tvar y = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\n\tvar nodes = void 0,\n\t    acceleration = void 0,\n\t    strength = 10000,\n\t    minRadius = 40;\n\n\tvar distanceTo = function distanceTo(x1, y1, x2, y2) {\n\t\treturn Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n\t};\n\n\tvar computeAcceleration = function computeAcceleration(nx, ny, distance) {\n\t\tvar distanceCube = Math.pow(distance, 3);\n\t\treturn {\n\t\t\tx: (x - nx) * strength / distanceCube,\n\t\t\ty: (y - ny) * strength / distanceCube\n\t\t};\n\t};\n\tvar initialize = function initialize(_) {\n\t\tnodes = _;\n\t\tacceleration = nodes.map(function (node) {\n\t\t\tvar distance = distanceTo(x, y, node.x, node.y);\n\t\t\treturn computeAcceleration(node.x, node.y, distance);\n\t\t});\n\t};\n\n\tvar force = function force() {\n\t\tnodes.forEach(function (node, i) {\n\t\t\tvar distance = distanceTo(x, y, node.x, node.y);\n\t\t\tif (distance < minRadius) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode.vx += acceleration[i].x;\n\t\t\tnode.vy += acceleration[i].y;\n\t\t\tnode.x += node.vx;\n\t\t\tnode.y += node.vy;\n\t\t\tvar newAcceleration = computeAcceleration(node.x, node.y, distance);\n\t\t\tacceleration[i].x = newAcceleration.x;\n\t\t\tacceleration[i].y = newAcceleration.y;\n\t\t});\n\t\treturn force;\n\t};\n\n\tforce.strength = function (_strength) {\n\t\tif (_strength === undefined) {\n\t\t\treturn strength;\n\t\t}\n\t\tassertNumber('strength', _strength);\n\t\tstrength = _strength;\n\t\treturn force;\n\t};\n\n\tforce.minRadius = function (_minRadius) {\n\t\tif (_minRadius === undefined) {\n\t\t\treturn minRadius;\n\t\t}\n\t\tassertNumber('minRadius', _minRadius);\n\t\tminRadius = _minRadius;\n\t\treturn force;\n\t};\n\n\tforce.x = function (_x) {\n\t\tif (_x === undefined) {\n\t\t\treturn x;\n\t\t}\n\t\tassertNumber('x', _x);\n\t\tx = _x;\n\t\treturn force;\n\t};\n\n\tforce.y = function (_y) {\n\t\tif (_y === undefined) {\n\t\t\treturn y;\n\t\t}\n\t\tassertNumber('y', _y);\n\t\ty = _y;\n\t\treturn force;\n\t};\n\n\tforce.initialize = initialize;\n\treturn force;\n};\n\nmodule.exports = ForceGravity;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3-force-gravity/dist/index.js\n ** module id = 2\n ** module chunks = 0\n **/","// https://d3js.org Version 4.2.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var version = \"4.2.1\";\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function threshold(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return threshold(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map$1.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map$1(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map$1(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map$1();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map$1.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  function uniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return Math.random() * max + min;\n    };\n  }\n\n  function normal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = Math.random() * 2 - 1;\n        y = Math.random() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  function logNormal() {\n    var randomNormal = normal.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  function irwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n      return sum;\n    };\n  }\n\n  function bates(n) {\n    var randomIrwinHall = irwinHall(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  function exponential(lambda) {\n    return function() {\n      return -Math.log(1 - Math.random()) / lambda;\n    };\n  }\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function easeCubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  function area(polygon) {\n    var i = -1,\n        n = polygon.length,\n        a,\n        b = polygon[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area / 2;\n  }\n\n  function centroid(polygon) {\n    var i = -1,\n        n = polygon.length,\n        x = 0,\n        y = 0,\n        a,\n        b = polygon[n - 1],\n        c,\n        k = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      k += c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return k *= 3, [x / k, y / k];\n  }\n\n  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n  // negative if clockwise, and zero if the points are collinear.\n  function cross(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function lexicographicOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  // Computes the upper convex hull per the monotone chain algorithm.\n  // Assumes points.length >= 3, is sorted by x, unique in y.\n  // Returns an array of indices into points in left-to-right order.\n  function computeUpperHullIndexes(points) {\n    var n = points.length,\n        indexes = [0, 1],\n        size = 2;\n\n    for (var i = 2; i < n; ++i) {\n      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n      indexes[size++] = i;\n    }\n\n    return indexes.slice(0, size); // remove popped points\n  }\n\n  function hull(points) {\n    if ((n = points.length) < 3) return null;\n\n    var i,\n        n,\n        sortedPoints = new Array(n),\n        flippedPoints = new Array(n);\n\n    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n    sortedPoints.sort(lexicographicOrder);\n    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n        lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n    // Construct the hull polygon, removing possible duplicate endpoints.\n    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n        hull = [];\n\n    // Add upper hull in right-to-l order.\n    // Then add lower hull in left-to-right order.\n    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n    return hull;\n  }\n\n  function contains(polygon, point) {\n    var n = polygon.length,\n        p = polygon[n - 1],\n        x = point[0], y = point[1],\n        x0 = p[0], y0 = p[1],\n        x1, y1,\n        inside = false;\n\n    for (var i = 0; i < n; ++i) {\n      p = polygon[i], x1 = p[0], y1 = p[1];\n      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n      x0 = x1, y0 = y1;\n    }\n\n    return inside;\n  }\n\n  function length$1(polygon) {\n    var i = -1,\n        n = polygon.length,\n        b = polygon[n - 1],\n        xa,\n        ya,\n        xb = b[0],\n        yb = b[1],\n        perimeter = 0;\n\n    while (++i < n) {\n      xa = xb;\n      ya = yb;\n      b = polygon[i];\n      xb = b[0];\n      yb = b[1];\n      xa -= xb;\n      ya -= yb;\n      perimeter += Math.sqrt(xa * xa + ya * ya);\n    }\n\n    return perimeter;\n  }\n\nvar   pi$1 = Math.PI;\nvar   tau$1 = 2 * pi$1;\n  var epsilon = 1e-6;\n  var tauEpsilon = tau$1 - epsilon;\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = [];\n  }\n\n  function path() {\n    return new Path;\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function(x, y) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n    },\n    closePath: function() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._.push(\"Z\");\n      }\n    },\n    lineTo: function(x, y) {\n      this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    quadraticCurveTo: function(x1, y1, x, y) {\n      this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    arcTo: function(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x1,y1).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon));\n\n      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n        this._.push(\n          \"L\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        var x20 = x2 - x0,\n            y20 = y2 - y0,\n            l21_2 = x21 * x21 + y21 * y21,\n            l20_2 = x20 * x20 + y20 * y20,\n            l21 = Math.sqrt(l21_2),\n            l01 = Math.sqrt(l01_2),\n            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n            t01 = l / l01,\n            t21 = l / l21;\n\n        // If the start tangent is not coincident with (x0,y0), line to.\n        if (Math.abs(t01 - 1) > epsilon) {\n          this._.push(\n            \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n          );\n        }\n\n        this._.push(\n          \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n        );\n      }\n    },\n    arc: function(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x0,y0).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", x0, \",\", y0\n        );\n      }\n\n      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._.push(\n          \"L\", x0, \",\", y0\n        );\n      }\n\n      // Is this arc empty? We’re done.\n      if (!r) return;\n\n      // Is this a complete circle? Draw two arcs to complete the circle.\n      if (da > tauEpsilon) {\n        this._.push(\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        if (da < 0) da = da % tau$1 + tau$1;\n        this._.push(\n          \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n        );\n      }\n    },\n    rect: function(x, y, w, h) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n    },\n    toString: function() {\n      return this._.join(\"\");\n    }\n  };\n\n  function tree_add(d) {\n    var x = +this._x.call(null, d),\n        y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {data: d},\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return tree._root = leaf, tree;\n\n    // Find the existing leaf for the new point, or add it.\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    }\n\n    // Is the new point is exactly coincident with the existing point?\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n    // Otherwise, split the leaf node until the old and new point are separated.\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d, i, n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity;\n\n    // Compute the points and their extent.\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    }\n\n    // If there were no (valid) points, inherit the existing extent.\n    if (x1 < x0) x0 = this._x0, x1 = this._x1;\n    if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n    // Expand the tree to cover the new points.\n    this.cover(x0, y0).cover(x1, y1);\n\n    // Add the new points.\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1;\n\n    // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    }\n\n    // Otherwise, double repeatedly to cover.\n    else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n        case 0: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n          break;\n        }\n        case 1: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n          break;\n        }\n        case 2: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n          break;\n        }\n        case 3: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n          break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n    // If the quadtree covers the point already, just return.\n    else return this;\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data() {\n    var data = [];\n    this.visit(function(node) {\n      if (!node.length) do data.push(node.data); while (node = node.next)\n    });\n    return data;\n  }\n\n  function tree_extent(_) {\n    return arguments.length\n        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find(x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;\n    else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n\n      // Stop searching if this quadrant can’t contain a closer node.\n      if (!(node = q.node)\n          || (x1 = q.x0) > x3\n          || (y1 = q.y0) > y3\n          || (x2 = q.x1) < x0\n          || (y2 = q.y1) < y0) continue;\n\n      // Bisect the current quadrant.\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n\n        quads.push(\n          new Quad(node[3], xm, ym, x2, y2),\n          new Quad(node[2], x1, ym, xm, y2),\n          new Quad(node[1], xm, y1, x2, ym),\n          new Quad(node[0], x1, y1, xm, ym)\n        );\n\n        // Visit the closest quadrant first.\n        if (i = (y >= ym) << 1 | (x >= xm)) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      }\n\n      // Visit this point. (Visiting coincident points isn’t necessary!)\n      else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n    }\n\n    return data;\n  }\n\n  function tree_remove(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return this;\n\n    // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n    }\n\n    // Find the point to remove.\n    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n    if (next = node.next) delete node.next;\n\n    // If there are multiple coincident points, remove just the point.\n    if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n    // If this is the root point, remove it.\n    if (!parent) return this._root = next, this;\n\n    // Remove this leaf.\n    next ? parent[i] = next : delete parent[i];\n\n    // If the parent now contains exactly one leaf, collapse superfluous parents.\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n        && node === (parent[3] || parent[2] || parent[1] || parent[0])\n        && !node.length) {\n      if (retainer) retainer[j] = node;\n      else this._root = node;\n    }\n\n    return this;\n  }\n\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n    return this;\n  }\n\n  function tree_root() {\n    return this._root;\n  }\n\n  function tree_size() {\n    var size = 0;\n    this.visit(function(node) {\n      if (!node.length) do ++size; while (node = node.next)\n    });\n    return size;\n  }\n\n  function tree_visit(callback) {\n    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n    return this;\n  }\n\n  function tree_visitAfter(callback) {\n    var quads = [], next = [], q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      var node = q.node;\n      if (node.length) {\n        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n      next.push(q);\n    }\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n\n  function tree_x(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n\n  function tree_y(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {data: leaf.data}, next = copy;\n    while (leaf = leaf.next) next = next.next = {data: leaf.data};\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function() {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n\n    if (!node) return copy;\n\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n\n    nodes = [{source: node, target: copy._root = new Array(4)}];\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n          else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n\n  var slice$1 = [].slice;\n\n  var noabort = {};\n\n  function Queue(size) {\n    if (!(size >= 1)) throw new Error;\n    this._size = size;\n    this._call =\n    this._error = null;\n    this._tasks = [];\n    this._data = [];\n    this._waiting =\n    this._active =\n    this._ended =\n    this._start = 0; // inside a synchronous task callback?\n  }\n\n  Queue.prototype = queue.prototype = {\n    constructor: Queue,\n    defer: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      if (this._error != null) return this;\n      var t = slice$1.call(arguments, 1);\n      t.push(callback);\n      ++this._waiting, this._tasks.push(t);\n      poke(this);\n      return this;\n    },\n    abort: function() {\n      if (this._error == null) abort(this, new Error(\"abort\"));\n      return this;\n    },\n    await: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n      maybeNotify(this);\n      return this;\n    },\n    awaitAll: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = callback;\n      maybeNotify(this);\n      return this;\n    }\n  };\n\n  function poke(q) {\n    if (!q._start) try { start(q); } // let the current task complete\n    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n  }\n\n  function start(q) {\n    while (q._start = q._waiting && q._active < q._size) {\n      var i = q._ended + q._active,\n          t = q._tasks[i],\n          j = t.length - 1,\n          c = t[j];\n      t[j] = end(q, i);\n      --q._waiting, ++q._active;\n      t = c.apply(null, t);\n      if (!q._tasks[i]) continue; // task finished synchronously\n      q._tasks[i] = t || noabort;\n    }\n  }\n\n  function end(q, i) {\n    return function(e, r) {\n      if (!q._tasks[i]) return; // ignore multiple callbacks\n      --q._active, ++q._ended;\n      q._tasks[i] = null;\n      if (q._error != null) return; // ignore secondary errors\n      if (e != null) {\n        abort(q, e);\n      } else {\n        q._data[i] = r;\n        if (q._waiting) poke(q);\n        else maybeNotify(q);\n      }\n    };\n  }\n\n  function abort(q, e) {\n    var i = q._tasks.length, t;\n    q._error = e; // ignore active callbacks\n    q._data = undefined; // allow gc\n    q._waiting = NaN; // prevent starting\n\n    while (--i >= 0) {\n      if (t = q._tasks[i]) {\n        q._tasks[i] = null;\n        if (t.abort) try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n\n    q._active = NaN; // allow notification\n    maybeNotify(q);\n  }\n\n  function maybeNotify(q) {\n    if (!q._active && q._call) q._call(q._error, q._data);\n  }\n\n  function queue(concurrency) {\n    return new Queue(arguments.length ? +concurrency : Infinity);\n  }\n\n  function constant$1(x) {\n    return function constant() {\n      return x;\n    };\n  }\n\n  var epsilon$1 = 1e-12;\n  var pi$2 = Math.PI;\n  var halfPi$1 = pi$2 / 2;\n  var tau$2 = 2 * pi$2;\n\n  function arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function arcPadAngle(d) {\n    return d && d.padAngle; // Note: optional!\n  }\n\n  function asin(x) {\n    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0, y10 = y1 - y0,\n        x32 = x3 - x2, y32 = y3 - y2,\n        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n    return [x0 + t * x10, y0 + t * y10];\n  }\n\n  // Compute perpendicular offset line of length rc.\n  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n    var x01 = x0 - x1,\n        y01 = y0 - y1,\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x11 = x0 + ox,\n        y11 = y0 + oy,\n        x10 = x1 + ox,\n        y10 = y1 + oy,\n        x00 = (x11 + x10) / 2,\n        y00 = (y11 + y10) / 2,\n        dx = x10 - x11,\n        dy = y10 - y11,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x11 * y10 - x10 * y11,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x00,\n        dy0 = cy0 - y00,\n        dx1 = cx1 - x00,\n        dy1 = cy1 - y00;\n\n    // Pick the closer of the two intersection points.\n    // TODO Is there a faster way to determine which intersection to use?\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1)\n    };\n  }\n\n  function arc() {\n    var innerRadius = arcInnerRadius,\n        outerRadius = arcOuterRadius,\n        cornerRadius = constant$1(0),\n        padRadius = null,\n        startAngle = arcStartAngle,\n        endAngle = arcEndAngle,\n        padAngle = arcPadAngle,\n        context = null;\n\n    function arc() {\n      var buffer,\n          r,\n          r0 = +innerRadius.apply(this, arguments),\n          r1 = +outerRadius.apply(this, arguments),\n          a0 = startAngle.apply(this, arguments) - halfPi$1,\n          a1 = endAngle.apply(this, arguments) - halfPi$1,\n          da = Math.abs(a1 - a0),\n          cw = a1 > a0;\n\n      if (!context) context = buffer = path();\n\n      // Ensure that the outer radius is always larger than the inner radius.\n      if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n      // Is it a point?\n      if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n      // Or is it a circle or annulus?\n      else if (da > tau$2 - epsilon$1) {\n        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n        if (r0 > epsilon$1) {\n          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      }\n\n      // Or is it a circular or annular sector?\n      else {\n        var a01 = a0,\n            a11 = a1,\n            a00 = a0,\n            a10 = a1,\n            da0 = da,\n            da1 = da,\n            ap = padAngle.apply(this, arguments) / 2,\n            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n            rc0 = rc,\n            rc1 = rc,\n            t0,\n            t1;\n\n        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n        if (rp > epsilon$1) {\n          var p0 = asin(rp / r0 * Math.sin(ap)),\n              p1 = asin(rp / r1 * Math.sin(ap));\n          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n          else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n          else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n        }\n\n        var x01 = r1 * Math.cos(a01),\n            y01 = r1 * Math.sin(a01),\n            x10 = r0 * Math.cos(a10),\n            y10 = r0 * Math.sin(a10);\n\n        // Apply rounded corners?\n        if (rc > epsilon$1) {\n          var x11 = r1 * Math.cos(a11),\n              y11 = r1 * Math.sin(a11),\n              x00 = r0 * Math.cos(a00),\n              y00 = r0 * Math.sin(a00);\n\n          // Restrict the corner radius according to the sector angle.\n          if (da < pi$2) {\n            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n                ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n          }\n        }\n\n        // Is the sector collapsed to a line?\n        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n        // Does the sector’s outer ring have rounded corners?\n        else if (rc1 > epsilon$1) {\n          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the outer ring just a circular arc?\n        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n        // Is there no inner ring, and it’s a circular sector?\n        // Or perhaps it’s an annular sector collapsed due to padding?\n        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n        // Does the sector’s inner ring (or point) have rounded corners?\n        else if (rc0 > epsilon$1) {\n          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the inner ring just a circular arc?\n        else context.arc(0, 0, r0, a10, a00, cw);\n      }\n\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    arc.innerRadius = function(_) {\n      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n    };\n\n    arc.outerRadius = function(_) {\n      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n    };\n\n    arc.cornerRadius = function(_) {\n      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n    };\n\n    arc.padRadius = function(_) {\n      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n    };\n\n    arc.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n    };\n\n    arc.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n    };\n\n    arc.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n    };\n\n    arc.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n    };\n\n    return arc;\n  }\n\n  function Linear(context) {\n    this._context = context;\n  }\n\n  Linear.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: this._context.lineTo(x, y); break;\n      }\n    }\n  };\n\n  function curveLinear(context) {\n    return new Linear(context);\n  }\n\n  function x(p) {\n    return p[0];\n  }\n\n  function y(p) {\n    return p[1];\n  }\n\n  function line() {\n    var x$$ = x,\n        y$$ = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function line(data) {\n      var i,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer;\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) output.lineStart();\n          else output.lineEnd();\n        }\n        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    line.x = function(_) {\n      return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$$;\n    };\n\n    line.y = function(_) {\n      return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$$;\n    };\n\n    line.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n    };\n\n    line.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n    };\n\n    line.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n    };\n\n    return line;\n  }\n\n  function area$1() {\n    var x0 = x,\n        x1 = null,\n        y0 = constant$1(0),\n        y1 = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function area(data) {\n      var i,\n          j,\n          k,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer,\n          x0z = new Array(n),\n          y0z = new Array(n);\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) {\n            j = i;\n            output.areaStart();\n            output.lineStart();\n          } else {\n            output.lineEnd();\n            output.lineStart();\n            for (k = i - 1; k >= j; --k) {\n              output.point(x0z[k], y0z[k]);\n            }\n            output.lineEnd();\n            output.areaEnd();\n          }\n        }\n        if (defined0) {\n          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n        }\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    function arealine() {\n      return line().defined(defined).curve(curve).context(context);\n    }\n\n    area.x = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n    };\n\n    area.x0 = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n    };\n\n    area.x1 = function(_) {\n      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n    };\n\n    area.y = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n    };\n\n    area.y0 = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n    };\n\n    area.y1 = function(_) {\n      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n    };\n\n    area.lineX0 =\n    area.lineY0 = function() {\n      return arealine().x(x0).y(y0);\n    };\n\n    area.lineY1 = function() {\n      return arealine().x(x0).y(y1);\n    };\n\n    area.lineX1 = function() {\n      return arealine().x(x1).y(y0);\n    };\n\n    area.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n    };\n\n    area.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n    };\n\n    area.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n    };\n\n    return area;\n  }\n\n  function descending$1(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function identity$1(d) {\n    return d;\n  }\n\n  function pie() {\n    var value = identity$1,\n        sortValues = descending$1,\n        sort = null,\n        startAngle = constant$1(0),\n        endAngle = constant$1(tau$2),\n        padAngle = constant$1(0);\n\n    function pie(data) {\n      var i,\n          n = data.length,\n          j,\n          k,\n          sum = 0,\n          index = new Array(n),\n          arcs = new Array(n),\n          a0 = +startAngle.apply(this, arguments),\n          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n          a1,\n          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n          pa = p * (da < 0 ? -1 : 1),\n          v;\n\n      for (i = 0; i < n; ++i) {\n        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n          sum += v;\n        }\n      }\n\n      // Optionally sort the arcs by previously-computed values or by data.\n      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n      // Compute the arcs! They are stored in the original data's order.\n      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n          data: data[j],\n          index: i,\n          value: v,\n          startAngle: a0,\n          endAngle: a1,\n          padAngle: p\n        };\n      }\n\n      return arcs;\n    }\n\n    pie.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n    };\n\n    pie.sortValues = function(_) {\n      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n    };\n\n    pie.sort = function(_) {\n      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n    };\n\n    pie.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n    };\n\n    pie.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n    };\n\n    pie.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n    };\n\n    return pie;\n  }\n\n  var curveRadialLinear = curveRadial(curveLinear);\n\n  function Radial(curve) {\n    this._curve = curve;\n  }\n\n  Radial.prototype = {\n    areaStart: function() {\n      this._curve.areaStart();\n    },\n    areaEnd: function() {\n      this._curve.areaEnd();\n    },\n    lineStart: function() {\n      this._curve.lineStart();\n    },\n    lineEnd: function() {\n      this._curve.lineEnd();\n    },\n    point: function(a, r) {\n      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n    }\n  };\n\n  function curveRadial(curve) {\n\n    function radial(context) {\n      return new Radial(curve(context));\n    }\n\n    radial._curve = curve;\n\n    return radial;\n  }\n\n  function radialLine(l) {\n    var c = l.curve;\n\n    l.angle = l.x, delete l.x;\n    l.radius = l.y, delete l.y;\n\n    l.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return l;\n  }\n\n  function radialLine$1() {\n    return radialLine(line().curve(curveRadialLinear));\n  }\n\n  function radialArea() {\n    var a = area$1().curve(curveRadialLinear),\n        c = a.curve,\n        x0 = a.lineX0,\n        x1 = a.lineX1,\n        y0 = a.lineY0,\n        y1 = a.lineY1;\n\n    a.angle = a.x, delete a.x;\n    a.startAngle = a.x0, delete a.x0;\n    a.endAngle = a.x1, delete a.x1;\n    a.radius = a.y, delete a.y;\n    a.innerRadius = a.y0, delete a.y0;\n    a.outerRadius = a.y1, delete a.y1;\n    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n    a.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return a;\n  }\n\n  var circle = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / pi$2);\n      context.moveTo(r, 0);\n      context.arc(0, 0, r, 0, tau$2);\n    }\n  };\n\n  var cross$1 = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / 5) / 2;\n      context.moveTo(-3 * r, -r);\n      context.lineTo(-r, -r);\n      context.lineTo(-r, -3 * r);\n      context.lineTo(r, -3 * r);\n      context.lineTo(r, -r);\n      context.lineTo(3 * r, -r);\n      context.lineTo(3 * r, r);\n      context.lineTo(r, r);\n      context.lineTo(r, 3 * r);\n      context.lineTo(-r, 3 * r);\n      context.lineTo(-r, r);\n      context.lineTo(-3 * r, r);\n      context.closePath();\n    }\n  };\n\n  var tan30 = Math.sqrt(1 / 3);\n  var tan30_2 = tan30 * 2;\n  var diamond = {\n    draw: function(context, size) {\n      var y = Math.sqrt(size / tan30_2),\n          x = y * tan30;\n      context.moveTo(0, -y);\n      context.lineTo(x, 0);\n      context.lineTo(0, y);\n      context.lineTo(-x, 0);\n      context.closePath();\n    }\n  };\n\n  var ka = 0.89081309152928522810;\n  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n  var kx = Math.sin(tau$2 / 10) * kr;\n  var ky = -Math.cos(tau$2 / 10) * kr;\n  var star = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size * ka),\n          x = kx * r,\n          y = ky * r;\n      context.moveTo(0, -r);\n      context.lineTo(x, y);\n      for (var i = 1; i < 5; ++i) {\n        var a = tau$2 * i / 5,\n            c = Math.cos(a),\n            s = Math.sin(a);\n        context.lineTo(s * r, -c * r);\n        context.lineTo(c * x - s * y, s * x + c * y);\n      }\n      context.closePath();\n    }\n  };\n\n  var square = {\n    draw: function(context, size) {\n      var w = Math.sqrt(size),\n          x = -w / 2;\n      context.rect(x, x, w, w);\n    }\n  };\n\n  var sqrt3 = Math.sqrt(3);\n\n  var triangle = {\n    draw: function(context, size) {\n      var y = -Math.sqrt(size / (sqrt3 * 3));\n      context.moveTo(0, y * 2);\n      context.lineTo(-sqrt3 * y, -y);\n      context.lineTo(sqrt3 * y, -y);\n      context.closePath();\n    }\n  };\n\n  var c = -0.5;\n  var s = Math.sqrt(3) / 2;\n  var k = 1 / Math.sqrt(12);\n  var a = (k / 2 + 1) * 3;\n  var wye = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / a),\n          x0 = r / 2,\n          y0 = r * k,\n          x1 = x0,\n          y1 = r * k + r,\n          x2 = -x1,\n          y2 = y1;\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n      context.closePath();\n    }\n  };\n\n  var symbols = [\n    circle,\n    cross$1,\n    diamond,\n    square,\n    star,\n    triangle,\n    wye\n  ];\n\n  function symbol() {\n    var type = constant$1(circle),\n        size = constant$1(64),\n        context = null;\n\n    function symbol() {\n      var buffer;\n      if (!context) context = buffer = path();\n      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    symbol.type = function(_) {\n      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n    };\n\n    symbol.size = function(_) {\n      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n    };\n\n    symbol.context = function(_) {\n      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n    };\n\n    return symbol;\n  }\n\n  function noop() {}\n\n  function point(that, x, y) {\n    that._context.bezierCurveTo(\n      (2 * that._x0 + that._x1) / 3,\n      (2 * that._y0 + that._y1) / 3,\n      (that._x0 + 2 * that._x1) / 3,\n      (that._y0 + 2 * that._y1) / 3,\n      (that._x0 + 4 * that._x1 + x) / 6,\n      (that._y0 + 4 * that._y1 + y) / 6\n    );\n  }\n\n  function Basis(context) {\n    this._context = context;\n  }\n\n  Basis.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 3: point(this, this._x1, this._y1); // proceed\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basis(context) {\n    return new Basis(context);\n  }\n\n  function BasisClosed(context) {\n    this._context = context;\n  }\n\n  BasisClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x2, this._y2);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisClosed(context) {\n    return new BasisClosed(context);\n  }\n\n  function BasisOpen(context) {\n    this._context = context;\n  }\n\n  BasisOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n        case 3: this._point = 4; // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisOpen(context) {\n    return new BasisOpen(context);\n  }\n\n  function Bundle(context, beta) {\n    this._basis = new Basis(context);\n    this._beta = beta;\n  }\n\n  Bundle.prototype = {\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n      this._basis.lineStart();\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          j = x.length - 1;\n\n      if (j > 0) {\n        var x0 = x[0],\n            y0 = y[0],\n            dx = x[j] - x0,\n            dy = y[j] - y0,\n            i = -1,\n            t;\n\n        while (++i <= j) {\n          t = i / j;\n          this._basis.point(\n            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n          );\n        }\n      }\n\n      this._x = this._y = null;\n      this._basis.lineEnd();\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  var bundle = (function custom(beta) {\n\n    function bundle(context) {\n      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n    }\n\n    bundle.beta = function(beta) {\n      return custom(+beta);\n    };\n\n    return bundle;\n  })(0.85);\n\n  function point$1(that, x, y) {\n    that._context.bezierCurveTo(\n      that._x1 + that._k * (that._x2 - that._x0),\n      that._y1 + that._k * (that._y2 - that._y0),\n      that._x2 + that._k * (that._x1 - x),\n      that._y2 + that._k * (that._y1 - y),\n      that._x2,\n      that._y2\n    );\n  }\n\n  function Cardinal(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  Cardinal.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: point$1(this, this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n        case 2: this._point = 3; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinal = (function custom(tension) {\n\n    function cardinal(context) {\n      return new Cardinal(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalClosed(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalClosed = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalClosed(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalOpen(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalOpen = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalOpen(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function point$2(that, x, y) {\n    var x1 = that._x1,\n        y1 = that._y1,\n        x2 = that._x2,\n        y2 = that._y2;\n\n    if (that._l01_a > epsilon$1) {\n      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n    }\n\n    if (that._l23_a > epsilon$1) {\n      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n    }\n\n    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n  }\n\n  function CatmullRom(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRom.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: this.point(this, this._x2, this._y2); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRom = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomClosed(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomClosed = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomOpen(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomOpen = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function LinearClosed(context) {\n    this._context = context;\n  }\n\n  LinearClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._point) this._context.closePath();\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      if (this._point) this._context.lineTo(x, y);\n      else this._point = 1, this._context.moveTo(x, y);\n    }\n  };\n\n  function linearClosed(context) {\n    return new LinearClosed(context);\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  }\n\n  // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n  // NOV(II), P. 443, 1990.\n  function slope3(that, x2, y2) {\n    var h0 = that._x1 - that._x0,\n        h1 = x2 - that._x1,\n        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n  }\n\n  // Calculate a one-sided slope.\n  function slope2(that, t) {\n    var h = that._x1 - that._x0;\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n  }\n\n  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n  function point$3(that, t0, t1) {\n    var x0 = that._x0,\n        y0 = that._y0,\n        x1 = that._x1,\n        y1 = that._y1,\n        dx = (x1 - x0) / 3;\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n  }\n\n  function MonotoneX(context) {\n    this._context = context;\n  }\n\n  MonotoneX.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      var t1 = NaN;\n\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  }\n\n  function MonotoneY(context) {\n    this._context = new ReflectContext(context);\n  }\n\n  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n    MonotoneX.prototype.point.call(this, y, x);\n  };\n\n  function ReflectContext(context) {\n    this._context = context;\n  }\n\n  ReflectContext.prototype = {\n    moveTo: function(x, y) { this._context.moveTo(y, x); },\n    closePath: function() { this._context.closePath(); },\n    lineTo: function(x, y) { this._context.lineTo(y, x); },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n  };\n\n  function monotoneX(context) {\n    return new MonotoneX(context);\n  }\n\n  function monotoneY(context) {\n    return new MonotoneY(context);\n  }\n\n  function Natural(context) {\n    this._context = context;\n  }\n\n  Natural.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          n = x.length;\n\n      if (n) {\n        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n        if (n === 2) {\n          this._context.lineTo(x[1], y[1]);\n        } else {\n          var px = controlPoints(x),\n              py = controlPoints(y);\n          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n          }\n        }\n      }\n\n      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n      this._x = this._y = null;\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n  function controlPoints(x) {\n    var i,\n        n = x.length - 1,\n        m,\n        a = new Array(n),\n        b = new Array(n),\n        r = new Array(n);\n    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n    a[n - 1] = r[n - 1] / b[n - 1];\n    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n    b[n - 1] = (x[n] + a[n - 1]) / 2;\n    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n    return [a, b];\n  }\n\n  function natural(context) {\n    return new Natural(context);\n  }\n\n  function Step(context, t) {\n    this._context = context;\n    this._t = t;\n  }\n\n  Step.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = this._y = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n            this._context.lineTo(x1, this._y);\n            this._context.lineTo(x1, y);\n          }\n          break;\n        }\n      }\n      this._x = x, this._y = y;\n    }\n  };\n\n  function step(context) {\n    return new Step(context, 0.5);\n  }\n\n  function stepBefore(context) {\n    return new Step(context, 0);\n  }\n\n  function stepAfter(context) {\n    return new Step(context, 1);\n  }\n\n  var slice$2 = Array.prototype.slice;\n\n  function none(series, order) {\n    if (!((n = series.length) > 1)) return;\n    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n      s0 = s1, s1 = series[order[i]];\n      for (var j = 0; j < m; ++j) {\n        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n      }\n    }\n  }\n\n  function none$1(series) {\n    var n = series.length, o = new Array(n);\n    while (--n >= 0) o[n] = n;\n    return o;\n  }\n\n  function stackValue(d, key) {\n    return d[key];\n  }\n\n  function stack() {\n    var keys = constant$1([]),\n        order = none$1,\n        offset = none,\n        value = stackValue;\n\n    function stack(data) {\n      var kz = keys.apply(this, arguments),\n          i,\n          m = data.length,\n          n = kz.length,\n          sz = new Array(n),\n          oz;\n\n      for (i = 0; i < n; ++i) {\n        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n          si[j] = sij = [0, +value(data[j], ki, j, data)];\n          sij.data = data[j];\n        }\n        si.key = ki;\n      }\n\n      for (i = 0, oz = order(sz); i < n; ++i) {\n        sz[oz[i]].index = i;\n      }\n\n      offset(sz, oz);\n      return sz;\n    }\n\n    stack.keys = function(_) {\n      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : keys;\n    };\n\n    stack.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n    };\n\n    stack.order = function(_) {\n      return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : order;\n    };\n\n    stack.offset = function(_) {\n      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n    };\n\n    return stack;\n  }\n\n  function expand(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n    }\n    none(series, order);\n  }\n\n  function silhouette(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n      s0[j][1] += s0[j][0] = -y / 2;\n    }\n    none(series, order);\n  }\n\n  function wiggle(series, order) {\n    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n        var si = series[order[i]],\n            sij0 = si[j][1] || 0,\n            sij1 = si[j - 1][1] || 0,\n            s3 = (sij0 - sij1) / 2;\n        for (var k = 0; k < i; ++k) {\n          var sk = series[order[k]],\n              skj0 = sk[j][1] || 0,\n              skj1 = sk[j - 1][1] || 0;\n          s3 += skj0 - skj1;\n        }\n        s1 += sij0, s2 += s3 * sij0;\n      }\n      s0[j - 1][1] += s0[j - 1][0] = y;\n      if (s1) y -= s2 / s1;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    none(series, order);\n  }\n\n  function ascending$1(series) {\n    var sums = series.map(sum$1);\n    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n  }\n\n  function sum$1(series) {\n    var s = 0, i = -1, n = series.length, v;\n    while (++i < n) if (v = +series[i][1]) s += v;\n    return s;\n  }\n\n  function descending$2(series) {\n    return ascending$1(series).reverse();\n  }\n\n  function insideOut(series) {\n    var n = series.length,\n        i,\n        j,\n        sums = series.map(sum$1),\n        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n        top = 0,\n        bottom = 0,\n        tops = [],\n        bottoms = [];\n\n    for (i = 0; i < n; ++i) {\n      j = order[i];\n      if (top < bottom) {\n        top += sums[j];\n        tops.push(j);\n      } else {\n        bottom += sums[j];\n        bottoms.push(j);\n      }\n    }\n\n    return bottoms.reverse().concat(tops);\n  }\n\n  function reverse(series) {\n    return none$1(series).reverse();\n  }\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function colorRgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, colorRgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function colorHsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, colorHsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function colorHcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, colorHcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  function basis$1(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$2(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed$1(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant$2(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear$1(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential$1(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  var interpolateRgb = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = colorRgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$2);\n  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\n  function array$1(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function interpolateNumber(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = interpolate(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function interpolateString(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: interpolateNumber(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function interpolate(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant$2(b)\n        : (t === \"number\" ? interpolateNumber\n        : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n        : b instanceof color ? interpolateRgb\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array$1\n        : isNaN(b) ? object\n        : interpolateNumber)(a, b);\n  }\n\n  function interpolateRound(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity$2 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity$2;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity$2;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function interpolateZoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$1 = hsl(hue);\n  var hslLong = hsl(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$1 = hcl(hue);\n  var hclLong = hcl(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix$$(start, end) {\n        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix$$.gamma = cubehelixGamma;\n\n      return cubehelix$$;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var interpolateCubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  var noop$1 = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set$1(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert, columns, rows = parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return text == null ? \"\"\n          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n          : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsv(\",\");\n\n  var csvParse = csv.parse;\n  var csvParseRows = csv.parseRows;\n  var csvFormat = csv.format;\n  var csvFormatRows = csv.formatRows;\n\n  var tsv = dsv(\"\\t\");\n\n  var tsvParse = tsv.parse;\n  var tsvParseRows = tsv.parseRows;\n  var tsvFormat = tsv.format;\n  var tsvFormatRows = tsv.formatRows;\n\n  function request(url, callback) {\n    var request,\n        event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        mimeType,\n        headers = map$1(),\n        xhr = new XMLHttpRequest,\n        user = null,\n        password = null,\n        response,\n        responseType,\n        timeout = 0;\n\n    // If IE does not support CORS, use XDomainRequest.\n    if (typeof XDomainRequest !== \"undefined\"\n        && !(\"withCredentials\" in xhr)\n        && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n    \"onload\" in xhr\n        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n    function respond(o) {\n      var status = xhr.status, result;\n      if (!status && hasResponse(xhr)\n          || status >= 200 && status < 300\n          || status === 304) {\n        if (response) {\n          try {\n            result = response.call(request, xhr);\n          } catch (e) {\n            event.call(\"error\", request, e);\n            return;\n          }\n        } else {\n          result = xhr;\n        }\n        event.call(\"load\", request, result);\n      } else {\n        event.call(\"error\", request, o);\n      }\n    }\n\n    xhr.onprogress = function(e) {\n      event.call(\"progress\", request, e);\n    };\n\n    request = {\n      header: function(name, value) {\n        name = (name + \"\").toLowerCase();\n        if (arguments.length < 2) return headers.get(name);\n        if (value == null) headers.remove(name);\n        else headers.set(name, value + \"\");\n        return request;\n      },\n\n      // If mimeType is non-null and no Accept header is set, a default is used.\n      mimeType: function(value) {\n        if (!arguments.length) return mimeType;\n        mimeType = value == null ? null : value + \"\";\n        return request;\n      },\n\n      // Specifies what type the response value should take;\n      // for instance, arraybuffer, blob, document, or text.\n      responseType: function(value) {\n        if (!arguments.length) return responseType;\n        responseType = value;\n        return request;\n      },\n\n      timeout: function(value) {\n        if (!arguments.length) return timeout;\n        timeout = +value;\n        return request;\n      },\n\n      user: function(value) {\n        return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n      },\n\n      password: function(value) {\n        return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n      },\n\n      // Specify how to convert the response content to a specific type;\n      // changes the callback value on \"load\" events.\n      response: function(value) {\n        response = value;\n        return request;\n      },\n\n      // Alias for send(\"GET\", …).\n      get: function(data, callback) {\n        return request.send(\"GET\", data, callback);\n      },\n\n      // Alias for send(\"POST\", …).\n      post: function(data, callback) {\n        return request.send(\"POST\", data, callback);\n      },\n\n      // If callback is non-null, it will be used for error and load events.\n      send: function(method, data, callback) {\n        xhr.open(method, url, true, user, password);\n        if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n        if (responseType != null) xhr.responseType = responseType;\n        if (timeout > 0) xhr.timeout = timeout;\n        if (callback == null && typeof data === \"function\") callback = data, data = null;\n        if (callback != null && callback.length === 1) callback = fixCallback(callback);\n        if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n        event.call(\"beforesend\", request, xhr);\n        xhr.send(data == null ? null : data);\n        return request;\n      },\n\n      abort: function() {\n        xhr.abort();\n        return request;\n      },\n\n      on: function() {\n        var value = event.on.apply(event, arguments);\n        return value === event ? request : value;\n      }\n    };\n\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return request.get(callback);\n    }\n\n    return request;\n  }\n\n  function fixCallback(callback) {\n    return function(error, xhr) {\n      callback(error == null ? xhr : null);\n    };\n  }\n\n  function hasResponse(xhr) {\n    var type = xhr.responseType;\n    return type && type !== \"text\"\n        ? xhr.response // null on error\n        : xhr.responseText; // \"\" on error\n  }\n\n  function type(defaultMimeType, response) {\n    return function(url, callback) {\n      var r = request(url).mimeType(defaultMimeType).response(response);\n      if (callback != null) {\n        if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n        return r.get(callback);\n      }\n      return r;\n    };\n  }\n\n  var html = type(\"text/html\", function(xhr) {\n    return document.createRange().createContextualFragment(xhr.responseText);\n  });\n\n  var json = type(\"application/json\", function(xhr) {\n    return JSON.parse(xhr.responseText);\n  });\n\n  var text = type(\"text/plain\", function(xhr) {\n    return xhr.responseText;\n  });\n\n  var xml = type(\"application/xml\", function(xhr) {\n    var xml = xhr.responseXML;\n    if (!xml) throw new Error(\"parse error\");\n    return xml;\n  });\n\n  function dsv$1(defaultMimeType, parse) {\n    return function(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var r = request(url).mimeType(defaultMimeType);\n      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n      r.row(row);\n      return callback ? r.get(callback) : r;\n    };\n  }\n\n  function responseOf(parse, row) {\n    return function(request) {\n      return parse(request.responseText, row);\n    };\n  }\n\n  var csv$1 = dsv$1(\"text/csv\", csvParse);\n\n  var tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\n  var frame = 0;\n  var timeout = 0;\n  var interval = 0;\n  var pokeDelay = 1000;\n  var taskHead;\n  var taskTail;\n  var clockLast = 0;\n  var clockNow = 0;\n  var clockSkew = 0;\n  var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n  var setFrame = typeof requestAnimationFrame === \"function\"\n          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)\n          : function(f) { setTimeout(f, 17); };\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call =\n    this._time =\n    this._next = null;\n  }\n\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function(callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;\n        else taskHead = this;\n        taskTail = this;\n      }\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function() {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n\n  function timer(callback, delay, time) {\n    var t = new Timer;\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n    var t = taskHead, e;\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n      t = t._next;\n    }\n    --frame;\n  }\n\n  function wake(time) {\n    clockNow = (clockLast = time || clock.now()) + clockSkew;\n    frame = timeout = 0;\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke$1() {\n    var now = clock.now(), delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0, t1 = taskHead, t2, time = Infinity;\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n    if (timeout) timeout = clearTimeout(timeout);\n    var delay = time - clockNow;\n    if (delay > 24) {\n      if (time < Infinity) timeout = setTimeout(wake, delay);\n      if (interval) interval = clearInterval(interval);\n    } else {\n      if (!interval) interval = setInterval(poke$1, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  function timeout$1(callback, delay, time) {\n    var t = new Timer;\n    delay = delay == null ? 0 : +delay;\n    t.restart(function(elapsed) {\n      t.stop();\n      callback(elapsed + delay);\n    }, delay, time);\n    return t;\n  }\n\n  function interval$1(callback, delay, time) {\n    var t = new Timer, total = delay;\n    if (delay == null) return t.restart(callback, delay, time), t;\n    delay = +delay, time = time == null ? now() : +time;\n    t.restart(function tick(elapsed) {\n      elapsed += total;\n      t.restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n    return t;\n  }\n\nvar   t0$1 = new Date;\nvar   t1$1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n\n    interval.round = function(date) {\n      var d0 = interval(date),\n          d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0$1.setTime(+start), t1$1.setTime(+end);\n        floori(t0$1), floori(t1$1);\n        return Math.floor(count(t0$1, t1$1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  }\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var milliseconds = millisecond.range;\n\n  var durationSecond = 1e3;\n  var durationMinute = 6e4;\n  var durationHour = 36e5;\n  var durationDay = 864e5;\n  var durationWeek = 6048e5;\n\n  var second = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationSecond) * durationSecond);\n  }, function(date, step) {\n    date.setTime(+date + step * durationSecond);\n  }, function(start, end) {\n    return (end - start) / durationSecond;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var seconds = second.range;\n\n  var minute = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationMinute) * durationMinute);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var minutes = minute.range;\n\n  var hour = newInterval(function(date) {\n    var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n    if (offset < 0) offset += durationHour;\n    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var hours = hour.range;\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  var days = day.range;\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n    });\n  }\n\n  var timeWeek = weekday(0);\n  var timeMonday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var sundays = timeWeek.range;\n  var mondays = timeMonday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n\n  var month = newInterval(function(date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var months = month.range;\n\n  var year = newInterval(function(date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  year.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n\n  var years = year.range;\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcMinutes = utcMinute.range;\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcHours = utcHour.range;\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / durationDay;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  var utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / durationWeek;\n    });\n  }\n\n  var utcWeek = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcSundays = utcWeek.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcMonths = utcMonth.range;\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  utcYear.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n\n  var utcYears = utcYear.range;\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent$1(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity$3(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent$1(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n  }\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(timeWeek.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(timeMonday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcWeek.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale$1;\n  defaultLocale$1({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale$1(definition) {\n    locale$1 = formatLocale$1(definition);\n    exports.timeFormat = locale$1.format;\n    exports.timeParse = locale$1.parse;\n    exports.utcFormat = locale$1.utcFormat;\n    exports.utcParse = locale$1.utcParse;\n    return locale$1;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  var array$2 = Array.prototype;\n\n  var map$2 = array$2.map;\n  var slice$3 = array$2.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = map$1(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice$3.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = map$1();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range$$ = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range$$[1] < range$$[0],\n          start = range$$[reverse - 0],\n          stop = range$$[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range$$ = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range$$)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point$4() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant$3(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number$1(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant$3(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = bisectRight(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate$$ = interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return exports.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return exports.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = tickStep(start, stop, n);\n\n      if (step) {\n        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear$2() {\n    var scale = continuous(deinterpolate, interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear$2());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity$4() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity$4().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant$3(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant$3(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize$1() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize$1()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold$1() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\nvar   durationSecond$1 = 1000;\nvar   durationMinute$1 = durationSecond$1 * 60;\nvar   durationHour$1 = durationMinute$1 * 60;\nvar   durationDay$1 = durationHour$1 * 24;\nvar   durationWeek$1 = durationDay$1 * 7;\n  var durationMonth = durationDay$1 * 30;\n  var durationYear = durationDay$1 * 365;\n  function date$1(t) {\n    return new Date(t);\n  }\n\n  function number$2(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond$1],\n      [second,  5,  5 * durationSecond$1],\n      [second, 15, 15 * durationSecond$1],\n      [second, 30, 30 * durationSecond$1],\n      [minute,  1,      durationMinute$1],\n      [minute,  5,  5 * durationMinute$1],\n      [minute, 15, 15 * durationMinute$1],\n      [minute, 30, 30 * durationMinute$1],\n      [  hour,  1,      durationHour$1  ],\n      [  hour,  3,  3 * durationHour$1  ],\n      [  hour,  6,  6 * durationHour$1  ],\n      [  hour, 12, 12 * durationHour$1  ],\n      [   day,  1,      durationDay$1   ],\n      [   day,  2,  2 * durationDay$1   ],\n      [  week,  1,      durationWeek$1  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\n  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var rainbow = cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames$1(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point$5(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point$5(node, event);\n  }\n\n  function none$2() {}\n\n  function selector(selector) {\n    return selector == null ? none$2 : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant$4(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant$4(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending$2;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending$2(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function window(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : window(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise$1() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise$1);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window$$ = window(node),\n        event = window$$.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window$$.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point$5(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point$5(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n  var emptyTween = [];\n\n  var CREATED = 0;\n  var SCHEDULED = 1;\n  var STARTING = 2;\n  var STARTED = 3;\n  var ENDING = 4;\n  var ENDED = 5;\n\n  function schedule(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};\n    else if (id in schedules) return;\n    create(node, id, {\n      name: name,\n      index: index, // For context during callback.\n      group: group, // For context during callback.\n      on: emptyOn,\n      tween: emptyTween,\n      time: timing.time,\n      delay: timing.delay,\n      duration: timing.duration,\n      ease: timing.ease,\n      timer: null,\n      state: CREATED\n    });\n  }\n\n  function init(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function set$2(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function get$1(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function create(node, id, self) {\n    var schedules = node.__transition,\n        tween;\n\n    // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n    schedules[id] = self;\n    self.timer = timer(schedule, 0, self.time);\n\n    // If the delay is greater than this first sleep, sleep some more;\n    // otherwise, start immediately.\n    function schedule(elapsed) {\n      self.state = SCHEDULED;\n      if (self.delay <= elapsed) start(elapsed - self.delay);\n      else self.timer.restart(start, self.delay, self.time);\n    }\n\n    function start(elapsed) {\n      var i, j, n, o;\n\n      for (i in schedules) {\n        o = schedules[i];\n        if (o.name !== self.name) continue;\n\n        // Interrupt the active transition, if any.\n        // Dispatch the interrupt event.\n        if (o.state === STARTED) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        }\n\n        // Cancel any pre-empted transitions. No interrupt event is dispatched\n        // because the cancelled transitions never started. Note that this also\n        // removes this transition from the pending list!\n        else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n      }\n\n      // Defer the first tick to end of the current frame; see mbostock/d3#1576.\n      // Note the transition may be canceled after start and before the first tick!\n      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n      // Assuming this is successful, subsequent callbacks go straight to tick.\n      timeout$1(function() {\n        if (self.state === STARTED) {\n          self.timer.restart(tick, self.delay, self.time);\n          tick(elapsed);\n        }\n      });\n\n      // Dispatch the start event.\n      // Note this must be done before the tween are initialized.\n      self.state = STARTING;\n      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n      if (self.state !== STARTING) return; // interrupted\n      self.state = STARTED;\n\n      // Initialize the tween, deleting null tween.\n      tween = new Array(n = self.tween.length);\n      for (i = 0, j = -1; i < n; ++i) {\n        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n          tween[++j] = o;\n        }\n      }\n      tween.length = j + 1;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),\n          i = -1,\n          n = tween.length;\n\n      while (++i < n) {\n        tween[i].call(null, t);\n      }\n\n      // Dispatch the end event.\n      if (self.state === ENDING) {\n        self.state = ENDED;\n        self.timer.stop();\n        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n        for (i in schedules) if (+i !== id) return void delete schedules[id];\n        delete node.__transition;\n      }\n    }\n  }\n\n  function interrupt(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        active,\n        empty = true,\n        i;\n\n    if (!schedules) return;\n\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n      active = schedule.state === STARTED;\n      schedule.state = ENDED;\n      schedule.timer.stop();\n      if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n      delete schedules[i];\n    }\n\n    if (empty) delete node.__transition;\n  }\n\n  function selection_interrupt(name) {\n    return this.each(function() {\n      interrupt(this, name);\n    });\n  }\n\n  function tweenRemove(id, name) {\n    var tween0, tween1;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = tween0 = tween;\n        for (var i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1 = tween1.slice();\n            tween1.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = (tween0 = tween).slice();\n        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1[i] = t;\n            break;\n          }\n        }\n        if (i === n) tween1.push(t);\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function transition_tween(name, value) {\n    var id = this._id;\n\n    name += \"\";\n\n    if (arguments.length < 2) {\n      var tween = get$1(this.node(), id).tween;\n      for (var i = 0, n = tween.length, t; i < n; ++i) {\n        if ((t = tween[i]).name === name) {\n          return t.value;\n        }\n      }\n      return null;\n    }\n\n    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n  }\n\n  function tweenValue(transition, name, value) {\n    var id = transition._id;\n\n    transition.each(function() {\n      var schedule = set$2(this, id);\n      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n\n    return function(node) {\n      return get$1(node, id).value[name];\n    };\n  }\n\n  function interpolate$1(a, b) {\n    var c;\n    return (typeof b === \"number\" ? interpolateNumber\n        : b instanceof color ? interpolateRgb\n        : (c = color(b)) ? (b = c, interpolateRgb)\n        : interpolateString)(a, b);\n  }\n\n  function attrRemove$1(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS$1(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrConstantNS$1(fullname, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttribute(name);\n      value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function attrFunctionNS$1(fullname, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n      value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_attr(name, value) {\n    var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate$1;\n    return this.attrTween(name, typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n  }\n\n  function attrTweenNS(fullname, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttributeNS(fullname.space, fullname.local, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function attrTween(name, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttribute(name, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_attrTween(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    var fullname = namespace(name);\n    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n  }\n\n  function delayFunction(id, value) {\n    return function() {\n      init(this, id).delay = +value.apply(this, arguments);\n    };\n  }\n\n  function delayConstant(id, value) {\n    return value = +value, function() {\n      init(this, id).delay = value;\n    };\n  }\n\n  function transition_delay(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? delayFunction\n            : delayConstant)(id, value))\n        : get$1(this.node(), id).delay;\n  }\n\n  function durationFunction(id, value) {\n    return function() {\n      set$2(this, id).duration = +value.apply(this, arguments);\n    };\n  }\n\n  function durationConstant(id, value) {\n    return value = +value, function() {\n      set$2(this, id).duration = value;\n    };\n  }\n\n  function transition_duration(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? durationFunction\n            : durationConstant)(id, value))\n        : get$1(this.node(), id).duration;\n  }\n\n  function easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      set$2(this, id).ease = value;\n    };\n  }\n\n  function transition_ease(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each(easeConstant(id, value))\n        : get$1(this.node(), id).ease;\n  }\n\n  function transition_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, this._name, this._id);\n  }\n\n  function transition_merge(transition) {\n    if (transition._id !== this._id) throw new Error;\n\n    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Transition(merges, this._parents, this._name, this._id);\n  }\n\n  function start$1(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n\n  function onFunction(id, name, listener) {\n    var on0, on1, sit = start$1(name) ? init : set$2;\n    return function() {\n      var schedule = sit(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n      schedule.on = on1;\n    };\n  }\n\n  function transition_on(name, listener) {\n    var id = this._id;\n\n    return arguments.length < 2\n        ? get$1(this.node(), id).on.on(name)\n        : this.each(onFunction(id, name, listener));\n  }\n\n  function removeFunction(id) {\n    return function() {\n      var parent = this.parentNode;\n      for (var i in this.__transition) if (+i !== id) return;\n      if (parent) parent.removeChild(this);\n    };\n  }\n\n  function transition_remove() {\n    return this.on(\"end.remove\", removeFunction(this._id));\n  }\n\n  function transition_select(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, name, id);\n  }\n\n  function transition_selectAll(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n            if (child = children[k]) {\n              schedule(child, name, id, k, children, inherit);\n            }\n          }\n          subgroups.push(children);\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, parents, name, id);\n  }\n\n  var Selection$1 = selection.prototype.constructor;\n\n  function transition_selection() {\n    return new Selection$1(this._groups, this._parents);\n  }\n\n  function styleRemove$1(name, interpolate) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function styleRemoveEnd(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function styleFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = value(this);\n      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_style(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate$1;\n    return value == null ? this\n            .styleTween(name, styleRemove$1(name, i))\n            .on(\"end.style.\" + name, styleRemoveEnd(name))\n        : this.styleTween(name, typeof value === \"function\"\n            ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n            : styleConstant$1(name, i, value), priority);\n  }\n\n  function styleTween(name, value, priority) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.style.setProperty(name, i(t), priority);\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_styleTween(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n  }\n\n  function textConstant$1(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction$1(value) {\n    return function() {\n      var value1 = value(this);\n      this.textContent = value1 == null ? \"\" : value1;\n    };\n  }\n\n  function transition_text(value) {\n    return this.tween(\"text\", typeof value === \"function\"\n        ? textFunction$1(tweenValue(this, \"text\", value))\n        : textConstant$1(value == null ? \"\" : value + \"\"));\n  }\n\n  function transition_transition() {\n    var name = this._name,\n        id0 = this._id,\n        id1 = newId();\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          var inherit = get$1(node, id0);\n          schedule(node, name, id1, i, group, {\n            time: inherit.time + inherit.delay + inherit.duration,\n            delay: 0,\n            duration: inherit.duration,\n            ease: inherit.ease\n          });\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id1);\n  }\n\n  var id = 0;\n\n  function Transition(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n  }\n\n  function transition(name) {\n    return selection().transition(name);\n  }\n\n  function newId() {\n    return ++id;\n  }\n\n  var selection_prototype = selection.prototype;\n\n  Transition.prototype = transition.prototype = {\n    constructor: Transition,\n    select: transition_select,\n    selectAll: transition_selectAll,\n    filter: transition_filter,\n    merge: transition_merge,\n    selection: transition_selection,\n    transition: transition_transition,\n    call: selection_prototype.call,\n    nodes: selection_prototype.nodes,\n    node: selection_prototype.node,\n    size: selection_prototype.size,\n    empty: selection_prototype.empty,\n    each: selection_prototype.each,\n    on: transition_on,\n    attr: transition_attr,\n    attrTween: transition_attrTween,\n    style: transition_style,\n    styleTween: transition_styleTween,\n    text: transition_text,\n    remove: transition_remove,\n    tween: transition_tween,\n    delay: transition_delay,\n    duration: transition_duration,\n    ease: transition_ease\n  };\n\n  var defaultTiming = {\n    time: null, // Set on use.\n    delay: 0,\n    duration: 250,\n    ease: easeCubicInOut\n  };\n\n  function inherit(node, id) {\n    var timing;\n    while (!(timing = node.__transition) || !(timing = timing[id])) {\n      if (!(node = node.parentNode)) {\n        return defaultTiming.time = now(), defaultTiming;\n      }\n    }\n    return timing;\n  }\n\n  function selection_transition(name) {\n    var id,\n        timing;\n\n    if (name instanceof Transition) {\n      id = name._id, name = name._name;\n    } else {\n      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n    }\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          schedule(node, name, id, i, group, timing || inherit(node, id));\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id);\n  }\n\n  selection.prototype.interrupt = selection_interrupt;\n  selection.prototype.transition = selection_transition;\n\n  var root$1 = [null];\n\n  function active(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        i;\n\n    if (schedules) {\n      name = name == null ? null : name + \"\";\n      for (i in schedules) {\n        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n          return new Transition([[node]], root$1, name, +i);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  var slice$4 = Array.prototype.slice;\n\n  function identity$5(x) {\n    return x;\n  }\n\n  var top = 1;\n  var right = 2;\n  var bottom = 3;\n  var left = 4;\nvar   epsilon$2 = 1e-6;\n  function translateX(scale0, scale1, d) {\n    var x = scale0(d);\n    return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n  }\n\n  function translateY(scale0, scale1, d) {\n    var y = scale0(d);\n    return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n  }\n\n  function center(scale) {\n    var offset = scale.bandwidth() / 2;\n    if (scale.round()) offset = Math.round(offset);\n    return function(d) {\n      return scale(d) + offset;\n    };\n  }\n\n  function entering() {\n    return !this.__axis;\n  }\n\n  function axis(orient, scale) {\n    var tickArguments = [],\n        tickValues = null,\n        tickFormat = null,\n        tickSizeInner = 6,\n        tickSizeOuter = 6,\n        tickPadding = 3;\n\n    function axis(context) {\n      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n          transform = orient === top || orient === bottom ? translateX : translateY,\n          range = scale.range(),\n          range0 = range[0] + 0.5,\n          range1 = range[range.length - 1] + 0.5,\n          position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n          selection = context.selection ? context.selection() : context,\n          path = selection.selectAll(\".domain\").data([null]),\n          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n          tickExit = tick.exit(),\n          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n          line = tick.select(\"line\"),\n          text = tick.select(\"text\"),\n          k = orient === top || orient === left ? -1 : 1,\n          x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n      path = path.merge(path.enter().insert(\"path\", \".tick\")\n          .attr(\"class\", \"domain\")\n          .attr(\"stroke\", \"#000\"));\n\n      tick = tick.merge(tickEnter);\n\n      line = line.merge(tickEnter.append(\"line\")\n          .attr(\"stroke\", \"#000\")\n          .attr(x + \"2\", k * tickSizeInner)\n          .attr(y + \"1\", 0.5)\n          .attr(y + \"2\", 0.5));\n\n      text = text.merge(tickEnter.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(x, k * spacing)\n          .attr(y, 0.5)\n          .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n      if (context !== selection) {\n        path = path.transition(context);\n        tick = tick.transition(context);\n        line = line.transition(context);\n        text = text.transition(context);\n\n        tickExit = tickExit.transition(context)\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n        tickEnter\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n      }\n\n      tickExit.remove();\n\n      path\n          .attr(\"d\", orient === left || orient == right\n              ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n              : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n      tick\n          .attr(\"opacity\", 1)\n          .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n      line\n          .attr(x + \"2\", k * tickSizeInner);\n\n      text\n          .attr(x, k * spacing)\n          .text(format);\n\n      selection.filter(entering)\n          .attr(\"fill\", \"none\")\n          .attr(\"font-size\", 10)\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n      selection\n          .each(function() { this.__axis = position; });\n    }\n\n    axis.scale = function(_) {\n      return arguments.length ? (scale = _, axis) : scale;\n    };\n\n    axis.ticks = function() {\n      return tickArguments = slice$4.call(arguments), axis;\n    };\n\n    axis.tickArguments = function(_) {\n      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n    };\n\n    axis.tickValues = function(_) {\n      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n    };\n\n    axis.tickFormat = function(_) {\n      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n    };\n\n    axis.tickSize = function(_) {\n      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeInner = function(_) {\n      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeOuter = function(_) {\n      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n    };\n\n    axis.tickPadding = function(_) {\n      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n    };\n\n    return axis;\n  }\n\n  function axisTop(scale) {\n    return axis(top, scale);\n  }\n\n  function axisRight(scale) {\n    return axis(right, scale);\n  }\n\n  function axisBottom(scale) {\n    return axis(bottom, scale);\n  }\n\n  function axisLeft(scale) {\n    return axis(left, scale);\n  }\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n    while (children = node.children) node = children[0];\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n    while (children = node.children) node = children[children.length - 1];\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0;\n\n      // First walk, computing the initial x & y values.\n      root.eachAfter(function(node) {\n        var children = node.children;\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n\n      // Second walk, normalizing x & y to the desired size.\n      return root.eachAfter(nodeSize ? function(node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function(x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n    };\n\n    cluster.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return cluster;\n  }\n\n  function node_each(callback) {\n    var node = this, current, next = [node], children, i, n;\n    do {\n      current = next.reverse(), next = [];\n      while (node = current.pop()) {\n        callback(node), children = node.children;\n        if (children) for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    } while (next.length);\n    return this;\n  }\n\n  function node_eachBefore(callback) {\n    var node = this, nodes = [node], children, i;\n    while (node = nodes.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n    return this;\n  }\n\n  function node_eachAfter(callback) {\n    var node = this, nodes = [node], next = [], children, i, n;\n    while (node = nodes.pop()) {\n      next.push(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n    while (node = next.pop()) {\n      callback(node);\n    }\n    return this;\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function(node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n      while (--i >= 0) sum += children[i].value;\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function(node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this, nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  function node_descendants() {\n    var nodes = [];\n    this.each(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this, links = [];\n    root.each(function(node) {\n      if (node !== root) { // Don’t include the root’s parent, if any.\n        links.push({source: node.parent, target: node});\n      }\n    });\n    return links;\n  }\n\n  function hierarchy(data, children) {\n    var root = new Node(data),\n        valued = +data.value && (root.value = data.value),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    if (children == null) children = defaultChildren;\n\n    while (node = nodes.pop()) {\n      if (valued) node.value = +node.data.value;\n      if ((childs = children(node.data)) && (n = childs.length)) {\n        node.children = new Array(n);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new Node(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function defaultChildren(d) {\n    return d.children;\n  }\n\n  function copyData(node) {\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && (node.height < ++height));\n  }\n\n  function Node(data) {\n    this.data = data;\n    this.depth =\n    this.height = 0;\n    this.parent = null;\n  }\n\n  Node.prototype = hierarchy.prototype = {\n    constructor: Node,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  };\n\n  function Node$2(value) {\n    this._ = value;\n    this.next = null;\n  }\n\n  function shuffle$1(array) {\n    var i,\n        n = (array = array.slice()).length,\n        head = null,\n        node = head;\n\n    while (n) {\n      var next = new Node$2(array[n - 1]);\n      if (node) node = node.next = next;\n      else node = head = next;\n      array[i] = array[--n];\n    }\n\n    return {\n      head: head,\n      tail: node\n    };\n  }\n\n  function enclose(circles) {\n    return encloseN(shuffle$1(circles), []);\n  }\n\n  function encloses(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r - b.r;\n    return dr * dr + 1e-6 > dx * dx + dy * dy;\n  }\n\n  // Returns the smallest circle that contains circles L and intersects circles B.\n  function encloseN(L, B) {\n    var circle,\n        l0 = null,\n        l1 = L.head,\n        l2,\n        p1;\n\n    switch (B.length) {\n      case 1: circle = enclose1(B[0]); break;\n      case 2: circle = enclose2(B[0], B[1]); break;\n      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n    }\n\n    while (l1) {\n      p1 = l1._, l2 = l1.next;\n      if (!circle || !encloses(circle, p1)) {\n\n        // Temporarily truncate L before l1.\n        if (l0) L.tail = l0, l0.next = null;\n        else L.head = L.tail = null;\n\n        B.push(p1);\n        circle = encloseN(L, B); // Note: reorders L!\n        B.pop();\n\n        // Move l1 to the front of L and reconnect the truncated list L.\n        if (L.head) l1.next = L.head, L.head = l1;\n        else l1.next = null, L.head = L.tail = l1;\n        l0 = L.tail, l0.next = l2;\n\n      } else {\n        l0 = l1;\n      }\n      l1 = l2;\n    }\n\n    L.tail = l0;\n    return circle;\n  }\n\n  function enclose1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function enclose2(a, b) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function enclose3(a, b, c) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x3 = c.x, y3 = c.y, r3 = c.r,\n        a2 = 2 * (x1 - x2),\n        b2 = 2 * (y1 - y2),\n        c2 = 2 * (r2 - r1),\n        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n        a3 = 2 * (x1 - x3),\n        b3 = 2 * (y1 - y3),\n        c3 = 2 * (r3 - r1),\n        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / ab - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / ab - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (xa * xb + ya * yb + r1),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n    return {\n      x: xa + xb * r + x1,\n      y: ya + yb * r + y1,\n      r: r\n    };\n  }\n\n  function place(a, b, c) {\n    var ax = a.x,\n        ay = a.y,\n        da = b.r + c.r,\n        db = a.r + c.r,\n        dx = b.x - ax,\n        dy = b.y - ay,\n        dc = dx * dx + dy * dy;\n    if (dc) {\n      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = ax + x * dx + y * dy;\n      c.y = ay + x * dy - y * dx;\n    } else {\n      c.x = ax + db;\n      c.y = ay;\n    }\n  }\n\n  function intersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return dr * dr > dx * dx + dy * dy;\n  }\n\n  function distance2(circle, x, y) {\n    var dx = circle.x - x,\n        dy = circle.y - y;\n    return dx * dx + dy * dy;\n  }\n\n  function Node$1(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = circles.length)) return 0;\n\n    var a, b, c, n;\n\n    // Place the first circle.\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r;\n\n    // Place the second circle.\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r;\n\n    // Place the third circle.\n    place(b, a, c = circles[2]);\n\n    // Initialize the weighted centroid.\n    var aa = a.r * a.r,\n        ba = b.r * b.r,\n        ca = c.r * c.r,\n        oa = aa + ba + ca,\n        ox = aa * a.x + ba * b.x + ca * c.x,\n        oy = aa * a.y + ba * b.y + ca * c.y,\n        cx, cy, i, j, k, sj, sk;\n\n    // Initialize the front-chain using the first three circles a, b and c.\n    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a;\n\n    // Attempt to place each remaining circle…\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n      // If there are only three elements in the front-chain…\n      if ((k = a.previous) === (j = b.next)) {\n        // If the new circle intersects the third circle,\n        // rotate the front chain to try the next position.\n        if (intersects(j._, c._)) {\n          a = b, b = j, --i;\n          continue pack;\n        }\n      }\n\n      // Find the closest intersecting circle on the front-chain, if any.\n      else {\n        sj = j._.r, sk = k._.r;\n        do {\n          if (sj <= sk) {\n            if (intersects(j._, c._)) {\n              b = j, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            j = j.next, sj += j._.r;\n          } else {\n            if (intersects(k._, c._)) {\n              a = k, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            k = k.previous, sk += k._.r;\n          }\n        } while (j !== k.next);\n      }\n\n      // Success! Insert the new circle c between a and b.\n      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n      // Update the weighted centroid.\n      oa += ca = c._.r * c._.r;\n      ox += ca * c._.x;\n      oy += ca * c._.y;\n\n      // Compute the new closest circle a to centroid.\n      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n      while ((c = c.next) !== b) {\n        if ((ca = distance2(c._, cx, cy)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n      b = a.next;\n    }\n\n    // Compute the enclosing circle of the front chain.\n    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n    // Translate the circles to put the enclosing circle around the origin.\n    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error;\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant$5(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius))\n            .eachAfter(packChildren(padding, 0.5))\n            .eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius))\n            .eachAfter(packChildren(constantZero, 1))\n            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n      return root;\n    }\n\n    pack.radius = function(x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function(x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$5(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function(node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function(node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n\n        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function(node) {\n      var parent = node.parent;\n      node.r *= k;\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 =\n      root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function(node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function(x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function(x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\nvar   keyPrefix$1 = \"$\";\n  var preroot = {depth: -1};\n  var ambiguous = {};\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var d,\n          i,\n          n = data.length,\n          root,\n          parent,\n          node,\n          nodes = new Array(n),\n          nodeId,\n          nodeKey,\n          nodeByKey = {};\n\n      for (i = 0; i < n; ++i) {\n        d = data[i], node = nodes[i] = new Node(d);\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = keyPrefix$1 + (node.id = nodeId);\n          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], nodeId = parentId(data[i], i, data);\n        if (nodeId == null || !(nodeId += \"\")) {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        } else {\n          parent = nodeByKey[keyPrefix$1 + nodeId];\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);\n          else parent.children = [node];\n          node.parent = parent;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n\n      return root;\n    }\n\n    stratify.id = function(x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function(x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  }\n\n  // This function works analogously to nextLeft.\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  }\n\n  // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n    this.a = this; // ancestor\n    this.z = 0; // prelim\n    this.m = 0; // mod\n    this.c = 0; // change\n    this.s = 0; // shift\n    this.t = null; // thread\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  }\n\n  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n  function tree() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root);\n\n      // Compute the layout using Buchheim et al.’s algorithm.\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk);\n\n      // If a fixed node size is specified, scale x and y.\n      if (nodeSize) root.eachBefore(sizeNode);\n\n      // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n\n      return root;\n    }\n\n    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    // Computes all real x-coordinates by summing up the modifiers recursively.\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function(x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n    };\n\n    tree.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1,\n        n = nodes.length,\n        dx, dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0;\n      minValue = maxValue = sumValue = nodes[i0].value;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue);\n\n      // Keep adding nodes while the aspect ratio maintains or improves.\n      for (i1 = i0 + 1; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n        minRatio = newRatio;\n      }\n\n      // Position and record the row orientation.\n      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = (function custom(ratio) {\n\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  })(phi);\n\n  function index$1() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 =\n      root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function(x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function(x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function(x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function(x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function(x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function(x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function(x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function(x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function(x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i, n = nodes.length,\n        sum, sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = (value / 2) + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;\n        else hi = mid;\n      }\n\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if ((y1 - y0) > (x1 - x0)) {\n        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      } else {\n        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = (function custom(ratio) {\n\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  })(phi);\n\n  function center$1(x, y) {\n    var nodes;\n\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force() {\n      var i,\n          n = nodes.length,\n          node,\n          sx = 0,\n          sy = 0;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], sx += node.x, sy += node.y;\n      }\n\n      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n        node = nodes[i], node.x -= sx, node.y -= sy;\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    return force;\n  }\n\n  function constant$6(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function jiggle() {\n    return (Math.random() - 0.5) * 1e-6;\n  }\n\n  function x$1(d) {\n    return d.x + d.vx;\n  }\n\n  function y$1(d) {\n    return d.y + d.vy;\n  }\n\n  function collide(radius) {\n    var nodes,\n        radii,\n        strength = 1,\n        iterations = 1;\n\n    if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n    function force() {\n      var i, n = nodes.length,\n          tree,\n          node,\n          xi,\n          yi,\n          ri,\n          ri2;\n\n      for (var k = 0; k < iterations; ++k) {\n        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          ri = radii[i], ri2 = ri * ri;\n          xi = node.x + node.vx;\n          yi = node.y + node.vy;\n          tree.visit(apply);\n        }\n      }\n\n      function apply(quad, x0, y0, x1, y1) {\n        var data = quad.data, rj = quad.r, r = ri + rj;\n        if (data) {\n          if (data.index > i) {\n            var x = xi - data.x - data.vx,\n                y = yi - data.y - data.vy,\n                l = x * x + y * y;\n            if (l < r * r) {\n              if (x === 0) x = jiggle(), l += x * x;\n              if (y === 0) y = jiggle(), l += y * y;\n              l = (r - (l = Math.sqrt(l))) / l * strength;\n              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n              node.vy += (y *= l) * r;\n              data.vx -= x * (r = 1 - r);\n              data.vy -= y * r;\n            }\n          }\n          return;\n        }\n        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n      }\n    }\n\n    function prepare(quad) {\n      if (quad.data) return quad.r = radii[quad.data.index];\n      for (var i = quad.r = 0; i < 4; ++i) {\n        if (quad[i] && quad[i].r > quad.r) {\n          quad.r = quad[i].r;\n        }\n      }\n    }\n\n    force.initialize = function(_) {\n      var i, n = (nodes = _).length; radii = new Array(n);\n      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    force.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), force) : radius;\n    };\n\n    return force;\n  }\n\n  function index$2(d, i) {\n    return i;\n  }\n\n  function link(links) {\n    var id = index$2,\n        strength = defaultStrength,\n        strengths,\n        distance = constant$6(30),\n        distances,\n        nodes,\n        count,\n        bias,\n        iterations = 1;\n\n    if (links == null) links = [];\n\n    function defaultStrength(link) {\n      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n\n    function force(alpha) {\n      for (var k = 0, n = links.length; k < iterations; ++k) {\n        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n          link = links[i], source = link.source, target = link.target;\n          x = target.x + target.vx - source.x - source.vx || jiggle();\n          y = target.y + target.vy - source.y - source.vy || jiggle();\n          l = Math.sqrt(x * x + y * y);\n          l = (l - distances[i]) / l * alpha * strengths[i];\n          x *= l, y *= l;\n          target.vx -= x * (b = bias[i]);\n          target.vy -= y * b;\n          source.vx += x * (b = 1 - b);\n          source.vy += y * b;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n\n      var i,\n          n = nodes.length,\n          m = links.length,\n          nodeById = map$1(nodes, id),\n          link;\n\n      for (i = 0, count = new Array(n); i < n; ++i) {\n        count[i] = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        link = links[i], link.index = i;\n        if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n        if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n        ++count[link.source.index], ++count[link.target.index];\n      }\n\n      for (i = 0, bias = new Array(m); i < m; ++i) {\n        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n      }\n\n      strengths = new Array(m), initializeStrength();\n      distances = new Array(m), initializeDistance();\n    }\n\n    function initializeStrength() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        strengths[i] = +strength(links[i], i, links);\n      }\n    }\n\n    function initializeDistance() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        distances[i] = +distance(links[i], i, links);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.links = function(_) {\n      return arguments.length ? (links = _, initialize(), force) : links;\n    };\n\n    force.id = function(_) {\n      return arguments.length ? (id = _, force) : id;\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n    };\n\n    force.distance = function(_) {\n      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n    };\n\n    return force;\n  }\n\n  function x$2(d) {\n    return d.x;\n  }\n\n  function y$2(d) {\n    return d.y;\n  }\n\n  var initialRadius = 10;\n  var initialAngle = Math.PI * (3 - Math.sqrt(5));\n  function simulation(nodes) {\n    var simulation,\n        alpha = 1,\n        alphaMin = 0.001,\n        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n        alphaTarget = 0,\n        velocityDecay = 0.6,\n        forces = map$1(),\n        stepper = timer(step),\n        event = dispatch(\"tick\", \"end\");\n\n    if (nodes == null) nodes = [];\n\n    function step() {\n      tick();\n      event.call(\"tick\", simulation);\n      if (alpha < alphaMin) {\n        stepper.stop();\n        event.call(\"end\", simulation);\n      }\n    }\n\n    function tick() {\n      var i, n = nodes.length, node;\n\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    function initializeNodes() {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.index = i;\n        if (isNaN(node.x) || isNaN(node.y)) {\n          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n          node.x = radius * Math.cos(angle);\n          node.y = radius * Math.sin(angle);\n        }\n        if (isNaN(node.vx) || isNaN(node.vy)) {\n          node.vx = node.vy = 0;\n        }\n      }\n    }\n\n    function initializeForce(force) {\n      if (force.initialize) force.initialize(nodes);\n      return force;\n    }\n\n    initializeNodes();\n\n    return simulation = {\n      tick: tick,\n\n      restart: function() {\n        return stepper.restart(step), simulation;\n      },\n\n      stop: function() {\n        return stepper.stop(), simulation;\n      },\n\n      nodes: function(_) {\n        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n      },\n\n      alpha: function(_) {\n        return arguments.length ? (alpha = +_, simulation) : alpha;\n      },\n\n      alphaMin: function(_) {\n        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n      },\n\n      alphaDecay: function(_) {\n        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n      },\n\n      alphaTarget: function(_) {\n        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n      },\n\n      velocityDecay: function(_) {\n        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n      },\n\n      force: function(name, _) {\n        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n      },\n\n      find: function(x, y, radius) {\n        var i = 0,\n            n = nodes.length,\n            dx,\n            dy,\n            d2,\n            node,\n            closest;\n\n        if (radius == null) radius = Infinity;\n        else radius *= radius;\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dx = x - node.x;\n          dy = y - node.y;\n          d2 = dx * dx + dy * dy;\n          if (d2 < radius) closest = node, radius = d2;\n        }\n\n        return closest;\n      },\n\n      on: function(name, _) {\n        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n      }\n    };\n  }\n\n  function manyBody() {\n    var nodes,\n        node,\n        alpha,\n        strength = constant$6(-30),\n        strengths,\n        distanceMin2 = 1,\n        distanceMax2 = Infinity,\n        theta2 = 0.81;\n\n    function force(_) {\n      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n    }\n\n    function accumulate(quad) {\n      var strength = 0, q, c, x, y, i;\n\n      // For internal nodes, accumulate forces from child quadrants.\n      if (quad.length) {\n        for (x = y = i = 0; i < 4; ++i) {\n          if ((q = quad[i]) && (c = q.value)) {\n            strength += c, x += c * q.x, y += c * q.y;\n          }\n        }\n        quad.x = x / strength;\n        quad.y = y / strength;\n      }\n\n      // For leaf nodes, accumulate forces from coincident quadrants.\n      else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n        do strength += strengths[q.data.index];\n        while (q = q.next);\n      }\n\n      quad.value = strength;\n    }\n\n    function apply(quad, x1, _, x2) {\n      if (!quad.value) return true;\n\n      var x = quad.x - node.x,\n          y = quad.y - node.y,\n          w = x2 - x1,\n          l = x * x + y * y;\n\n      // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (x === 0) x = jiggle(), l += x * x;\n          if (y === 0) y = jiggle(), l += y * y;\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * quad.value * alpha / l;\n          node.vy += y * quad.value * alpha / l;\n        }\n        return true;\n      }\n\n      // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return;\n\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (quad.data !== node || quad.next) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      } while (quad = quad.next);\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.distanceMin = function(_) {\n      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n\n    force.distanceMax = function(_) {\n      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n\n    force.theta = function(_) {\n      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n\n    return force;\n  }\n\n  function x$3(x) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        xz;\n\n    if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      xz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n    };\n\n    return force;\n  }\n\n  function y$3(y) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        yz;\n\n    if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      yz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n    };\n\n    return force;\n  }\n\n  function nopropagation() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  function dragDisable(view) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function dragEnable(view, noclick) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant$7(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !exports.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n      if (!gesture) return;\n      select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      dragDisable(exports.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      dragEnable(exports.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = exports.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$7(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$7(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  function constant$8(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function x$4(d) {\n    return d[0];\n  }\n\n  function y$4(d) {\n    return d[1];\n  }\n\n  function RedBlackTree() {\n    this._ = null; // root node\n  }\n\n  function RedBlackNode(node) {\n    node.U = // parent node\n    node.C = // color - true for red, false for black\n    node.L = // left node\n    node.R = // right node\n    node.P = // previous node\n    node.N = null; // next node\n  }\n\n  RedBlackTree.prototype = {\n    constructor: RedBlackTree,\n\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = RedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              RedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              RedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n\n      if (!left) next = right;\n      else if (!right) next = left;\n      else next = RedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;\n        else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) { node.C = false; return; }\n\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if ((sibling.L && sibling.L.C)\n              || (sibling.R && sibling.R.C)) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              RedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            RedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              RedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            RedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function RedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function RedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function RedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n\n  function createEdge(left, right, v0, v1) {\n    var edge = [null, null],\n        index = edges.push(edge) - 1;\n    edge.left = left;\n    edge.right = right;\n    if (v0) setEdgeEnd(edge, left, right, v0);\n    if (v1) setEdgeEnd(edge, right, left, v1);\n    cells[left.index].halfedges.push(index);\n    cells[right.index].halfedges.push(index);\n    return edge;\n  }\n\n  function createBorderEdge(left, v0, v1) {\n    var edge = [v0, v1];\n    edge.left = left;\n    return edge;\n  }\n\n  function setEdgeEnd(edge, left, right, vertex) {\n    if (!edge[0] && !edge[1]) {\n      edge[0] = vertex;\n      edge.left = left;\n      edge.right = right;\n    } else if (edge.left === right) {\n      edge[1] = vertex;\n    } else {\n      edge[0] = vertex;\n    }\n  }\n\n  // Liang–Barsky line clipping.\n  function clipEdge(edge, x0, y0, x1, y1) {\n    var a = edge[0],\n        b = edge[1],\n        ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n    return true;\n  }\n\n  function connectEdge(edge, x0, y0, x1, y1) {\n    var v1 = edge[1];\n    if (v1) return true;\n\n    var v0 = edge[0],\n        left = edge.left,\n        right = edge.right,\n        lx = left[0],\n        ly = left[1],\n        rx = right[0],\n        ry = right[1],\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!v0) v0 = [fx, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [fx, y1];\n      } else {\n        if (!v0) v0 = [fx, y1];\n        else if (v0[1] < y0) return;\n        v1 = [fx, y0];\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!v0) v0 = [(y0 - fb) / fm, y0];\n          else if (v0[1] >= y1) return;\n          v1 = [(y1 - fb) / fm, y1];\n        } else {\n          if (!v0) v0 = [(y1 - fb) / fm, y1];\n          else if (v0[1] < y0) return;\n          v1 = [(y0 - fb) / fm, y0];\n        }\n      } else {\n        if (ly < ry) {\n          if (!v0) v0 = [x0, fm * x0 + fb];\n          else if (v0[0] >= x1) return;\n          v1 = [x1, fm * x1 + fb];\n        } else {\n          if (!v0) v0 = [x1, fm * x1 + fb];\n          else if (v0[0] < x0) return;\n          v1 = [x0, fm * x0 + fb];\n        }\n      }\n    }\n\n    edge[0] = v0;\n    edge[1] = v1;\n    return true;\n  }\n\n  function clipEdges(x0, y0, x1, y1) {\n    var i = edges.length,\n        edge;\n\n    while (i--) {\n      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n          || !clipEdge(edge, x0, y0, x1, y1)\n          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n        delete edges[i];\n      }\n    }\n  }\n\n  function createCell(site) {\n    return cells[site.index] = {\n      site: site,\n      halfedges: []\n    };\n  }\n\n  function cellHalfedgeAngle(cell, edge) {\n    var site = cell.site,\n        va = edge.left,\n        vb = edge.right;\n    if (site === vb) vb = va, va = site;\n    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n    if (site === va) va = edge[1], vb = edge[0];\n    else va = edge[0], vb = edge[1];\n    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n  }\n\n  function cellHalfedgeStart(cell, edge) {\n    return edge[+(edge.left !== cell.site)];\n  }\n\n  function cellHalfedgeEnd(cell, edge) {\n    return edge[+(edge.left === cell.site)];\n  }\n\n  function sortCellHalfedges() {\n    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n        var index = new Array(m),\n            array = new Array(m);\n        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n        index.sort(function(i, j) { return array[j] - array[i]; });\n        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n        for (j = 0; j < m; ++j) halfedges[j] = array[j];\n      }\n    }\n  }\n\n  function clipCells(x0, y0, x1, y1) {\n    var nCells = cells.length,\n        iCell,\n        cell,\n        site,\n        iHalfedge,\n        halfedges,\n        nHalfedges,\n        start,\n        startX,\n        startY,\n        end,\n        endX,\n        endY,\n        cover = true;\n\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        halfedges = cell.halfedges;\n        iHalfedge = halfedges.length;\n\n        // Remove any dangling clipped edges.\n        while (iHalfedge--) {\n          if (!edges[halfedges[iHalfedge]]) {\n            halfedges.splice(iHalfedge, 1);\n          }\n        }\n\n        // Insert any border edges as necessary.\n        iHalfedge = 0, nHalfedges = halfedges.length;\n        while (iHalfedge < nHalfedges) {\n          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n                : null)) - 1);\n            ++nHalfedges;\n          }\n        }\n\n        if (nHalfedges) cover = false;\n      }\n    }\n\n    // If there weren’t any edges, have the closest site cover the extent.\n    // It doesn’t matter which corner of the extent we measure!\n    if (cover) {\n      var dx, dy, d2, dc = Infinity;\n\n      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n        if (cell = cells[iCell]) {\n          site = cell.site;\n          dx = site[0] - x0;\n          dy = site[1] - y0;\n          d2 = dx * dx + dy * dy;\n          if (d2 < dc) dc = d2, cover = cell;\n        }\n      }\n\n      if (cover) {\n        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n        cover.halfedges.push(\n          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n          edges.push(createBorderEdge(site, v01, v11)) - 1,\n          edges.push(createBorderEdge(site, v11, v10)) - 1,\n          edges.push(createBorderEdge(site, v10, v00)) - 1\n        );\n      }\n    }\n\n    // Lastly delete any cells with no edges; these were entirely clipped.\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        if (!cell.halfedges.length) {\n          delete cells[iCell];\n        }\n      }\n    }\n  }\n\n  var circlePool = [];\n\n  var firstCircle;\n\n  function Circle() {\n    RedBlackNode(this);\n    this.x =\n    this.y =\n    this.arc =\n    this.site =\n    this.cy = null;\n  }\n\n  function attachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n\n    if (!lArc || !rArc) return;\n\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n\n    if (lSite === rSite) return;\n\n    var bx = cSite[0],\n        by = cSite[1],\n        ax = lSite[0] - bx,\n        ay = lSite[1] - by,\n        cx = rSite[0] - bx,\n        cy = rSite[1] - by;\n\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -epsilon2$1) return;\n\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d;\n\n    var circle = circlePool.pop() || new Circle;\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n    arc.circle = circle;\n\n    var before = null,\n        node = circles._;\n\n    while (node) {\n      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n        if (node.L) node = node.L;\n        else { before = node.P; break; }\n      } else {\n        if (node.R) node = node.R;\n        else { before = node; break; }\n      }\n    }\n\n    circles.insert(before, circle);\n    if (!before) firstCircle = circle;\n  }\n\n  function detachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) firstCircle = circle.N;\n      circles.remove(circle);\n      circlePool.push(circle);\n      RedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  var beachPool = [];\n\n  function Beach() {\n    RedBlackNode(this);\n    this.edge =\n    this.site =\n    this.circle = null;\n  }\n\n  function createBeach(site) {\n    var beach = beachPool.pop() || new Beach;\n    beach.site = site;\n    return beach;\n  }\n\n  function detachBeach(beach) {\n    detachCircle(beach);\n    beaches.remove(beach);\n    beachPool.push(beach);\n    RedBlackNode(beach);\n  }\n\n  function removeBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = [x, y],\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n\n    detachBeach(beach);\n\n    var lArc = previous;\n    while (lArc.circle\n        && Math.abs(x - lArc.circle.x) < epsilon$3\n        && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      detachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    detachCircle(lArc);\n\n    var rArc = next;\n    while (rArc.circle\n        && Math.abs(x - rArc.circle.x) < epsilon$3\n        && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      detachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    detachCircle(rArc);\n\n    var nArcs = disappearing.length,\n        iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function addBeach(site) {\n    var x = site[0],\n        directrix = site[1],\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = beaches._;\n\n    while (node) {\n      dxl = leftBreakPoint(node, directrix) - x;\n      if (dxl > epsilon$3) node = node.L; else {\n        dxr = x - rightBreakPoint(node, directrix);\n        if (dxr > epsilon$3) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -epsilon$3) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -epsilon$3) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n\n    createCell(site);\n    var newArc = createBeach(site);\n    beaches.insert(lArc, newArc);\n\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      detachCircle(lArc);\n      rArc = createBeach(lArc.site);\n      beaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n      attachCircle(lArc);\n      attachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) { // && lArc\n      newArc.edge = createEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    // else lArc !== rArc\n    detachCircle(lArc);\n    detachCircle(rArc);\n\n    var lSite = lArc.site,\n        ax = lSite[0],\n        ay = lSite[1],\n        bx = site[0] - ax,\n        by = site[1] - ay,\n        rSite = rArc.site,\n        cx = rSite[0] - ax,\n        cy = rSite[1] - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n    setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = createEdge(lSite, site, null, vertex);\n    rArc.edge = createEdge(site, rSite, null, vertex);\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function leftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site[0],\n        rfocy = site[1],\n        pby2 = rfocy - directrix;\n\n    if (!pby2) return rfocx;\n\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n\n    site = lArc.site;\n    var lfocx = site[0],\n        lfocy = site[1],\n        plby2 = lfocy - directrix;\n\n    if (!plby2) return lfocx;\n\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n    return (rfocx + lfocx) / 2;\n  }\n\n  function rightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return leftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site[1] === directrix ? site[0] : Infinity;\n  }\n\n  var epsilon$3 = 1e-6;\n  var epsilon2$1 = 1e-12;\n  var beaches;\n  var cells;\n  var circles;\n  var edges;\n\n  function triangleArea(a, b, c) {\n    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n  }\n\n  function lexicographic(a, b) {\n    return b[1] - a[1]\n        || b[0] - a[0];\n  }\n\n  function Diagram(sites, extent) {\n    var site = sites.sort(lexicographic).pop(),\n        x,\n        y,\n        circle;\n\n    edges = [];\n    cells = new Array(sites.length);\n    beaches = new RedBlackTree;\n    circles = new RedBlackTree;\n\n    while (true) {\n      circle = firstCircle;\n      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n        if (site[0] !== x || site[1] !== y) {\n          addBeach(site);\n          x = site[0], y = site[1];\n        }\n        site = sites.pop();\n      } else if (circle) {\n        removeBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    sortCellHalfedges();\n\n    if (extent) {\n      var x0 = +extent[0][0],\n          y0 = +extent[0][1],\n          x1 = +extent[1][0],\n          y1 = +extent[1][1];\n      clipEdges(x0, y0, x1, y1);\n      clipCells(x0, y0, x1, y1);\n    }\n\n    this.edges = edges;\n    this.cells = cells;\n\n    beaches =\n    circles =\n    edges =\n    cells = null;\n  }\n\n  Diagram.prototype = {\n    constructor: Diagram,\n\n    polygons: function() {\n      var edges = this.edges;\n\n      return this.cells.map(function(cell) {\n        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n        polygon.data = cell.site.data;\n        return polygon;\n      });\n    },\n\n    triangles: function() {\n      var triangles = [],\n          edges = this.edges;\n\n      this.cells.forEach(function(cell, i) {\n        var site = cell.site,\n            halfedges = cell.halfedges,\n            j = -1,\n            m = halfedges.length,\n            s0,\n            e1 = edges[halfedges[m - 1]],\n            s1 = e1.left === site ? e1.right : e1.left;\n\n        while (++j < m) {\n          s0 = s1;\n          e1 = edges[halfedges[j]];\n          s1 = e1.left === site ? e1.right : e1.left;\n          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n            triangles.push([site.data, s0.data, s1.data]);\n          }\n        }\n      });\n\n      return triangles;\n    },\n\n    links: function() {\n      return this.edges.filter(function(edge) {\n        return edge.right;\n      }).map(function(edge) {\n        return {\n          source: edge.left.data,\n          target: edge.right.data\n        };\n      });\n    }\n  }\n\n  function voronoi() {\n    var x = x$4,\n        y = y$4,\n        extent = null;\n\n    function voronoi(data) {\n      return new Diagram(data.map(function(d, i) {\n        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];\n        s.index = i;\n        s.data = d;\n        return s;\n      }), extent);\n    }\n\n    voronoi.polygons = function(data) {\n      return voronoi(data).polygons();\n    };\n\n    voronoi.links = function(data) {\n      return voronoi(data).links();\n    };\n\n    voronoi.triangles = function(data) {\n      return voronoi(data).triangles();\n    };\n\n    voronoi.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : x;\n    };\n\n    voronoi.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : y;\n    };\n\n    voronoi.extent = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n    };\n\n    voronoi.size = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n    };\n\n    return voronoi;\n  }\n\n  function constant$9(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function ZoomEvent(target, type, transform) {\n    this.target = target;\n    this.type = type;\n    this.transform = transform;\n  }\n\n  function Transform(k, x, y) {\n    this.k = k;\n    this.x = x;\n    this.y = y;\n  }\n\n  Transform.prototype = {\n    constructor: Transform,\n    scale: function(k) {\n      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n    },\n    translate: function(x, y) {\n      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n    },\n    apply: function(point) {\n      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n    },\n    applyX: function(x) {\n      return x * this.k + this.x;\n    },\n    applyY: function(y) {\n      return y * this.k + this.y;\n    },\n    invert: function(location) {\n      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n    },\n    invertX: function(x) {\n      return (x - this.x) / this.k;\n    },\n    invertY: function(y) {\n      return (y - this.y) / this.k;\n    },\n    rescaleX: function(x) {\n      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n    },\n    rescaleY: function(y) {\n      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n    },\n    toString: function() {\n      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n    }\n  };\n\n  var identity$6 = new Transform(1, 0, 0);\n\n  transform.prototype = Transform.prototype;\n\n  function transform(node) {\n    return node.__zoom || identity$6;\n  }\n\n  function nopropagation$1() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$1() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$1() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent() {\n    var e = this, w, h;\n    if (e instanceof SVGElement) {\n      e = e.ownerSVGElement || e;\n      w = e.width.baseVal.value;\n      h = e.height.baseVal.value;\n    } else {\n      w = e.clientWidth;\n      h = e.clientHeight;\n    }\n    return [[0, 0], [w, h]];\n  }\n\n  function defaultTransform() {\n    return this.__zoom || identity$6;\n  }\n\n  function zoom() {\n    var filter = defaultFilter$1,\n        extent = defaultExtent,\n        k0 = 0,\n        k1 = Infinity,\n        x0 = -k1,\n        x1 = k1,\n        y0 = x0,\n        y1 = x1,\n        duration = 250,\n        gestures = [],\n        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n        touchstarting,\n        touchending,\n        touchDelay = 500,\n        wheelDelay = 150;\n\n    function zoom(selection) {\n      selection\n          .on(\"wheel.zoom\", wheeled)\n          .on(\"mousedown.zoom\", mousedowned)\n          .on(\"dblclick.zoom\", dblclicked)\n          .on(\"touchstart.zoom\", touchstarted)\n          .on(\"touchmove.zoom\", touchmoved)\n          .on(\"touchend.zoom touchcancel.zoom\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .property(\"__zoom\", defaultTransform);\n    }\n\n    zoom.transform = function(collection, transform) {\n      var selection = collection.selection ? collection.selection() : collection;\n      selection.property(\"__zoom\", defaultTransform);\n      if (collection !== selection) {\n        schedule(collection, transform);\n      } else {\n        selection.interrupt().each(function() {\n          gesture(this, arguments)\n              .start()\n              .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n              .end();\n        });\n      }\n    };\n\n    zoom.scaleBy = function(selection, k) {\n      zoom.scaleTo(selection, function() {\n        var k0 = this.__zoom.k,\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return k0 * k1;\n      });\n    };\n\n    zoom.scaleTo = function(selection, k) {\n      zoom.transform(selection, function() {\n        var e = extent.apply(this, arguments),\n            t0 = this.__zoom,\n            p0 = centroid(e),\n            p1 = t0.invert(p0),\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return constrain(translate(scale(t0, k1), p0, p1), e);\n      });\n    };\n\n    zoom.translateBy = function(selection, x, y) {\n      zoom.transform(selection, function() {\n        return constrain(this.__zoom.translate(\n          typeof x === \"function\" ? x.apply(this, arguments) : x,\n          typeof y === \"function\" ? y.apply(this, arguments) : y\n        ), extent.apply(this, arguments));\n      });\n    };\n\n    function scale(transform, k) {\n      k = Math.max(k0, Math.min(k1, k));\n      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n    }\n\n    function translate(transform, p0, p1) {\n      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n    }\n\n    function constrain(transform, extent) {\n      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n      return dx || dy ? transform.translate(dx, dy) : transform;\n    }\n\n    function centroid(extent) {\n      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n    }\n\n    function schedule(transition, transform, center) {\n      transition\n          .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n          .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n          .tween(\"zoom\", function() {\n            var that = this,\n                args = arguments,\n                g = gesture(that, args),\n                e = extent.apply(that, args),\n                p = center || centroid(e),\n                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n                a = that.__zoom,\n                b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n            return function(t) {\n              if (t === 1) t = b; // Avoid rounding error on end.\n              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n              g.zoom(null, t);\n            };\n          });\n    }\n\n    function gesture(that, args) {\n      for (var i = 0, n = gestures.length, g; i < n; ++i) {\n        if ((g = gestures[i]).that === that) {\n          return g;\n        }\n      }\n      return new Gesture(that, args);\n    }\n\n    function Gesture(that, args) {\n      this.that = that;\n      this.args = args;\n      this.index = -1;\n      this.active = 0;\n      this.extent = extent.apply(that, args);\n    }\n\n    Gesture.prototype = {\n      start: function() {\n        if (++this.active === 1) {\n          this.index = gestures.push(this) - 1;\n          this.emit(\"start\");\n        }\n        return this;\n      },\n      zoom: function(key, transform) {\n        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n        this.that.__zoom = transform;\n        this.emit(\"zoom\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) {\n          gestures.splice(this.index, 1);\n          this.index = -1;\n          this.emit(\"end\");\n        }\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function wheeled() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          t = this.__zoom,\n          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n          p = mouse(this);\n\n      // If the mouse is in the same location as before, reuse it.\n      // If there were recent wheel events, reset the wheel idle timeout.\n      if (g.wheel) {\n        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n          g.mouse[1] = t.invert(g.mouse[0] = p);\n        }\n        clearTimeout(g.wheel);\n      }\n\n      // If this wheel event won’t trigger a transform change, ignore it.\n      else if (t.k === k) return;\n\n      // Otherwise, capture the mouse point and location at the start.\n      else {\n        g.mouse = [p, t.invert(p)];\n        interrupt(this);\n        g.start();\n      }\n\n      noevent$1();\n      g.wheel = setTimeout(wheelidled, wheelDelay);\n      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n      function wheelidled() {\n        g.wheel = null;\n        g.end();\n      }\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n          p = mouse(this);\n\n      dragDisable(exports.event.view);\n      nopropagation$1();\n      g.mouse = [p, this.__zoom.invert(p)];\n      interrupt(this);\n      g.start();\n\n      function mousemoved() {\n        noevent$1();\n        g.moved = true;\n        g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n      }\n\n      function mouseupped() {\n        v.on(\"mousemove.zoom mouseup.zoom\", null);\n        dragEnable(exports.event.view, g.moved);\n        noevent$1();\n        g.end();\n      }\n    }\n\n    function dblclicked() {\n      if (!filter.apply(this, arguments)) return;\n      var t0 = this.__zoom,\n          p0 = mouse(this),\n          p1 = t0.invert(p0),\n          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n      noevent$1();\n      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n      else select(this).call(zoom.transform, t1);\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p;\n\n      nopropagation$1();\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        p = [p, this.__zoom.invert(p), t.identifier];\n        if (!g.touch0) g.touch0 = p;\n        else if (!g.touch1) g.touch1 = p;\n      }\n      if (touchstarting) {\n        touchstarting = clearTimeout(touchstarting);\n        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n      }\n      if (exports.event.touches.length === n) {\n        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n        interrupt(this);\n        g.start();\n      }\n    }\n\n    function touchmoved() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p, l;\n\n      noevent$1();\n      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n      }\n      t = g.that.__zoom;\n      if (g.touch1) {\n        var p0 = g.touch0[0], l0 = g.touch0[1],\n            p1 = g.touch1[0], l1 = g.touch1[1],\n            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n        t = scale(t, Math.sqrt(dp / dl));\n        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n      }\n      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n      else return;\n      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n    }\n\n    function touchended() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t;\n\n      nopropagation$1();\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, touchDelay);\n      for (i = 0; i < n; ++i) {\n        t = touches[i];\n        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n      }\n      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n      if (!g.touch0) g.end();\n    }\n\n    zoom.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), zoom) : filter;\n    };\n\n    zoom.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n    };\n\n    zoom.scaleExtent = function(_) {\n      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n    };\n\n    zoom.translateExtent = function(_) {\n      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n    };\n\n    zoom.duration = function(_) {\n      return arguments.length ? (duration = +_, zoom) : duration;\n    };\n\n    zoom.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? zoom : value;\n    };\n\n    return zoom;\n  }\n\n  function constant$10(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function BrushEvent(target, type, selection) {\n    this.target = target;\n    this.type = type;\n    this.selection = selection;\n  }\n\n  function nopropagation$2() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$2() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  var MODE_DRAG = {name: \"drag\"};\n  var MODE_SPACE = {name: \"space\"};\n  var MODE_HANDLE = {name: \"handle\"};\n  var MODE_CENTER = {name: \"center\"};\n  var X = {\n    name: \"x\",\n    handles: [\"e\", \"w\"].map(type$1),\n    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n  };\n\n  var Y = {\n    name: \"y\",\n    handles: [\"n\", \"s\"].map(type$1),\n    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n  };\n\n  var XY = {\n    name: \"xy\",\n    handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n    input: function(xy) { return xy; },\n    output: function(xy) { return xy; }\n  };\n\n  var cursors = {\n    overlay: \"crosshair\",\n    selection: \"move\",\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n\n  var flipX = {\n    e: \"w\",\n    w: \"e\",\n    nw: \"ne\",\n    ne: \"nw\",\n    se: \"sw\",\n    sw: \"se\"\n  };\n\n  var flipY = {\n    n: \"s\",\n    s: \"n\",\n    nw: \"sw\",\n    ne: \"se\",\n    se: \"ne\",\n    sw: \"nw\"\n  };\n\n  var signsX = {\n    overlay: +1,\n    selection: +1,\n    n: null,\n    e: +1,\n    s: null,\n    w: -1,\n    nw: -1,\n    ne: +1,\n    se: +1,\n    sw: -1\n  };\n\n  var signsY = {\n    overlay: +1,\n    selection: +1,\n    n: -1,\n    e: null,\n    s: +1,\n    w: null,\n    nw: -1,\n    ne: -1,\n    se: +1,\n    sw: +1\n  };\n\n  function type$1(t) {\n    return {type: t};\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$2() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent$1() {\n    var svg = this.ownerSVGElement || this;\n    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n  }\n\n  // Like d3.local, but with the name “__brush” rather than auto-generated.\n  function local$1(node) {\n    while (!node.__brush) if (!(node = node.parentNode)) return;\n    return node.__brush;\n  }\n\n  function empty$1(extent) {\n    return extent[0][0] === extent[1][0]\n        || extent[0][1] === extent[1][1];\n  }\n\n  function brushSelection(node) {\n    var state = node.__brush;\n    return state ? state.dim.output(state.selection) : null;\n  }\n\n  function brushX() {\n    return brush$1(X);\n  }\n\n  function brushY() {\n    return brush$1(Y);\n  }\n\n  function brush() {\n    return brush$1(XY);\n  }\n\n  function brush$1(dim) {\n    var extent = defaultExtent$1,\n        filter = defaultFilter$2,\n        listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n        handleSize = 6,\n        touchending;\n\n    function brush(group) {\n      var overlay = group\n          .property(\"__brush\", initialize)\n        .selectAll(\".overlay\")\n        .data([type$1(\"overlay\")]);\n\n      overlay.enter().append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"pointer-events\", \"all\")\n          .attr(\"cursor\", cursors.overlay)\n        .merge(overlay)\n          .each(function() {\n            var extent = local$1(this).extent;\n            select(this)\n                .attr(\"x\", extent[0][0])\n                .attr(\"y\", extent[0][1])\n                .attr(\"width\", extent[1][0] - extent[0][0])\n                .attr(\"height\", extent[1][1] - extent[0][1]);\n          });\n\n      group.selectAll(\".selection\")\n        .data([type$1(\"selection\")])\n        .enter().append(\"rect\")\n          .attr(\"class\", \"selection\")\n          .attr(\"cursor\", cursors.selection)\n          .attr(\"fill\", \"#777\")\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"#fff\")\n          .attr(\"shape-rendering\", \"crispEdges\");\n\n      var handle = group.selectAll(\".handle\")\n        .data(dim.handles, function(d) { return d.type; });\n\n      handle.exit().remove();\n\n      handle.enter().append(\"rect\")\n          .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n          .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n      group\n          .each(redraw)\n          .attr(\"fill\", \"none\")\n          .attr(\"pointer-events\", \"all\")\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .on(\"mousedown.brush touchstart.brush\", started);\n    }\n\n    brush.move = function(group, selection) {\n      if (group.selection) {\n        group\n            .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n            .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n            .tween(\"brush\", function() {\n              var that = this,\n                  state = that.__brush,\n                  emit = emitter(that, arguments),\n                  selection0 = state.selection,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                  i = interpolate(selection0, selection1);\n\n              function tween(t) {\n                state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n                redraw.call(that);\n                emit.brush();\n              }\n\n              return selection0 && selection1 ? tween : tween(1);\n            });\n      } else {\n        group\n            .each(function() {\n              var that = this,\n                  args = arguments,\n                  state = that.__brush,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                  emit = emitter(that, args).beforestart();\n\n              interrupt(that);\n              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n              redraw.call(that);\n              emit.start().brush().end();\n            });\n      }\n    };\n\n    function redraw() {\n      var group = select(this),\n          selection = local$1(this).selection;\n\n      if (selection) {\n        group.selectAll(\".selection\")\n            .style(\"display\", null)\n            .attr(\"x\", selection[0][0])\n            .attr(\"y\", selection[0][1])\n            .attr(\"width\", selection[1][0] - selection[0][0])\n            .attr(\"height\", selection[1][1] - selection[0][1]);\n\n        group.selectAll(\".handle\")\n            .style(\"display\", null)\n            .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n            .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n            .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n            .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n      }\n\n      else {\n        group.selectAll(\".selection,.handle\")\n            .style(\"display\", \"none\")\n            .attr(\"x\", null)\n            .attr(\"y\", null)\n            .attr(\"width\", null)\n            .attr(\"height\", null);\n      }\n    }\n\n    function emitter(that, args) {\n      return that.__brush.emitter || new Emitter(that, args);\n    }\n\n    function Emitter(that, args) {\n      this.that = that;\n      this.args = args;\n      this.state = that.__brush;\n      this.active = 0;\n    }\n\n    Emitter.prototype = {\n      beforestart: function() {\n        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n        return this;\n      },\n      start: function() {\n        if (this.starting) this.starting = false, this.emit(\"start\");\n        return this;\n      },\n      brush: function() {\n        this.emit(\"brush\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function started() {\n      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n      else if (touchending) return;\n      if (!filter.apply(this, arguments)) return;\n\n      var that = this,\n          type = exports.event.target.__data__.type,\n          mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n          signX = dim === Y ? null : signsX[type],\n          signY = dim === X ? null : signsY[type],\n          state = local$1(that),\n          extent = state.extent,\n          selection = state.selection,\n          W = extent[0][0], w0, w1,\n          N = extent[0][1], n0, n1,\n          E = extent[1][0], e0, e1,\n          S = extent[1][1], s0, s1,\n          dx,\n          dy,\n          moving,\n          shifting = signX && signY && exports.event.shiftKey,\n          lockX,\n          lockY,\n          point0 = mouse(that),\n          point = point0,\n          emit = emitter(that, arguments).beforestart();\n\n      if (type === \"overlay\") {\n        state.selection = selection = [\n          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n        ];\n      } else {\n        w0 = selection[0][0];\n        n0 = selection[0][1];\n        e0 = selection[1][0];\n        s0 = selection[1][1];\n      }\n\n      w1 = w0;\n      n1 = n0;\n      e1 = e0;\n      s1 = s0;\n\n      var group = select(that)\n          .attr(\"pointer-events\", \"none\");\n\n      var overlay = group.selectAll(\".overlay\")\n          .attr(\"cursor\", cursors[type]);\n\n      if (exports.event.touches) {\n        group\n            .on(\"touchmove.brush\", moved, true)\n            .on(\"touchend.brush touchcancel.brush\", ended, true);\n      } else {\n        var view = select(exports.event.view)\n            .on(\"keydown.brush\", keydowned, true)\n            .on(\"keyup.brush\", keyupped, true)\n            .on(\"mousemove.brush\", moved, true)\n            .on(\"mouseup.brush\", ended, true);\n\n        dragDisable(exports.event.view);\n      }\n\n      nopropagation$2();\n      interrupt(that);\n      redraw.call(that);\n      emit.start();\n\n      function moved() {\n        var point1 = mouse(that);\n        if (shifting && !lockX && !lockY) {\n          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n          else lockX = true;\n        }\n        point = point1;\n        moving = true;\n        noevent$2();\n        move();\n      }\n\n      function move() {\n        var t;\n\n        dx = point[0] - point0[0];\n        dy = point[1] - point0[1];\n\n        switch (mode) {\n          case MODE_SPACE:\n          case MODE_DRAG: {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n          case MODE_HANDLE: {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n          case MODE_CENTER: {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n        }\n\n        if (e1 < w1) {\n          signX *= -1;\n          t = w0, w0 = e0, e0 = t;\n          t = w1, w1 = e1, e1 = t;\n          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n        }\n\n        if (s1 < n1) {\n          signY *= -1;\n          t = n0, n0 = s0, s0 = t;\n          t = n1, n1 = s1, s1 = t;\n          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n        }\n\n        selection = state.selection; // May be set by brush.move!\n\n        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n        if (selection[0][0] !== w1\n            || selection[0][1] !== n1\n            || selection[1][0] !== e1\n            || selection[1][1] !== s1) {\n          state.selection = [[w1, n1], [e1, s1]];\n          redraw.call(that);\n          emit.brush();\n        }\n      }\n\n      function ended() {\n        nopropagation$2();\n        if (exports.event.touches) {\n          if (exports.event.touches.length) return;\n          if (touchending) clearTimeout(touchending);\n          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n          group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n        } else {\n          dragEnable(exports.event.view, moving);\n          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n        }\n        group.attr(\"pointer-events\", \"all\");\n        overlay.attr(\"cursor\", cursors.overlay);\n        if (empty$1(selection)) state.selection = null, redraw.call(that);\n        emit.end();\n      }\n\n      function keydowned() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n\n      function keyupped() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE\n            if (mode === MODE_SPACE) {\n              if (exports.event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n    }\n\n    function initialize() {\n      var state = this.__brush || {selection: null};\n      state.extent = extent.apply(this, arguments);\n      state.dim = dim;\n      return state;\n    }\n\n    brush.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n    };\n\n    brush.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), brush) : filter;\n    };\n\n    brush.handleSize = function(_) {\n      return arguments.length ? (handleSize = +_, brush) : handleSize;\n    };\n\n    brush.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? brush : value;\n    };\n\n    return brush;\n  }\n\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var pi$3 = Math.PI;\n  var halfPi$2 = pi$3 / 2;\n  var tau$3 = pi$3 * 2;\n  var max$1 = Math.max;\n\n  function compareValue(compare) {\n    return function(a, b) {\n      return compare(\n        a.source.value + a.target.value,\n        b.source.value + b.target.value\n      );\n    };\n  }\n\n  function chord() {\n    var padAngle = 0,\n        sortGroups = null,\n        sortSubgroups = null,\n        sortChords = null;\n\n    function chord(matrix) {\n      var n = matrix.length,\n          groupSums = [],\n          groupIndex = range(n),\n          subgroupIndex = [],\n          chords = [],\n          groups = chords.groups = new Array(n),\n          subgroups = new Array(n * n),\n          k,\n          x,\n          x0,\n          dx,\n          i,\n          j;\n\n      // Compute the sum.\n      k = 0, i = -1; while (++i < n) {\n        x = 0, j = -1; while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(range(n));\n        k += x;\n      }\n\n      // Sort groups…\n      if (sortGroups) groupIndex.sort(function(a, b) {\n        return sortGroups(groupSums[a], groupSums[b]);\n      });\n\n      // Sort subgroups…\n      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n        d.sort(function(a, b) {\n          return sortSubgroups(matrix[i][a], matrix[i][b]);\n        });\n      });\n\n      // Convert the sum to scaling factor for [0, 2pi].\n      // TODO Allow start and end angle to be specified?\n      // TODO Allow padding to be specified as percentage?\n      k = max$1(0, tau$3 - padAngle * n) / k;\n      dx = k ? padAngle : tau$3 / n;\n\n      // Compute the start and end angle for each group and subgroup.\n      // Note: Opera has a bug reordering object literal properties!\n      x = 0, i = -1; while (++i < n) {\n        x0 = x, j = -1; while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[dj * n + di] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += dx;\n      }\n\n      // Generate chords for each (non-empty) subgroup-subgroup link.\n      i = -1; while (++i < n) {\n        j = i - 1; while (++j < n) {\n          var source = subgroups[j * n + i],\n              target = subgroups[i * n + j];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value\n                ? {source: target, target: source}\n                : {source: source, target: target});\n          }\n        }\n      }\n\n      return sortChords ? chords.sort(sortChords) : chords;\n    }\n\n    chord.padAngle = function(_) {\n      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n    };\n\n    chord.sortGroups = function(_) {\n      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n    };\n\n    chord.sortSubgroups = function(_) {\n      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n    };\n\n    chord.sortChords = function(_) {\n      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n    };\n\n    return chord;\n  }\n\n  var slice$5 = Array.prototype.slice;\n\n  function constant$11(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultSource(d) {\n    return d.source;\n  }\n\n  function defaultTarget(d) {\n    return d.target;\n  }\n\n  function defaultRadius$1(d) {\n    return d.radius;\n  }\n\n  function defaultStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function defaultEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function ribbon() {\n    var source = defaultSource,\n        target = defaultTarget,\n        radius = defaultRadius$1,\n        startAngle = defaultStartAngle,\n        endAngle = defaultEndAngle,\n        context = null;\n\n    function ribbon() {\n      var buffer,\n          argv = slice$5.call(arguments),\n          s = source.apply(this, argv),\n          t = target.apply(this, argv),\n          sr = +radius.apply(this, (argv[0] = s, argv)),\n          sa0 = startAngle.apply(this, argv) - halfPi$2,\n          sa1 = endAngle.apply(this, argv) - halfPi$2,\n          sx0 = sr * cos(sa0),\n          sy0 = sr * sin(sa0),\n          tr = +radius.apply(this, (argv[0] = t, argv)),\n          ta0 = startAngle.apply(this, argv) - halfPi$2,\n          ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n      if (!context) context = buffer = path();\n\n      context.moveTo(sx0, sy0);\n      context.arc(0, 0, sr, sa0, sa1);\n      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n      context.quadraticCurveTo(0, 0, sx0, sy0);\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    ribbon.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : radius;\n    };\n\n    ribbon.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : startAngle;\n    };\n\n    ribbon.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : endAngle;\n    };\n\n    ribbon.source = function(_) {\n      return arguments.length ? (source = _, ribbon) : source;\n    };\n\n    ribbon.target = function(_) {\n      return arguments.length ? (target = _, ribbon) : target;\n    };\n\n    ribbon.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n    };\n\n    return ribbon;\n  }\n\n  // Adds floating point numbers with twice the normal precision.\n  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n  // 305–363 (1997).\n  // Code adapted from GeographicLib by Charles F. F. Karney,\n  // http://geographiclib.sourceforge.net/\n\n  function adder() {\n    return new Adder;\n  }\n\n  function Adder() {\n    this.reset();\n  }\n\n  Adder.prototype = {\n    constructor: Adder,\n    reset: function() {\n      this.s = // rounded value\n      this.t = 0; // exact error\n    },\n    add: function(y) {\n      add$1(temp, y, this.t);\n      add$1(this, temp.s, this.s);\n      if (this.s) this.t += temp.t;\n      else this.s = temp.t;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n\n  var temp = new Adder;\n\n  function add$1(adder, a, b) {\n    var x = adder.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    adder.t = (a - av) + (b - bv);\n  }\n\n  var epsilon$4 = 1e-6;\n  var epsilon2$2 = 1e-12;\n  var pi$4 = Math.PI;\n  var halfPi$3 = pi$4 / 2;\n  var quarterPi = pi$4 / 4;\n  var tau$4 = pi$4 * 2;\n\n  var degrees$1 = 180 / pi$4;\n  var radians = pi$4 / 180;\n\n  var abs = Math.abs;\n  var atan = Math.atan;\n  var atan2 = Math.atan2;\n  var cos$1 = Math.cos;\n  var ceil = Math.ceil;\n  var exp = Math.exp;\n  var log$1 = Math.log;\n  var pow$1 = Math.pow;\n  var sin$1 = Math.sin;\n  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n  var sqrt$1 = Math.sqrt;\n  var tan = Math.tan;\n\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n  }\n\n  function asin$1(x) {\n    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n  }\n\n  function haversin(x) {\n    return (x = sin$1(x / 2)) * x;\n  }\n\n  function noop$2() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n\n  var streamObjectType = {\n    Feature: function(feature, stream) {\n      streamGeometry(feature.geometry, stream);\n    },\n    FeatureCollection: function(object, stream) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) streamGeometry(features[i].geometry, stream);\n    }\n  };\n\n  var streamGeometryType = {\n    Sphere: function(object, stream) {\n      stream.sphere();\n    },\n    Point: function(object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamLine(coordinates[i], stream, 0);\n    },\n    Polygon: function(object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamPolygon(coordinates[i], stream);\n    },\n    GeometryCollection: function(object, stream) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) streamGeometry(geometries[i], stream);\n    }\n  };\n\n  function streamLine(coordinates, stream, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    stream.lineStart();\n    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n    stream.lineEnd();\n  }\n\n  function streamPolygon(coordinates, stream) {\n    var i = -1, n = coordinates.length;\n    stream.polygonStart();\n    while (++i < n) streamLine(coordinates[i], stream, 1);\n    stream.polygonEnd();\n  }\n\n  function geoStream(object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  var areaRingSum = adder();\n\n  var areaSum = adder();\n  var lambda00;\n  var phi00;\n  var lambda0;\n  var cosPhi0;\n  var sinPhi0;\n  var areaStream = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaRingSum.reset();\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function() {\n      var areaRing = +areaRingSum;\n      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n      this.lineStart = this.lineEnd = this.point = noop$2;\n    },\n    sphere: function() {\n      areaSum.add(tau$4);\n    }\n  };\n\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n\n  function areaRingEnd() {\n    areaPoint(lambda00, phi00);\n  }\n\n  function areaPointFirst(lambda, phi) {\n    areaStream.point = areaPoint;\n    lambda00 = lambda, phi00 = phi;\n    lambda *= radians, phi *= radians;\n    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n  }\n\n  function areaPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    var dLambda = lambda - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        cosPhi = cos$1(phi),\n        sinPhi = sin$1(phi),\n        k = sinPhi0 * sinPhi,\n        u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n        v = k * sdLambda * sin$1(adLambda);\n    areaRingSum.add(atan2(v, u));\n\n    // Advance the previous points.\n    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n  }\n\n  function area$2(object) {\n    areaSum.reset();\n    geoStream(object, areaStream);\n    return areaSum * 2;\n  }\n\n  function spherical(cartesian) {\n    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n\n  function cartesian(spherical) {\n    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  // TODO return a\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  // TODO return d\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\nvar   lambda0$1;\n  var phi0;\n  var lambda1;\n  var phi1;\n  var lambda2;\nvar   lambda00$1;\nvar   phi00$1;\n  var p0;\n  var deltaSum = adder();\n  var ranges;\nvar   range$1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: boundsLineStart,\n    lineEnd: boundsLineEnd,\n    polygonStart: function() {\n      boundsStream.point = boundsRingPoint;\n      boundsStream.lineStart = boundsRingStart;\n      boundsStream.lineEnd = boundsRingEnd;\n      deltaSum.reset();\n      areaStream.polygonStart();\n    },\n    polygonEnd: function() {\n      areaStream.polygonEnd();\n      boundsStream.point = boundsPoint;\n      boundsStream.lineStart = boundsLineStart;\n      boundsStream.lineEnd = boundsLineEnd;\n      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n      else if (deltaSum > epsilon$4) phi1 = 90;\n      else if (deltaSum < -epsilon$4) phi0 = -90;\n      range$1[0] = lambda0$1, range$1[1] = lambda1;\n    }\n  };\n\n  function boundsPoint(lambda, phi) {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n    if (phi < phi0) phi0 = phi;\n    if (phi > phi1) phi1 = phi;\n  }\n\n  function linePoint(lambda, phi) {\n    var p = cartesian([lambda * radians, phi * radians]);\n    if (p0) {\n      var normal = cartesianCross(p0, p),\n          equatorial = [normal[1], -normal[0], 0],\n          inflection = cartesianCross(equatorial, normal);\n      cartesianNormalizeInPlace(inflection);\n      inflection = spherical(inflection);\n      var delta = lambda - lambda2,\n          sign = delta > 0 ? 1 : -1,\n          lambdai = inflection[0] * degrees$1 * sign,\n          phii,\n          antimeridian = abs(delta) > 180;\n      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = inflection[1] * degrees$1;\n        if (phii > phi1) phi1 = phii;\n      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = -inflection[1] * degrees$1;\n        if (phii < phi0) phi0 = phii;\n      } else {\n        if (phi < phi0) phi0 = phi;\n        if (phi > phi1) phi1 = phi;\n      }\n      if (antimeridian) {\n        if (lambda < lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      } else {\n        if (lambda1 >= lambda0$1) {\n          if (lambda < lambda0$1) lambda0$1 = lambda;\n          if (lambda > lambda1) lambda1 = lambda;\n        } else {\n          if (lambda > lambda2) {\n            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n          } else {\n            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n          }\n        }\n      }\n    } else {\n      boundsPoint(lambda, phi);\n    }\n    p0 = p, lambda2 = lambda;\n  }\n\n  function boundsLineStart() {\n    boundsStream.point = linePoint;\n  }\n\n  function boundsLineEnd() {\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    boundsStream.point = boundsPoint;\n    p0 = null;\n  }\n\n  function boundsRingPoint(lambda, phi) {\n    if (p0) {\n      var delta = lambda - lambda2;\n      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n    } else {\n      lambda00$1 = lambda, phi00$1 = phi;\n    }\n    areaStream.point(lambda, phi);\n    linePoint(lambda, phi);\n  }\n\n  function boundsRingStart() {\n    areaStream.lineStart();\n  }\n\n  function boundsRingEnd() {\n    boundsRingPoint(lambda00$1, phi00$1);\n    areaStream.lineEnd();\n    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    p0 = null;\n  }\n\n  // Finds the left-right distance between two longitudes.\n  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n  // the distance between ±180° to be 360°.\n  function angle(lambda0, lambda1) {\n    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n  }\n\n  function rangeCompare(a, b) {\n    return a[0] - b[0];\n  }\n\n  function rangeContains(range, x) {\n    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n  }\n\n  function bounds(feature) {\n    var i, n, a, b, merged, deltaMax, delta;\n\n    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n    ranges = [];\n    geoStream(feature, boundsStream);\n\n    // First, sort ranges by their minimum longitudes.\n    if (n = ranges.length) {\n      ranges.sort(rangeCompare);\n\n      // Then, merge any ranges that overlap.\n      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n        b = ranges[i];\n        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n        } else {\n          merged.push(a = b);\n        }\n      }\n\n      // Finally, find the largest gap between the merged ranges.\n      // The final bounding box will be the inverse of this gap.\n      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n        b = merged[i];\n        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n      }\n    }\n\n    ranges = range$1 = null;\n\n    return lambda0$1 === Infinity || phi0 === Infinity\n        ? [[NaN, NaN], [NaN, NaN]]\n        : [[lambda0$1, phi0], [lambda1, phi1]];\n  }\n\n  var W0;\n  var W1;\n  var X0;\n  var Y0;\n  var Z0;\n  var X1;\n  var Y1;\n  var Z1;\n  var X2;\n  var Y2;\n  var Z2;\nvar   lambda00$2;\nvar   phi00$2;\n  var x0;\n  var y0;\n  var z0;\n  // previous point\n\n  var centroidStream = {\n    sphere: noop$2,\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function() {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function() {\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    }\n  };\n\n  // Arithmetic mean of Cartesian vectors.\n  function centroidPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n  }\n\n  function centroidPointCartesian(x, y, z) {\n    ++W0;\n    X0 += (x - X0) / W0;\n    Y0 += (y - Y0) / W0;\n    Z0 += (z - Z0) / W0;\n  }\n\n  function centroidLineStart() {\n    centroidStream.point = centroidLinePointFirst;\n  }\n\n  function centroidLinePointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidStream.point = centroidLinePoint;\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLinePoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n\n  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n  // J. Applied Mechanics 42, 239 (1975).\n  function centroidRingStart() {\n    centroidStream.point = centroidRingPointFirst;\n  }\n\n  function centroidRingEnd() {\n    centroidRingPoint(lambda00$2, phi00$2);\n    centroidStream.point = centroidPoint;\n  }\n\n  function centroidRingPointFirst(lambda, phi) {\n    lambda00$2 = lambda, phi00$2 = phi;\n    lambda *= radians, phi *= radians;\n    centroidStream.point = centroidRingPoint;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidRingPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        cx = y0 * z - z0 * y,\n        cy = z0 * x - x0 * z,\n        cz = x0 * y - y0 * x,\n        m = sqrt$1(cx * cx + cy * cy + cz * cz),\n        u = x0 * x + y0 * y + z0 * z,\n        v = m && -acos(u) / m, // area weight\n        w = atan2(m, u); // line weight\n    X2 += v * cx;\n    Y2 += v * cy;\n    Z2 += v * cz;\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroid$1(object) {\n    W0 = W1 =\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    geoStream(object, centroidStream);\n\n    var x = X2,\n        y = Y2,\n        z = Z2,\n        m = x * x + y * y + z * z;\n\n    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n    if (m < epsilon2$2) {\n      x = X1, y = Y1, z = Z1;\n      // If the feature has zero length, fall back to arithmetic mean of point vectors.\n      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n      m = x * x + y * y + z * z;\n      // If the feature still has an undefined ccentroid, then return.\n      if (m < epsilon2$2) return [NaN, NaN];\n    }\n\n    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n  }\n\n  function constant$12(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function compose(a, b) {\n\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  }\n\n  rotationIdentity.invert = rotationIdentity;\n\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n      : rotationLambda(deltaLambda))\n      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n      : rotationIdentity);\n  }\n\n  function forwardRotationLambda(deltaLambda) {\n    return function(lambda, phi) {\n      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n    };\n  }\n\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n        sinDeltaPhi = sin$1(deltaPhi),\n        cosDeltaGamma = cos$1(deltaGamma),\n        sinDeltaGamma = sin$1(deltaGamma);\n\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [\n        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n      ];\n    }\n\n    rotation.invert = function(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [\n        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n      ];\n    };\n\n    return rotation;\n  }\n\n  function rotation(rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    }\n\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    };\n\n    return forward;\n  }\n\n  // Generates a circle centered at [0°, 0°], with a given radius and precision.\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n        sinRadius = sin$1(radius),\n        step = direction * delta;\n    if (t0 == null) {\n      t0 = radius + direction * tau$4;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n    }\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  }\n\n  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n  }\n\n  function circle$1() {\n    var center = constant$12([0, 0]),\n        radius = constant$12(90),\n        precision = constant$12(6),\n        ring,\n        rotate,\n        stream = {point: point};\n\n    function point(x, y) {\n      ring.push(x = rotate(x, y));\n      x[0] *= degrees$1, x[1] *= degrees$1;\n    }\n\n    function circle() {\n      var c = center.apply(this, arguments),\n          r = radius.apply(this, arguments) * radians,\n          p = precision.apply(this, arguments) * radians;\n      ring = [];\n      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n      circleStream(stream, r, p, 1);\n      c = {type: \"Polygon\", coordinates: [ring]};\n      ring = rotate = null;\n      return c;\n    }\n\n    circle.center = function(_) {\n      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$12([+_[0], +_[1]]), circle) : center;\n    };\n\n    circle.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), circle) : radius;\n    };\n\n    circle.precision = function(_) {\n      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$12(+_), circle) : precision;\n    };\n\n    return circle;\n  }\n\n  function clipBuffer() {\n    var lines = [],\n        line;\n    return {\n      point: function(x, y) {\n        line.push([x, y]);\n      },\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      lineEnd: noop$2,\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function() {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function clipLine(a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  function pointEqual(a, b) {\n    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n    this.e = entry; // is an entry?\n    this.v = false; // visited\n    this.n = this.p = null; // next & previous\n  }\n\n  // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n        clip = [],\n        i,\n        n;\n\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n], x;\n\n      // If the first and last points of a segment are coincident, then treat as a\n      // closed ring. TODO if all rings are closed, then the winding order of the\n      // exterior ring should be checked.\n      if (pointEqual(p0, p1)) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n\n    if (!subject.length) return;\n\n    clip.sort(compareIntersection);\n    link$1(subject);\n    link$1(clip);\n\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n          isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      stream.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      stream.lineEnd();\n    }\n  }\n\n  function link$1(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  var clipMax = 1e9;\n  var clipMin = -clipMax;\n  // TODO Use d3-polygon’s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipExtent(x0, y0, x1, y1) {\n\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n\n    function interpolate(from, to, direction, stream) {\n      var a = 0, a1 = 0;\n      if (from == null\n          || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n          || comparePoint(from, to) < 0 ^ direction > 0) {\n        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n        while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb\n          : ca === 0 ? b[1] - a[1]\n          : ca === 1 ? a[0] - b[0]\n          : ca === 2 ? a[1] - b[1]\n          : b[0] - a[0];\n    }\n\n    return function(stream) {\n      var activeStream = stream,\n          bufferStream = clipBuffer(),\n          segments,\n          polygon,\n          ring,\n          x__, y__, v__, // first point\n          x_, y_, v_, // previous point\n          first,\n          clean;\n\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n\n      function polygonInside() {\n        var winding = 0;\n\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n          }\n        }\n\n        return winding;\n      }\n\n      // Buffer geometry within a polygon and then clip it en masse.\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n\n      function polygonEnd() {\n        var startInside = polygonInside(),\n            cleanInside = clean && startInside,\n            visible = (segments = merge(segments)).length;\n        if (cleanInside || visible) {\n          stream.polygonStart();\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n          if (visible) {\n            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n          }\n          stream.polygonEnd();\n        }\n        activeStream = stream, segments = polygon = ring = null;\n      }\n\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);\n          else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clipStream;\n    };\n  }\n\n  function extent$1() {\n    var x0 = 0,\n        y0 = 0,\n        x1 = 960,\n        y1 = 500,\n        cache,\n        cacheStream,\n        clip;\n\n    return clip = {\n      stream: function(stream) {\n        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n      },\n      extent: function(_) {\n        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n      }\n    };\n  }\n\n  var lengthSum = adder();\nvar   lambda0$2;\nvar   sinPhi0$1;\nvar   cosPhi0$1;\n  var lengthStream = {\n    sphere: noop$2,\n    point: noop$2,\n    lineStart: lengthLineStart,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2\n  };\n\n  function lengthLineStart() {\n    lengthStream.point = lengthPointFirst;\n    lengthStream.lineEnd = lengthLineEnd;\n  }\n\n  function lengthLineEnd() {\n    lengthStream.point = lengthStream.lineEnd = noop$2;\n  }\n\n  function lengthPointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n    lengthStream.point = lengthPoint;\n  }\n\n  function lengthPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var sinPhi = sin$1(phi),\n        cosPhi = cos$1(phi),\n        delta = abs(lambda - lambda0$2),\n        cosDelta = cos$1(delta),\n        sinDelta = sin$1(delta),\n        x = cosPhi * sinDelta,\n        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n  }\n\n  function length$2(object) {\n    lengthSum.reset();\n    geoStream(object, lengthStream);\n    return +lengthSum;\n  }\n\n  var coordinates = [null, null];\nvar   object$1 = {type: \"LineString\", coordinates: coordinates};\n  function distance(a, b) {\n    coordinates[0] = a;\n    coordinates[1] = b;\n    return length$2(object$1);\n  }\n\n  function graticuleX(y0, y1, dy) {\n    var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n    return function(x) { return y.map(function(y) { return [x, y]; }); };\n  }\n\n  function graticuleY(x0, x1, dx) {\n    var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n    return function(y) { return x.map(function(x) { return [x, y]; }); };\n  }\n\n  function graticule() {\n    var x1, x0, X1, X0,\n        y1, y0, Y1, Y0,\n        dx = 10, dy = dx, DX = 90, DY = 360,\n        x, y, X, Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {type: \"MultiLineString\", coordinates: lines()};\n    }\n\n    function lines() {\n      return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n    }\n\n    graticule.lines = function() {\n      return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n    };\n\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [\n          X(X0).concat(\n          Y(Y1).slice(1),\n          X(X1).reverse().slice(1),\n          Y(Y0).reverse().slice(1))\n        ]\n      };\n    };\n\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n\n    graticule.extentMajor = function(_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.extentMinor = function(_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n\n    graticule.stepMajor = function(_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.stepMinor = function(_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule\n        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n  }\n\n  function interpolate$2(a, b) {\n    var x0 = a[0] * radians,\n        y0 = a[1] * radians,\n        x1 = b[0] * radians,\n        y1 = b[1] * radians,\n        cy0 = cos$1(y0),\n        sy0 = sin$1(y0),\n        cy1 = cos$1(y1),\n        sy1 = sin$1(y1),\n        kx0 = cy0 * cos$1(x0),\n        ky0 = cy0 * sin$1(x0),\n        kx1 = cy1 * cos$1(x1),\n        ky1 = cy1 * sin$1(x1),\n        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n        k = sin$1(d);\n\n    var interpolate = d ? function(t) {\n      var B = sin$1(t *= d) / k,\n          A = sin$1(d - t) / k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [\n        atan2(y, x) * degrees$1,\n        atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n      ];\n    } : function() {\n      return [x0 * degrees$1, y0 * degrees$1];\n    };\n\n    interpolate.distance = d;\n\n    return interpolate;\n  }\n\n  function identity$7(x) {\n    return x;\n  }\n\nvar   areaSum$1 = adder();\nvar   areaRingSum$1 = adder();\n  var x00;\n  var y00;\nvar   x0$1;\nvar   y0$1;\n  var areaStream$1 = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaStream$1.lineStart = areaRingStart$1;\n      areaStream$1.lineEnd = areaRingEnd$1;\n    },\n    polygonEnd: function() {\n      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n      areaSum$1.add(abs(areaRingSum$1));\n      areaRingSum$1.reset();\n    },\n    result: function() {\n      var area = areaSum$1 / 2;\n      areaSum$1.reset();\n      return area;\n    }\n  };\n\n  function areaRingStart$1() {\n    areaStream$1.point = areaPointFirst$1;\n  }\n\n  function areaPointFirst$1(x, y) {\n    areaStream$1.point = areaPoint$1;\n    x00 = x0$1 = x, y00 = y0$1 = y;\n  }\n\n  function areaPoint$1(x, y) {\n    areaRingSum$1.add(y0$1 * x - x0$1 * y);\n    x0$1 = x, y0$1 = y;\n  }\n\n  function areaRingEnd$1() {\n    areaPoint$1(x00, y00);\n  }\n\nvar   x0$2 = Infinity;\nvar   y0$2 = x0$2;\n  var x1 = -x0$2;\n  var y1 = x1;\n  var boundsStream$1 = {\n    point: boundsPoint$1,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2,\n    result: function() {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n\n  function boundsPoint$1(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n\nvar   X0$1 = 0;\nvar   Y0$1 = 0;\nvar   Z0$1 = 0;\nvar   X1$1 = 0;\nvar   Y1$1 = 0;\nvar   Z1$1 = 0;\nvar   X2$1 = 0;\nvar   Y2$1 = 0;\nvar   Z2$1 = 0;\nvar   x00$1;\nvar   y00$1;\nvar   x0$3;\nvar   y0$3;\n  var centroidStream$1 = {\n    point: centroidPoint$1,\n    lineStart: centroidLineStart$1,\n    lineEnd: centroidLineEnd$1,\n    polygonStart: function() {\n      centroidStream$1.lineStart = centroidRingStart$1;\n      centroidStream$1.lineEnd = centroidRingEnd$1;\n    },\n    polygonEnd: function() {\n      centroidStream$1.point = centroidPoint$1;\n      centroidStream$1.lineStart = centroidLineStart$1;\n      centroidStream$1.lineEnd = centroidLineEnd$1;\n    },\n    result: function() {\n      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n          : [NaN, NaN];\n      X0$1 = Y0$1 = Z0$1 =\n      X1$1 = Y1$1 = Z1$1 =\n      X2$1 = Y2$1 = Z2$1 = 0;\n      return centroid;\n    }\n  };\n\n  function centroidPoint$1(x, y) {\n    X0$1 += x;\n    Y0$1 += y;\n    ++Z0$1;\n  }\n\n  function centroidLineStart$1() {\n    centroidStream$1.point = centroidPointFirstLine;\n  }\n\n  function centroidPointFirstLine(x, y) {\n    centroidStream$1.point = centroidPointLine;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidPointLine(x, y) {\n    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidLineEnd$1() {\n    centroidStream$1.point = centroidPoint$1;\n  }\n\n  function centroidRingStart$1() {\n    centroidStream$1.point = centroidPointFirstRing;\n  }\n\n  function centroidRingEnd$1() {\n    centroidPointRing(x00$1, y00$1);\n  }\n\n  function centroidPointFirstRing(x, y) {\n    centroidStream$1.point = centroidPointRing;\n    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n  }\n\n  function centroidPointRing(x, y) {\n    var dx = x - x0$3,\n        dy = y - y0$3,\n        z = sqrt$1(dx * dx + dy * dy);\n\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n\n    z = y0$3 * x - x0$3 * y;\n    X2$1 += z * (x0$3 + x);\n    Y2$1 += z * (y0$3 + y);\n    Z2$1 += z * 3;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function PathContext(context) {\n    var pointRadius = 4.5;\n\n    var stream = {\n      point: point,\n\n      // While inside a line, override point to moveTo then lineTo.\n      lineStart: function() { stream.point = pointLineStart; },\n      lineEnd: lineEnd,\n\n      // While inside a polygon, override lineEnd to closePath.\n      polygonStart: function() { stream.lineEnd = lineEndPolygon; },\n      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\n\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n\n      result: noop$2\n    };\n\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, tau$4);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function PathString() {\n    var pointCircle = circle$2(4.5),\n        string = [];\n\n    var stream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = circle$2(_);\n        return stream;\n      },\n      result: function() {\n        if (string.length) {\n          var result = string.join(\"\");\n          string = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      string.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      string.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      string.push(\"L\", x, \",\", y);\n    }\n\n    function lineStart() {\n      stream.point = pointLineStart;\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      string.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function circle$2(radius) {\n    return \"m0,\" + radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n        + \"z\";\n  }\n\n  function index$3() {\n    var pointRadius = 4.5,\n        projection,\n        projectionStream,\n        context,\n        contextStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        geoStream(object, projectionStream(contextStream));\n      }\n      return contextStream.result();\n    }\n\n    path.area = function(object) {\n      geoStream(object, projectionStream(areaStream$1));\n      return areaStream$1.result();\n    };\n\n    path.bounds = function(object) {\n      geoStream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n\n    path.centroid = function(object) {\n      geoStream(object, projectionStream(centroidStream$1));\n      return centroidStream$1.result();\n    };\n\n    path.projection = function(_) {\n      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n    };\n\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new PathString : new PathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    return path.projection(null).context(null);\n  }\n\n  var sum$2 = adder();\n\n  function polygonContains(polygon, point) {\n    var lambda = point[0],\n        phi = point[1],\n        normal = [sin$1(lambda), -cos$1(lambda), 0],\n        angle = 0,\n        winding = 0;\n\n    sum$2.reset();\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n          m,\n          point0 = ring[m - 1],\n          lambda0 = point0[0],\n          phi0 = point0[1] / 2 + quarterPi,\n          sinPhi0 = sin$1(phi0),\n          cosPhi0 = cos$1(phi0);\n\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n            lambda1 = point1[0],\n            phi1 = point1[1] / 2 + quarterPi,\n            sinPhi1 = sin$1(phi1),\n            cosPhi1 = cos$1(phi1),\n            delta = lambda1 - lambda0,\n            sign = delta >= 0 ? 1 : -1,\n            absDelta = sign * delta,\n            antimeridian = absDelta > pi$4,\n            k = sinPhi0 * sinPhi1;\n\n        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau$4 : delta;\n\n        // Are the longitudes either side of the point’s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    }\n\n    // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n    return (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n  }\n\n  function clip(pointVisible, clipLine, interpolate, start) {\n    return function(rotate, sink) {\n      var line = clipLine(sink),\n          rotatedStart = rotate.invert(start[0], start[1]),\n          ringBuffer = clipBuffer(),\n          ringSink = clipLine(ringBuffer),\n          polygonStarted = false,\n          polygon,\n          segments,\n          ring;\n\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, rotatedStart);\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n\n      function point(lambda, phi) {\n        var point = rotate(lambda, phi);\n        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n      }\n\n      function pointLine(lambda, phi) {\n        var point = rotate(lambda, phi);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        var point = rotate(lambda, phi);\n        ringSink.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n\n        var clean = ringSink.clean(),\n            ringSegments = ringBuffer.result(),\n            i, n = ringSegments.length, m,\n            segment,\n            point;\n\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n\n        if (!n) return;\n\n        // No intersections.\n        if (clean & 1) {\n          segment = ringSegments[0];\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n            sink.lineEnd();\n          }\n          return;\n        }\n\n        // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n        segments.push(ringSegments.filter(validSegment));\n      }\n\n      return clip;\n    };\n  }\n\n  function validSegment(segment) {\n    return segment.length > 1;\n  }\n\n  // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n  }\n\n  var clipAntimeridian = clip(\n    function() { return true; },\n    clipAntimeridianLine,\n    clipAntimeridianInterpolate,\n    [-pi$4, -halfPi$3]\n  );\n\n  // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n        phi0 = NaN,\n        sign0 = NaN,\n        clean; // no intersections\n\n    return {\n      lineStart: function() {\n        stream.lineStart();\n        clean = 1;\n      },\n      point: function(lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n            delta = abs(lambda1 - lambda0);\n        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          clean = 0;\n        }\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n        cosPhi1,\n        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs(sinLambda0Lambda1) > epsilon$4\n        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n        : (phi0 + phi1) / 2;\n  }\n\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n    if (from == null) {\n      phi = direction * halfPi$3;\n      stream.point(-pi$4, phi);\n      stream.point(0, phi);\n      stream.point(pi$4, phi);\n      stream.point(pi$4, 0);\n      stream.point(pi$4, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$4, -phi);\n      stream.point(-pi$4, 0);\n      stream.point(-pi$4, phi);\n    } else if (abs(from[0] - to[0]) > epsilon$4) {\n      var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle(radius, delta) {\n    var cr = cos$1(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    }\n\n    // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n    function clipLine(stream) {\n      var point0, // previous point\n          c0, // code for previous point\n          v0, // visibility of previous point\n          v00, // visibility of first point\n          clean; // no intersections\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(lambda, phi) {\n          var point1 = [lambda, phi],\n              point2,\n              v = visible(lambda, phi),\n              c = smallRadius\n                ? v ? 0 : code(lambda, phi)\n                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n          // Handle degeneracies.\n          // TODO ignore if not clipping polygons.\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n              point1[0] += epsilon$4;\n              point1[1] += epsilon$4;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1]);\n              stream.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function() {\n          return clean | ((v00 && v0) << 1);\n        }\n      };\n    }\n\n    // Intersects the great circle between a and b with the clip circle.\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n          pb = cartesian(b);\n\n      // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n      var n1 = [1, 0, 0], // normal\n          n2 = cartesianCross(pa, pb),\n          n2n2 = cartesianDot(n2, n2),\n          n1n2 = n2[0], // cartesianDot(n1, n2),\n          determinant = n2n2 - n1n2 * n1n2;\n\n      // Two polar points.\n      if (!determinant) return !two && a;\n\n      var c1 =  cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = cartesianCross(n1, n2),\n          A = cartesianScale(n1, c1),\n          B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B);\n\n      // Solve |p(t)|^2 = 1.\n      var u = n1xn2,\n          w = cartesianDot(A, u),\n          uu = cartesianDot(u, u),\n          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n      if (t2 < 0) return;\n\n      var t = sqrt$1(t2),\n          q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n\n      if (!two) return q;\n\n      // Two intersection points.\n      var lambda0 = a[0],\n          lambda1 = b[0],\n          phi0 = a[1],\n          phi1 = b[1],\n          z;\n\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n      var delta = lambda1 - lambda0,\n          polar = abs(delta - pi$4) < epsilon$4,\n          meridian = polar || delta < epsilon$4;\n\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n      // Check that the first point is between a and b.\n      if (meridian\n          ? polar\n            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n            : phi0 <= q[1] && q[1] <= phi1\n          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    }\n\n    // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$4 - radius,\n          code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n      return code;\n    }\n\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n  }\n\n  function transform$1(prototype) {\n    return {\n      stream: transform$2(prototype)\n    };\n  }\n\n  function transform$2(prototype) {\n    function T() {}\n    var p = T.prototype = Object.create(Transform$1.prototype);\n    for (var k in prototype) p[k] = prototype[k];\n    return function(stream) {\n      var t = new T;\n      t.stream = stream;\n      return t;\n    };\n  }\n\n  function Transform$1() {}\n\n  Transform$1.prototype = {\n    point: function(x, y) { this.stream.point(x, y); },\n    sphere: function() { this.stream.sphere(); },\n    lineStart: function() { this.stream.lineStart(); },\n    lineEnd: function() { this.stream.lineEnd(); },\n    polygonStart: function() { this.stream.polygonStart(); },\n    polygonEnd: function() { this.stream.polygonEnd(); }\n  };\n\n  function fit(project, extent, object) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        clip = project.clipExtent && project.clipExtent();\n\n    project\n        .scale(150)\n        .translate([0, 0]);\n\n    if (clip != null) project.clipExtent(null);\n\n    geoStream(object, project.stream(boundsStream$1));\n\n    var b = boundsStream$1.result(),\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n    if (clip != null) project.clipExtent(clip);\n\n    return project\n        .scale(k * 150)\n        .translate([x, y]);\n  }\n\n  function fitSize(project) {\n    return function(size, object) {\n      return fit(project, [[0, 0], size], object);\n    };\n  }\n\n  function fitExtent(project) {\n    return function(extent, object) {\n      return fit(project, extent, object);\n    };\n  }\n\n  var maxDepth = 16;\n  var cosMinDistance = cos$1(30 * radians);\n  // cos(minimum angular distance)\n\n  function resample(project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n\n  function resampleNone(project) {\n    return transform$2({\n      point: function(x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n\n  function resample$1(project, delta2) {\n\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = sqrt$1(a * a + b * b + c * c),\n            phi2 = asin$1(c /= m),\n            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n            p = project(lambda2, phi2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    return function(stream) {\n      var lambda00, x00, y00, a00, b00, c00, // first point\n          lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]), p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transform$2({\n    point: function(x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n\n  function projection(project) {\n    return projectionMutator(function() { return project; })();\n  }\n\n  function projectionMutator(projectAt) {\n    var project,\n        k = 150, // scale\n        x = 480, y = 250, // translate\n        dx, dy, lambda = 0, phi = 0, // center\n        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n        theta = null, preclip = clipAntimeridian, // clip angle\n        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n        cache,\n        cacheStream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * radians, point[1] * radians);\n      return [point[0] * k + dx, dy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n      return point && [point[0] * degrees$1, point[1] * degrees$1];\n    }\n\n    function projectTransform(x, y) {\n      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n    }\n\n    projection.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n    };\n\n    projection.clipAngle = function(_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n    };\n\n    projection.clipExtent = function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function(_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n\n    projection.translate = function(_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n\n    projection.center = function(_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n    };\n\n    projection.rotate = function(_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n    };\n\n    projection.precision = function(_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n    };\n\n    projection.fitExtent = fitExtent(projection);\n\n    projection.fitSize = fitSize(projection);\n\n    function recenter() {\n      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n      var center = project(lambda, phi);\n      dx = x - center[0] * k;\n      dy = y + center[1] * k;\n      return reset();\n    }\n\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n        phi1 = pi$4 / 3,\n        m = projectionMutator(projectAt),\n        p = m(phi0, phi1);\n\n    p.parallels = function(_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n    };\n\n    return p;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n        n = (sy0 + sin$1(y1)) / 2,\n        c = 1 + sy0 * (2 * n - sy0),\n        r0 = sqrt$1(c) / n;\n\n    function project(x, y) {\n      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n\n    project.invert = function(x, y) {\n      var r0y = r0 - y;\n      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n\n    return project;\n  }\n\n  function conicEqualArea() {\n    return conicProjection(conicEqualAreaRaw)\n        .scale(155.424)\n        .center([0, 33.6442]);\n  }\n\n  function albers() {\n    return conicEqualArea()\n        .parallels([29.5, 45.5])\n        .scale(1070)\n        .translate([480, 250])\n        .rotate([96, 0])\n        .center([-0.6, 38.7]);\n  }\n\n  // The projections must have mutually exclusive clip regions on the sphere,\n  // as this will avoid emitting interleaving lines and polygons.\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n    };\n  }\n\n  // A composite projection for the United States, configured by default for\n  // 960×500. The projection also works quite well at 960×600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n  function albersUsa() {\n    var cache,\n        cacheStream,\n        lower48 = albers(), lower48Point,\n        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n        point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      return point = null,\n          (lower48Point.point(x, y), point)\n          || (alaskaPoint.point(x, y), point)\n          || (hawaiiPoint.point(x, y), point);\n    }\n\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n          : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n\n      lower48Point = lower48\n          .translate(_)\n          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n          .stream(pointStream);\n\n      alaskaPoint = alaska\n          .translate([x - 0.307 * k, y + 0.201 * k])\n          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      hawaiiPoint = hawaii\n          .translate([x - 0.205 * k, y + 0.212 * k])\n          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      return albersUsa;\n    };\n\n    albersUsa.fitExtent = fitExtent(albersUsa);\n\n    albersUsa.fitSize = fitSize(albersUsa);\n\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function(x, y) {\n      var cx = cos$1(x),\n          cy = cos$1(y),\n          k = scale(cx * cy);\n      return [\n        k * cy * sin$1(x),\n        k * sin$1(y)\n      ];\n    }\n  }\n\n  function azimuthalInvert(angle) {\n    return function(x, y) {\n      var z = sqrt$1(x * x + y * y),\n          c = angle(z),\n          sc = sin$1(c),\n          cc = cos$1(c);\n      return [\n        atan2(x * sc, z * cc),\n        asin$1(z && y * sc / z)\n      ];\n    }\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n    return sqrt$1(2 / (1 + cxcy));\n  });\n\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n    return 2 * asin$1(z / 2);\n  });\n\n  function azimuthalEqualArea() {\n    return projection(azimuthalEqualAreaRaw)\n        .scale(124.75)\n        .clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n    return (c = acos(c)) && c / sin$1(c);\n  });\n\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n    return z;\n  });\n\n  function azimuthalEquidistant() {\n    return projection(azimuthalEquidistantRaw)\n        .scale(79.4188)\n        .clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n  }\n\n  mercatorRaw.invert = function(x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$3];\n  };\n\n  function mercator() {\n    return mercatorProjection(mercatorRaw)\n        .scale(961 / tau$4);\n  }\n\n  function mercatorProjection(project) {\n    var m = projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function(_) {\n      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n    };\n\n    m.translate = function(_) {\n      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n    };\n\n    m.clipExtent = function(_) {\n      if (!arguments.length) return clipAuto ? null : clipExtent();\n      if (clipAuto = _ == null) {\n        var k = pi$4 * scale(),\n            t = translate();\n        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n      }\n      clipExtent(_);\n      return m;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  function tany(y) {\n    return tan((halfPi$3 + y) / 2);\n  }\n\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n        f = cy0 * pow$1(tany(y0), n) / n;\n\n    if (!n) return mercatorRaw;\n\n    function project(x, y) {\n      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n      var r = f / pow$1(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n\n    project.invert = function(x, y) {\n      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n    };\n\n    return project;\n  }\n\n  function conicConformal() {\n    return conicProjection(conicConformalRaw)\n        .scale(109.5)\n        .parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n\n  equirectangularRaw.invert = equirectangularRaw;\n\n  function equirectangular() {\n    return projection(equirectangularRaw)\n        .scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n        g = cy0 / n + y0;\n\n    if (abs(n) < epsilon$4) return equirectangularRaw;\n\n    function project(x, y) {\n      var gy = g - y, nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n\n    project.invert = function(x, y) {\n      var gy = g - y;\n      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n    };\n\n    return project;\n  }\n\n  function conicEquidistant() {\n    return conicProjection(conicEquidistantRaw)\n        .scale(131.154)\n        .center([0, 13.9389]);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y), k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  gnomonicRaw.invert = azimuthalInvert(atan);\n\n  function gnomonic() {\n    return projection(gnomonicRaw)\n        .scale(144.049)\n        .clipAngle(60);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n\n  function orthographic() {\n    return projection(orthographicRaw)\n        .scale(249.5)\n        .clipAngle(90 + epsilon$4);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  stereographicRaw.invert = azimuthalInvert(function(z) {\n    return 2 + atan(z);\n  });\n\n  function stereographic() {\n    return projection(stereographicRaw)\n        .scale(250)\n        .clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n  }\n\n  transverseMercatorRaw.invert = function(x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$3];\n  };\n\n  function transverseMercator() {\n    var m = mercatorProjection(transverseMercatorRaw),\n        center = m.center,\n        rotate = m.rotate;\n\n    m.center = function(_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    m.rotate = function(_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90])\n        .scale(159.155);\n  }\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = threshold;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n  exports.entries = entries;\n  exports.keys = keys;\n  exports.values = values;\n  exports.map = map$1;\n  exports.set = set;\n  exports.nest = nest;\n  exports.randomUniform = uniform;\n  exports.randomNormal = normal;\n  exports.randomLogNormal = logNormal;\n  exports.randomBates = bates;\n  exports.randomIrwinHall = irwinHall;\n  exports.randomExponential = exponential;\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = easeCubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = easeCubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n  exports.polygonArea = area;\n  exports.polygonCentroid = centroid;\n  exports.polygonHull = hull;\n  exports.polygonContains = contains;\n  exports.polygonLength = length$1;\n  exports.path = path;\n  exports.quadtree = quadtree;\n  exports.queue = queue;\n  exports.arc = arc;\n  exports.area = area$1;\n  exports.line = line;\n  exports.pie = pie;\n  exports.radialArea = radialArea;\n  exports.radialLine = radialLine$1;\n  exports.symbol = symbol;\n  exports.symbols = symbols;\n  exports.symbolCircle = circle;\n  exports.symbolCross = cross$1;\n  exports.symbolDiamond = diamond;\n  exports.symbolSquare = square;\n  exports.symbolStar = star;\n  exports.symbolTriangle = triangle;\n  exports.symbolWye = wye;\n  exports.curveBasisClosed = basisClosed;\n  exports.curveBasisOpen = basisOpen;\n  exports.curveBasis = basis;\n  exports.curveBundle = bundle;\n  exports.curveCardinalClosed = cardinalClosed;\n  exports.curveCardinalOpen = cardinalOpen;\n  exports.curveCardinal = cardinal;\n  exports.curveCatmullRomClosed = catmullRomClosed;\n  exports.curveCatmullRomOpen = catmullRomOpen;\n  exports.curveCatmullRom = catmullRom;\n  exports.curveLinearClosed = linearClosed;\n  exports.curveLinear = curveLinear;\n  exports.curveMonotoneX = monotoneX;\n  exports.curveMonotoneY = monotoneY;\n  exports.curveNatural = natural;\n  exports.curveStep = step;\n  exports.curveStepAfter = stepAfter;\n  exports.curveStepBefore = stepBefore;\n  exports.stack = stack;\n  exports.stackOffsetExpand = expand;\n  exports.stackOffsetNone = none;\n  exports.stackOffsetSilhouette = silhouette;\n  exports.stackOffsetWiggle = wiggle;\n  exports.stackOrderAscending = ascending$1;\n  exports.stackOrderDescending = descending$2;\n  exports.stackOrderInsideOut = insideOut;\n  exports.stackOrderNone = none$1;\n  exports.stackOrderReverse = reverse;\n  exports.color = color;\n  exports.rgb = colorRgb;\n  exports.hsl = colorHsl;\n  exports.lab = lab;\n  exports.hcl = colorHcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolate = interpolate;\n  exports.interpolateArray = array$1;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = interpolateNumber;\n  exports.interpolateObject = object;\n  exports.interpolateRound = interpolateRound;\n  exports.interpolateString = interpolateString;\n  exports.interpolateTransformCss = interpolateTransform$1;\n  exports.interpolateTransformSvg = interpolateTransform$2;\n  exports.interpolateZoom = interpolateZoom;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$1;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$1;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n  exports.interpolateBasis = basis$2;\n  exports.interpolateBasisClosed = basisClosed$1;\n  exports.quantize = quantize;\n  exports.dispatch = dispatch;\n  exports.dsvFormat = dsv;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatRows = csvFormatRows;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatRows = tsvFormatRows;\n  exports.request = request;\n  exports.html = html;\n  exports.json = json;\n  exports.text = text;\n  exports.xml = xml;\n  exports.csv = csv$1;\n  exports.tsv = tsv$1;\n  exports.now = now;\n  exports.timer = timer;\n  exports.timerFlush = timerFlush;\n  exports.timeout = timeout$1;\n  exports.interval = interval$1;\n  exports.timeInterval = newInterval;\n  exports.timeMillisecond = millisecond;\n  exports.timeMilliseconds = milliseconds;\n  exports.timeSecond = second;\n  exports.timeSeconds = seconds;\n  exports.timeMinute = minute;\n  exports.timeMinutes = minutes;\n  exports.timeHour = hour;\n  exports.timeHours = hours;\n  exports.timeDay = day;\n  exports.timeDays = days;\n  exports.timeWeek = timeWeek;\n  exports.timeWeeks = sundays;\n  exports.timeSunday = timeWeek;\n  exports.timeSundays = sundays;\n  exports.timeMonday = timeMonday;\n  exports.timeMondays = mondays;\n  exports.timeTuesday = tuesday;\n  exports.timeTuesdays = tuesdays;\n  exports.timeWednesday = wednesday;\n  exports.timeWednesdays = wednesdays;\n  exports.timeThursday = thursday;\n  exports.timeThursdays = thursdays;\n  exports.timeFriday = friday;\n  exports.timeFridays = fridays;\n  exports.timeSaturday = saturday;\n  exports.timeSaturdays = saturdays;\n  exports.timeMonth = month;\n  exports.timeMonths = months;\n  exports.timeYear = year;\n  exports.timeYears = years;\n  exports.utcMillisecond = millisecond;\n  exports.utcMilliseconds = milliseconds;\n  exports.utcSecond = second;\n  exports.utcSeconds = seconds;\n  exports.utcMinute = utcMinute;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHour = utcHour;\n  exports.utcHours = utcHours;\n  exports.utcDay = utcDay;\n  exports.utcDays = utcDays;\n  exports.utcWeek = utcWeek;\n  exports.utcWeeks = utcSundays;\n  exports.utcSunday = utcWeek;\n  exports.utcSundays = utcSundays;\n  exports.utcMonday = utcMonday;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesday = utcTuesday;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesday = utcWednesday;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursday = utcThursday;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFriday = utcFriday;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturday = utcSaturday;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcMonth = utcMonth;\n  exports.utcMonths = utcMonths;\n  exports.utcYear = utcYear;\n  exports.utcYears = utcYears;\n  exports.formatLocale = formatLocale;\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n  exports.timeFormatLocale = formatLocale$1;\n  exports.timeFormatDefaultLocale = defaultLocale$1;\n  exports.scaleBand = band;\n  exports.scalePoint = point$4;\n  exports.scaleIdentity = identity$4;\n  exports.scaleLinear = linear$2;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile;\n  exports.scaleQuantize = quantize$1;\n  exports.scaleThreshold = threshold$1;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.scaleSequential = sequential;\n  exports.interpolateCubehelixDefault = cubehelix$3;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.creator = creator;\n  exports.customEvent = customEvent;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = window;\n  exports.active = active;\n  exports.interrupt = interrupt;\n  exports.transition = transition;\n  exports.axisTop = axisTop;\n  exports.axisRight = axisRight;\n  exports.axisBottom = axisBottom;\n  exports.axisLeft = axisLeft;\n  exports.cluster = cluster;\n  exports.hierarchy = hierarchy;\n  exports.pack = index;\n  exports.packSiblings = siblings;\n  exports.packEnclose = enclose;\n  exports.partition = partition;\n  exports.stratify = stratify;\n  exports.tree = tree;\n  exports.treemap = index$1;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.treemapResquarify = resquarify;\n  exports.forceCenter = center$1;\n  exports.forceCollide = collide;\n  exports.forceLink = link;\n  exports.forceManyBody = manyBody;\n  exports.forceSimulation = simulation;\n  exports.forceX = x$3;\n  exports.forceY = y$3;\n  exports.drag = drag;\n  exports.dragDisable = dragDisable;\n  exports.dragEnable = dragEnable;\n  exports.voronoi = voronoi;\n  exports.zoom = zoom;\n  exports.zoomIdentity = identity$6;\n  exports.zoomTransform = transform;\n  exports.brush = brush;\n  exports.brushX = brushX;\n  exports.brushY = brushY;\n  exports.brushSelection = brushSelection;\n  exports.chord = chord;\n  exports.ribbon = ribbon;\n  exports.geoAlbers = albers;\n  exports.geoAlbersUsa = albersUsa;\n  exports.geoArea = area$2;\n  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n  exports.geoBounds = bounds;\n  exports.geoCentroid = centroid$1;\n  exports.geoCircle = circle$1;\n  exports.geoClipExtent = extent$1;\n  exports.geoConicConformal = conicConformal;\n  exports.geoConicConformalRaw = conicConformalRaw;\n  exports.geoConicEqualArea = conicEqualArea;\n  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n  exports.geoConicEquidistant = conicEquidistant;\n  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n  exports.geoDistance = distance;\n  exports.geoEquirectangular = equirectangular;\n  exports.geoEquirectangularRaw = equirectangularRaw;\n  exports.geoGnomonic = gnomonic;\n  exports.geoGnomonicRaw = gnomonicRaw;\n  exports.geoGraticule = graticule;\n  exports.geoInterpolate = interpolate$2;\n  exports.geoLength = length$2;\n  exports.geoMercator = mercator;\n  exports.geoMercatorRaw = mercatorRaw;\n  exports.geoOrthographic = orthographic;\n  exports.geoOrthographicRaw = orthographicRaw;\n  exports.geoPath = index$3;\n  exports.geoProjection = projection;\n  exports.geoProjectionMutator = projectionMutator;\n  exports.geoRotation = rotation;\n  exports.geoStereographic = stereographic;\n  exports.geoStereographicRaw = stereographicRaw;\n  exports.geoStream = geoStream;\n  exports.geoTransform = transform$1;\n  exports.geoTransverseMercator = transverseMercator;\n  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/build/d3.js\n ** module id = 3\n ** module chunks = 0\n **/","if (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\nrequire('whatwg-fetch');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/config/polyfills.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\nvar BrowserMutationObserver = global.MutationObserver || global.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/asap/browser-raw.js\n ** module id = 5\n ** module chunks = 0\n **/","const d3 = require('d3')\nconst forceG = require('d3-force-gravity')\n\nconst canvas = document.querySelector('canvas')\nconst {width, height} = canvas\n\nconst nodes = d3.range(40).map(i => ({\n\tindex: i,\n\tx: width / 2,\n\ty: 0,\n\tr: 5\n}))\n\nconst context = canvas.getContext('2d')\nconst tau = 2 * Math.PI\n\nconst render = () => {\n\tcontext.clearRect(0, 0, width, height)\n\tcontext.save()\n\n\tcontext.beginPath()\n\tnodes.forEach(function(d) {\n\t\tcontext.moveTo(d.x + d.r, d.y)\n\t\tcontext.arc(d.x, d.y, d.r, 0, tau)\n\t})\n\tcontext.fillStyle = '#ddd'\n\tcontext.fill()\n\tcontext.strokeStyle = '#333'\n\tcontext.stroke()\n\n\tcontext.restore()\n}\n\nd3.forceSimulation()\n\t.nodes(nodes)\n\t.force('g', forceG(width / 2, height / 2)\n\t\t.minRadius(50)\n\t\t.strength(10000))\n\t.force('collide', d3.forceCollide().radius(() => 7).iterations(2))\n\t.alphaTarget(0.4)\n\t.on('tick', render)\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/es6-extensions.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/promise/lib/rejection-tracking.js\n ** module id = 8\n ** module chunks = 0\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var list = this.map[name]\n    if (!list) {\n      list = []\n      this.map[name] = list\n    }\n    list.push(value)\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    var values = this.map[normalizeName(name)]\n    return values ? values[0] : null\n  }\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || []\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)]\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    reader.readAsArrayBuffer(blob)\n    return fileReaderReady(reader)\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    reader.readAsText(blob)\n    return fileReaderReady(reader)\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (!body) {\n        this._bodyText = ''\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        // Only support ArrayBuffers for POST method.\n        // Receiving ArrayBuffers happens via Blobs, instead.\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n\n      this.text = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob)\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text')\n        } else {\n          return Promise.resolve(this._bodyText)\n        }\n      }\n    } else {\n      this.text = function() {\n        var rejected = consumed(this)\n        return rejected ? rejected : Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = input\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this)\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function headers(xhr) {\n    var head = new Headers()\n    var pairs = (xhr.getAllResponseHeaders() || '').trim().split('\\n')\n    pairs.forEach(function(header) {\n      var split = header.trim().split(':')\n      var key = split.shift().trim()\n      var value = split.join(':').trim()\n      head.append(key, value)\n    })\n    return head\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = options.statusText\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input\n      } else {\n        request = new Request(input, init)\n      }\n\n      var xhr = new XMLHttpRequest()\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL\n        }\n\n        // Avoid security warnings on getResponseHeader when not allowed by CORS\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL')\n        }\n\n        return\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-scripts/~/whatwg-fetch/fetch.js\n ** module id = 9\n ** module chunks = 0\n **/"],"sourceRoot":""}